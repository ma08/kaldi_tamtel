# nnet3-am-info telugu_exp/chain_cleaned_1d/tdnn1d_sp/16.mdl && nnet3-show-progress --use-gpu=no telugu_exp/chain_cleaned_1d/tdnn1d_sp/15.mdl telugu_exp/chain_cleaned_1d/tdnn1d_sp/16.mdl 
# Started at Thu Jul 21 12:59:29 EDT 2022
#
nnet3-am-info telugu_exp/chain_cleaned_1d/tdnn1d_sp/16.mdl 
input-dim: 40
ivector-dim: 100
num-pdfs: 2824
prior-dimension: 0
# Nnet info follows.
left-context: 28
right-context: 28
num-parameters: 9032208
modulus: 1
input-node name=ivector dim=100
input-node name=input dim=40
component-node name=lda component=lda input=Append(Offset(input, -1), input, Offset(input, 1), ReplaceIndex(ivector, t, 0)) input-dim=220 output-dim=220
component-node name=tdnn1.affine component=tdnn1.affine input=lda input-dim=220 output-dim=1024
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=1024 output-dim=1024
component-node name=tdnn1.batchnorm component=tdnn1.batchnorm input=tdnn1.relu input-dim=1024 output-dim=1024
component-node name=tdnn1.dropout component=tdnn1.dropout input=tdnn1.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.linear component=tdnnf2.linear input=tdnn1.dropout input-dim=1024 output-dim=128
component-node name=tdnnf2.affine component=tdnnf2.affine input=tdnnf2.linear input-dim=128 output-dim=1024
component-node name=tdnnf2.relu component=tdnnf2.relu input=tdnnf2.affine input-dim=1024 output-dim=1024
component-node name=tdnnf2.batchnorm component=tdnnf2.batchnorm input=tdnnf2.relu input-dim=1024 output-dim=1024
component-node name=tdnnf2.dropout component=tdnnf2.dropout input=tdnnf2.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.noop component=tdnnf2.noop input=Sum(Scale(0.66, tdnn1.dropout), tdnnf2.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf3.linear component=tdnnf3.linear input=tdnnf2.noop input-dim=1024 output-dim=128
component-node name=tdnnf3.affine component=tdnnf3.affine input=tdnnf3.linear input-dim=128 output-dim=1024
component-node name=tdnnf3.relu component=tdnnf3.relu input=tdnnf3.affine input-dim=1024 output-dim=1024
component-node name=tdnnf3.batchnorm component=tdnnf3.batchnorm input=tdnnf3.relu input-dim=1024 output-dim=1024
component-node name=tdnnf3.dropout component=tdnnf3.dropout input=tdnnf3.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf3.noop component=tdnnf3.noop input=Sum(Scale(0.66, tdnnf2.noop), tdnnf3.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf4.linear component=tdnnf4.linear input=tdnnf3.noop input-dim=1024 output-dim=128
component-node name=tdnnf4.affine component=tdnnf4.affine input=tdnnf4.linear input-dim=128 output-dim=1024
component-node name=tdnnf4.relu component=tdnnf4.relu input=tdnnf4.affine input-dim=1024 output-dim=1024
component-node name=tdnnf4.batchnorm component=tdnnf4.batchnorm input=tdnnf4.relu input-dim=1024 output-dim=1024
component-node name=tdnnf4.dropout component=tdnnf4.dropout input=tdnnf4.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf4.noop component=tdnnf4.noop input=Sum(Scale(0.66, tdnnf3.noop), tdnnf4.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf5.linear component=tdnnf5.linear input=tdnnf4.noop input-dim=1024 output-dim=128
component-node name=tdnnf5.affine component=tdnnf5.affine input=tdnnf5.linear input-dim=128 output-dim=1024
component-node name=tdnnf5.relu component=tdnnf5.relu input=tdnnf5.affine input-dim=1024 output-dim=1024
component-node name=tdnnf5.batchnorm component=tdnnf5.batchnorm input=tdnnf5.relu input-dim=1024 output-dim=1024
component-node name=tdnnf5.dropout component=tdnnf5.dropout input=tdnnf5.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf5.noop component=tdnnf5.noop input=Sum(Scale(0.66, tdnnf4.noop), tdnnf5.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf6.linear component=tdnnf6.linear input=tdnnf5.noop input-dim=1024 output-dim=128
component-node name=tdnnf6.affine component=tdnnf6.affine input=tdnnf6.linear input-dim=128 output-dim=1024
component-node name=tdnnf6.relu component=tdnnf6.relu input=tdnnf6.affine input-dim=1024 output-dim=1024
component-node name=tdnnf6.batchnorm component=tdnnf6.batchnorm input=tdnnf6.relu input-dim=1024 output-dim=1024
component-node name=tdnnf6.dropout component=tdnnf6.dropout input=tdnnf6.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf6.noop component=tdnnf6.noop input=Sum(Scale(0.66, tdnnf5.noop), tdnnf6.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf7.linear component=tdnnf7.linear input=tdnnf6.noop input-dim=1024 output-dim=128
component-node name=tdnnf7.affine component=tdnnf7.affine input=tdnnf7.linear input-dim=128 output-dim=1024
component-node name=tdnnf7.relu component=tdnnf7.relu input=tdnnf7.affine input-dim=1024 output-dim=1024
component-node name=tdnnf7.batchnorm component=tdnnf7.batchnorm input=tdnnf7.relu input-dim=1024 output-dim=1024
component-node name=tdnnf7.dropout component=tdnnf7.dropout input=tdnnf7.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf7.noop component=tdnnf7.noop input=Sum(Scale(0.66, tdnnf6.noop), tdnnf7.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf8.linear component=tdnnf8.linear input=tdnnf7.noop input-dim=1024 output-dim=128
component-node name=tdnnf8.affine component=tdnnf8.affine input=tdnnf8.linear input-dim=128 output-dim=1024
component-node name=tdnnf8.relu component=tdnnf8.relu input=tdnnf8.affine input-dim=1024 output-dim=1024
component-node name=tdnnf8.batchnorm component=tdnnf8.batchnorm input=tdnnf8.relu input-dim=1024 output-dim=1024
component-node name=tdnnf8.dropout component=tdnnf8.dropout input=tdnnf8.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf8.noop component=tdnnf8.noop input=Sum(Scale(0.66, tdnnf7.noop), tdnnf8.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf9.linear component=tdnnf9.linear input=tdnnf8.noop input-dim=1024 output-dim=128
component-node name=tdnnf9.affine component=tdnnf9.affine input=tdnnf9.linear input-dim=128 output-dim=1024
component-node name=tdnnf9.relu component=tdnnf9.relu input=tdnnf9.affine input-dim=1024 output-dim=1024
component-node name=tdnnf9.batchnorm component=tdnnf9.batchnorm input=tdnnf9.relu input-dim=1024 output-dim=1024
component-node name=tdnnf9.dropout component=tdnnf9.dropout input=tdnnf9.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf9.noop component=tdnnf9.noop input=Sum(Scale(0.66, tdnnf8.noop), tdnnf9.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf10.linear component=tdnnf10.linear input=tdnnf9.noop input-dim=1024 output-dim=128
component-node name=tdnnf10.affine component=tdnnf10.affine input=tdnnf10.linear input-dim=128 output-dim=1024
component-node name=tdnnf10.relu component=tdnnf10.relu input=tdnnf10.affine input-dim=1024 output-dim=1024
component-node name=tdnnf10.batchnorm component=tdnnf10.batchnorm input=tdnnf10.relu input-dim=1024 output-dim=1024
component-node name=tdnnf10.dropout component=tdnnf10.dropout input=tdnnf10.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf10.noop component=tdnnf10.noop input=Sum(Scale(0.66, tdnnf9.noop), tdnnf10.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf11.linear component=tdnnf11.linear input=tdnnf10.noop input-dim=1024 output-dim=128
component-node name=tdnnf11.affine component=tdnnf11.affine input=tdnnf11.linear input-dim=128 output-dim=1024
component-node name=tdnnf11.relu component=tdnnf11.relu input=tdnnf11.affine input-dim=1024 output-dim=1024
component-node name=tdnnf11.batchnorm component=tdnnf11.batchnorm input=tdnnf11.relu input-dim=1024 output-dim=1024
component-node name=tdnnf11.dropout component=tdnnf11.dropout input=tdnnf11.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf11.noop component=tdnnf11.noop input=Sum(Scale(0.66, tdnnf10.noop), tdnnf11.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf12.linear component=tdnnf12.linear input=tdnnf11.noop input-dim=1024 output-dim=128
component-node name=tdnnf12.affine component=tdnnf12.affine input=tdnnf12.linear input-dim=128 output-dim=1024
component-node name=tdnnf12.relu component=tdnnf12.relu input=tdnnf12.affine input-dim=1024 output-dim=1024
component-node name=tdnnf12.batchnorm component=tdnnf12.batchnorm input=tdnnf12.relu input-dim=1024 output-dim=1024
component-node name=tdnnf12.dropout component=tdnnf12.dropout input=tdnnf12.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf12.noop component=tdnnf12.noop input=Sum(Scale(0.66, tdnnf11.noop), tdnnf12.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf13.linear component=tdnnf13.linear input=tdnnf12.noop input-dim=1024 output-dim=128
component-node name=tdnnf13.affine component=tdnnf13.affine input=tdnnf13.linear input-dim=128 output-dim=1024
component-node name=tdnnf13.relu component=tdnnf13.relu input=tdnnf13.affine input-dim=1024 output-dim=1024
component-node name=tdnnf13.batchnorm component=tdnnf13.batchnorm input=tdnnf13.relu input-dim=1024 output-dim=1024
component-node name=tdnnf13.dropout component=tdnnf13.dropout input=tdnnf13.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf13.noop component=tdnnf13.noop input=Sum(Scale(0.66, tdnnf12.noop), tdnnf13.dropout) input-dim=1024 output-dim=1024
component-node name=prefinal-l component=prefinal-l input=tdnnf13.noop input-dim=1024 output-dim=256
component-node name=prefinal-chain.affine component=prefinal-chain.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-chain.relu component=prefinal-chain.relu input=prefinal-chain.affine input-dim=1024 output-dim=1024
component-node name=prefinal-chain.batchnorm1 component=prefinal-chain.batchnorm1 input=prefinal-chain.relu input-dim=1024 output-dim=1024
component-node name=prefinal-chain.linear component=prefinal-chain.linear input=prefinal-chain.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-chain.batchnorm2 component=prefinal-chain.batchnorm2 input=prefinal-chain.linear input-dim=256 output-dim=256
component-node name=output.affine component=output.affine input=prefinal-chain.batchnorm2 input-dim=256 output-dim=2824
output-node name=output input=output.affine dim=2824 objective=linear
component-node name=prefinal-xent.affine component=prefinal-xent.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-xent.relu component=prefinal-xent.relu input=prefinal-xent.affine input-dim=1024 output-dim=1024
component-node name=prefinal-xent.batchnorm1 component=prefinal-xent.batchnorm1 input=prefinal-xent.relu input-dim=1024 output-dim=1024
component-node name=prefinal-xent.linear component=prefinal-xent.linear input=prefinal-xent.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-xent.batchnorm2 component=prefinal-xent.batchnorm2 input=prefinal-xent.linear input-dim=256 output-dim=256
component-node name=output-xent.affine component=output-xent.affine input=prefinal-xent.batchnorm2 input-dim=256 output-dim=2824
component-node name=output-xent.log-softmax component=output-xent.log-softmax input=output-xent.affine input-dim=2824 output-dim=2824
output-node name=output-xent input=output-xent.log-softmax dim=2824 objective=linear
component name=lda type=FixedAffineComponent, input-dim=220, output-dim=220, linear-params-rms=0.005747, bias-{mean,stddev}=-0.001007,0.01284
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=220, output-dim=1024, learning-rate=0.000580698, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.02661, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.07,0.08,0.09 0.12,0.18,0.33,0.46,0.58 0.70,0.85,0.96,1.3), mean=0.347, stddev=0.188], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.48,0.49,0.50,0.53 0.56,0.61,0.77,0.99,1.1 1.3,1.4,1.5,1.5), mean=0.818, stddev=0.237], bias-{mean,stddev}=-0.00289,0.03386, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=2.95e+06, self-repaired-proportion=0.0435965, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.0002,0.0003,0.0005 0.0008,0.002,0.02,0.04,0.05 0.05,0.06,0.06,0.09), mean=0.022, stddev=0.0184], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.05,0.05,0.06 0.08,0.11,0.45,0.70,0.83 0.89,0.93,0.95,0.98), mean=0.428, stddev=0.284], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.04,0.04,0.04 0.05,0.06,0.09,0.13,0.16 0.18,0.21,0.23,0.34), mean=0.0969, stddev=0.0444], oderiv-count=4.35059e+06
component name=tdnn1.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=46539.5, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-06,4e-05,9e-05,0.0003 0.0005,0.001,0.02,0.04,0.05 0.05,0.06,0.06,0.08), mean=0.0218, stddev=0.0186], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.0005,0.0008,0.002 0.003,0.006,0.03,0.04,0.05 0.05,0.06,0.06,0.10), mean=0.0263, stddev=0.0175]
component name=tdnn1.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf2.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000580698, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.01774, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.80,0.80,0.80,0.80 0.80,0.80,0.80,0.80,0.81 0.81,0.81,0.81,0.81), mean=0.803, stddev=0.00224], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.11,0.12,0.13 0.13,0.15,0.19,0.23,0.26 0.29,0.33,0.35,0.43), mean=0.194, stddev=0.0507], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000580698, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.01467, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.12,0.13,0.14 0.16,0.17,0.21,0.27,0.32 0.35,0.39,0.41,0.44), mean=0.226, stddev=0.0637], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.39,0.41,0.42,0.42 0.43,0.44,0.47,0.49,0.51 0.53,0.54,0.55,0.58), mean=0.468, stddev=0.0316], bias-{mean,stddev}=-0.03644,0.05664, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=3.05e+06, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.04,0.05,0.06 0.07,0.08,0.10,0.11,0.12 0.13,0.14,0.15,0.17), mean=0.0977, stddev=0.0209], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.21,0.27,0.32 0.34,0.38,0.45,0.51,0.55 0.59,0.63,0.66,0.74), mean=0.446, stddev=0.0848], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.007,0.008,0.008,0.009 0.009,0.01,0.01,0.01,0.02 0.02,0.02,0.02,0.03), mean=0.0123, stddev=0.00342], oderiv-count=4.29408e+06
component name=tdnnf2.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=46027.5, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.04,0.05,0.06 0.07,0.08,0.10,0.11,0.12 0.13,0.14,0.15,0.17), mean=0.0972, stddev=0.0212], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.10,0.10,0.12 0.12,0.14,0.16,0.19,0.20 0.22,0.24,0.25,0.30), mean=0.164, stddev=0.0315]
component name=tdnnf2.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf2.noop type=NoOpComponent, dim=1024
component name=tdnnf3.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000580698, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.01359, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.61,0.61,0.61,0.61 0.61,0.61,0.62,0.62,0.62 0.62,0.62,0.62,0.62), mean=0.615, stddev=0.00151], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.10,0.11,0.12 0.12,0.13,0.15,0.17,0.18 0.20,0.21,0.22,0.24), mean=0.152, stddev=0.0246], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000580698, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.01189, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.12,0.13,0.13 0.14,0.15,0.18,0.22,0.24 0.25,0.27,0.30,0.33), mean=0.187, stddev=0.0368], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.32,0.33,0.33,0.35 0.35,0.36,0.38,0.40,0.41 0.42,0.42,0.43,0.44), mean=0.38, stddev=0.0222], bias-{mean,stddev}=-0.01825,0.03006, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=3.13e+06, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.08,0.09,0.09 0.10,0.11,0.12,0.14,0.15 0.16,0.17,0.17,0.20), mean=0.123, stddev=0.0199], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.31,0.34,0.36,0.39 0.40,0.43,0.46,0.50,0.52 0.54,0.56,0.57,0.63), mean=0.463, stddev=0.0478], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.005,0.005,0.006 0.006,0.006,0.007,0.008,0.009 0.01,0.01,0.01,0.02), mean=0.00732, stddev=0.00139], oderiv-count=4.59034e+06
component name=tdnnf3.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=45515.5, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.08,0.08,0.09 0.10,0.11,0.12,0.14,0.15 0.16,0.17,0.18,0.21), mean=0.123, stddev=0.0207], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.13,0.14,0.16 0.17,0.18,0.20,0.23,0.25 0.26,0.28,0.29,0.37), mean=0.205, stddev=0.0327]
component name=tdnnf3.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf3.noop type=NoOpComponent, dim=1024
component name=tdnnf4.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000580698, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.0122, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.55,0.55,0.55,0.55 0.55,0.55,0.55,0.55,0.55 0.55,0.55,0.55,0.55), mean=0.552, stddev=0.000622], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.10,0.11,0.11 0.11,0.12,0.13,0.15,0.16 0.17,0.18,0.19,0.21), mean=0.137, stddev=0.0183], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000580698, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.01105, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.12,0.13,0.13 0.14,0.15,0.17,0.20,0.21 0.22,0.24,0.25,0.31), mean=0.175, stddev=0.0275], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.30,0.30,0.30,0.31 0.32,0.33,0.35,0.37,0.38 0.39,0.41,0.42,0.43), mean=0.353, stddev=0.0243], bias-{mean,stddev}=-0.01138,0.02161, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=1.03e+06, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.09,0.09,0.10 0.10,0.11,0.12,0.14,0.14 0.15,0.16,0.16,0.19), mean=0.122, stddev=0.0157], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.29,0.36,0.38,0.39 0.41,0.43,0.46,0.49,0.51 0.52,0.53,0.54,0.57), mean=0.458, stddev=0.0395], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.007,0.008,0.008,0.009 0.009,0.01,0.01,0.01,0.01 0.01,0.02,0.02,0.02), mean=0.0115, stddev=0.00175], oderiv-count=1.55885e+06
component name=tdnnf4.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=15171.8, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.08,0.09,0.09 0.10,0.11,0.12,0.13,0.14 0.15,0.16,0.17,0.19), mean=0.121, stddev=0.0164], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.14,0.15,0.16 0.17,0.18,0.21,0.23,0.24 0.25,0.26,0.27,0.38), mean=0.206, stddev=0.027]
component name=tdnnf4.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf4.noop type=NoOpComponent, dim=1024
component name=tdnnf5.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000580698, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=0, linear-params-rms=0.01225, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.39,0.39,0.39,0.39 0.39,0.39,0.39,0.39,0.39 0.39,0.39,0.39,0.39), mean=0.392, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.11,0.11,0.12 0.12,0.13,0.14,0.15,0.15 0.16,0.17,0.17,0.20), mean=0.138, stddev=0.0128], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000580698, l2-regularize=0.008, max-change=0.75, time-offsets=0, linear-params-rms=0.01196, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.08,0.09,0.10 0.10,0.11,0.13,0.15,0.17 0.18,0.19,0.20,0.24), mean=0.133, stddev=0.0246], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.31,0.31,0.33,0.34 0.35,0.36,0.38,0.40,0.41 0.42,0.43,0.43,0.45), mean=0.382, stddev=0.0257], bias-{mean,stddev}=-0.01015,0.03106, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=1.02e+06, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.04,0.04,0.05 0.05,0.06,0.07,0.08,0.09 0.10,0.10,0.11,0.12), mean=0.0718, stddev=0.0149], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.23,0.25,0.30 0.33,0.36,0.43,0.49,0.53 0.57,0.60,0.63,0.75), mean=0.428, stddev=0.0831], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.01,0.01,0.01 0.02,0.02,0.02,0.02,0.02 0.03,0.03,0.03,0.03), mean=0.0195, stddev=0.00327], oderiv-count=1.52461e+06
component name=tdnnf5.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=15171.8, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.03,0.04,0.05 0.05,0.06,0.07,0.08,0.09 0.10,0.10,0.11,0.12), mean=0.0709, stddev=0.015], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.08,0.08,0.09 0.10,0.11,0.12,0.14,0.15 0.16,0.17,0.17,0.20), mean=0.124, stddev=0.0204]
component name=tdnnf5.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf5.noop type=NoOpComponent, dim=1024
component name=tdnnf6.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000580698, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01183, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.53,0.53,0.53,0.53 0.53,0.53,0.54,0.54,0.54 0.54,0.54,0.54,0.54), mean=0.535, stddev=0.00101], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.10,0.10,0.11 0.11,0.12,0.13,0.15,0.15 0.16,0.17,0.17,0.21), mean=0.133, stddev=0.0158], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000580698, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.01092, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.12,0.12,0.13 0.14,0.15,0.17,0.19,0.20 0.22,0.23,0.24,0.32), mean=0.173, stddev=0.0257], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.29,0.29,0.29,0.30 0.31,0.33,0.35,0.37,0.38 0.40,0.41,0.42,0.51), mean=0.348, stddev=0.0288], bias-{mean,stddev}=-0.0235,0.02169, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.43e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.08,0.09,0.09 0.10,0.10,0.11,0.13,0.13 0.14,0.14,0.15,0.20), mean=0.114, stddev=0.0142], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.29,0.35,0.36,0.37 0.39,0.41,0.44,0.48,0.50 0.52,0.54,0.55,0.60), mean=0.446, stddev=0.0451], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.008,0.009,0.009,0.009 0.01,0.01,0.01,0.01,0.01 0.01,0.02,0.02,0.02), mean=0.0116, stddev=0.00148], oderiv-count=1.42022e+06
component name=tdnnf6.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=14659.8, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.08,0.08,0.09 0.10,0.10,0.11,0.13,0.13 0.14,0.14,0.15,0.19), mean=0.114, stddev=0.0146], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.15,0.15,0.16 0.17,0.18,0.20,0.22,0.23 0.23,0.25,0.25,0.30), mean=0.2, stddev=0.0216]
component name=tdnnf6.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf6.noop type=NoOpComponent, dim=1024
component name=tdnnf7.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000580698, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01128, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.51,0.51,0.51,0.51 0.51,0.51,0.51,0.51,0.51 0.51,0.51,0.51,0.51), mean=0.511, stddev=0.000173], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.10,0.10,0.11 0.11,0.11,0.13,0.14,0.14 0.15,0.16,0.17,0.21), mean=0.127, stddev=0.0148], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000580698, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.01074, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.12,0.12,0.13 0.14,0.15,0.17,0.19,0.20 0.21,0.22,0.23,0.26), mean=0.17, stddev=0.0227], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.27,0.29,0.30,0.31 0.31,0.32,0.34,0.36,0.37 0.38,0.39,0.39,0.44), mean=0.343, stddev=0.024], bias-{mean,stddev}=-0.0244,0.02286, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.88e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.08,0.08,0.09 0.09,0.10,0.11,0.12,0.13 0.14,0.14,0.15,0.17), mean=0.112, stddev=0.0145], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.24,0.34,0.36,0.37 0.39,0.41,0.44,0.49,0.51 0.53,0.55,0.56,0.60), mean=0.446, stddev=0.0478], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.008,0.009,0.009,0.01 0.01,0.01,0.01,0.01,0.01 0.01,0.02,0.02,0.02), mean=0.0118, stddev=0.00154], oderiv-count=1.43117e+06
component name=tdnnf7.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=14147.8, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.08,0.08,0.09 0.10,0.10,0.11,0.12,0.13 0.14,0.14,0.15,0.17), mean=0.112, stddev=0.0147], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.15,0.16,0.16 0.17,0.18,0.20,0.21,0.22 0.23,0.24,0.25,0.29), mean=0.195, stddev=0.0206]
component name=tdnnf7.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf7.noop type=NoOpComponent, dim=1024
component name=tdnnf8.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000580698, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01123, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.51,0.51,0.51,0.51 0.51,0.51,0.51,0.51,0.51 0.51,0.51,0.51,0.51), mean=0.508, stddev=0.00081], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.10,0.10,0.10 0.11,0.11,0.13,0.14,0.15 0.15,0.16,0.17,0.20), mean=0.126, stddev=0.0147], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000580698, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.01065, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.12,0.12,0.13 0.14,0.15,0.17,0.19,0.20 0.21,0.22,0.23,0.31), mean=0.169, stddev=0.0235], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.29,0.29,0.30,0.30 0.31,0.32,0.34,0.36,0.37 0.38,0.39,0.40,0.42), mean=0.34, stddev=0.0239], bias-{mean,stddev}=-0.0258,0.02556, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.89e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.07,0.07,0.08 0.09,0.09,0.11,0.12,0.13 0.13,0.14,0.14,0.16), mean=0.107, stddev=0.0148], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.26,0.31,0.33,0.36 0.38,0.40,0.44,0.48,0.51 0.53,0.54,0.56,0.63), mean=0.441, stddev=0.0514], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.008,0.009,0.009,0.01 0.01,0.01,0.01,0.01,0.01 0.02,0.02,0.02,0.02), mean=0.0122, stddev=0.00164], oderiv-count=1.33498e+06
component name=tdnnf8.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=13635.8, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.07,0.07,0.08 0.09,0.09,0.11,0.12,0.13 0.13,0.14,0.14,0.16), mean=0.106, stddev=0.0154], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.14,0.15,0.15 0.16,0.17,0.18,0.20,0.21 0.22,0.22,0.23,0.30), mean=0.184, stddev=0.0203]
component name=tdnnf8.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf8.noop type=NoOpComponent, dim=1024
component name=tdnnf9.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000580698, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01131, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.51,0.51,0.51,0.51 0.51,0.51,0.51,0.51,0.51 0.52,0.52,0.52,0.52), mean=0.512, stddev=0.00199], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.10,0.10,0.10 0.11,0.11,0.13,0.14,0.15 0.15,0.16,0.17,0.20), mean=0.127, stddev=0.0153], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000580698, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.01055, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.12,0.12,0.13 0.14,0.15,0.16,0.19,0.20 0.21,0.22,0.23,0.29), mean=0.167, stddev=0.0244], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.28,0.29,0.30 0.31,0.32,0.33,0.36,0.37 0.38,0.39,0.40,0.42), mean=0.337, stddev=0.0253], bias-{mean,stddev}=-0.02526,0.02797, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.06,0.07,0.08 0.09,0.09,0.10,0.12,0.12 0.13,0.14,0.14,0.16), mean=0.104, stddev=0.0162], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.30,0.32,0.34 0.37,0.39,0.44,0.48,0.50 0.52,0.54,0.55,0.59), mean=0.436, stddev=0.0537], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.008,0.009,0.01,0.01 0.01,0.01,0.01,0.01,0.01 0.02,0.02,0.02,0.02), mean=0.0122, stddev=0.00179], oderiv-count=1.24346e+06
component name=tdnnf9.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=13123.8, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.06,0.07,0.08 0.08,0.09,0.10,0.12,0.12 0.13,0.14,0.14,0.15), mean=0.104, stddev=0.0166], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.14,0.14,0.15 0.16,0.16,0.18,0.19,0.20 0.21,0.22,0.24,0.32), mean=0.179, stddev=0.0203]
component name=tdnnf9.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf9.noop type=NoOpComponent, dim=1024
component name=tdnnf10.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000580698, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01138, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.52,0.52,0.52,0.52 0.52,0.52,0.52,0.52,0.52 0.52,0.52,0.52,0.52), mean=0.515, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.10,0.10,0.10 0.11,0.11,0.13,0.14,0.15 0.16,0.17,0.18,0.22), mean=0.128, stddev=0.0167], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000580698, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.01058, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.12,0.13,0.13 0.14,0.15,0.17,0.19,0.20 0.21,0.22,0.23,0.26), mean=0.168, stddev=0.0239], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.29,0.29,0.29,0.30 0.31,0.32,0.34,0.36,0.37 0.38,0.38,0.39,0.42), mean=0.338, stddev=0.0239], bias-{mean,stddev}=-0.02217,0.02679, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.37e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.07,0.07,0.08 0.09,0.09,0.11,0.12,0.13 0.13,0.14,0.15,0.17), mean=0.106, stddev=0.0168], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.23,0.30,0.32,0.35 0.37,0.39,0.44,0.48,0.50 0.52,0.54,0.55,0.58), mean=0.436, stddev=0.0534], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.008,0.009,0.009,0.01 0.01,0.01,0.01,0.01,0.01 0.02,0.02,0.02,0.02), mean=0.012, stddev=0.00176], oderiv-count=1.20576e+06
component name=tdnnf10.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=12611.8, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.07,0.07,0.08 0.09,0.09,0.10,0.12,0.13 0.13,0.14,0.15,0.17), mean=0.106, stddev=0.0169], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.14,0.15,0.15 0.16,0.17,0.18,0.20,0.21 0.22,0.23,0.24,0.36), mean=0.183, stddev=0.0216]
component name=tdnnf10.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf10.noop type=NoOpComponent, dim=1024
component name=tdnnf11.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000580698, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01176, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.53,0.53,0.53,0.53 0.53,0.53,0.53,0.53,0.53 0.53,0.53,0.53,0.53), mean=0.532, stddev=0.000518], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.10,0.10,0.11 0.11,0.12,0.13,0.14,0.15 0.17,0.18,0.19,0.24), mean=0.132, stddev=0.0182], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000580698, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.01079, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.11,0.12,0.13 0.14,0.15,0.17,0.19,0.20 0.21,0.22,0.23,0.32), mean=0.171, stddev=0.0238], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.29,0.30,0.30,0.30 0.32,0.32,0.34,0.37,0.38 0.39,0.40,0.40,0.44), mean=0.344, stddev=0.0248], bias-{mean,stddev}=-0.01905,0.02507, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.07e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.07,0.07,0.08 0.09,0.10,0.11,0.12,0.13 0.14,0.14,0.15,0.19), mean=0.11, stddev=0.0166], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.22,0.29,0.31,0.35 0.37,0.39,0.43,0.47,0.49 0.52,0.54,0.54,0.58), mean=0.431, stddev=0.0506], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.008,0.009,0.009,0.009 0.01,0.01,0.01,0.01,0.01 0.01,0.02,0.02,0.02), mean=0.0115, stddev=0.00152], oderiv-count=1.12288e+06
component name=tdnnf11.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=12099.8, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.07,0.07,0.08 0.09,0.10,0.11,0.12,0.13 0.14,0.15,0.15,0.18), mean=0.109, stddev=0.0164], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.15,0.15,0.16 0.17,0.17,0.19,0.21,0.22 0.22,0.23,0.24,0.38), mean=0.191, stddev=0.0203]
component name=tdnnf11.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf11.noop type=NoOpComponent, dim=1024
component name=tdnnf12.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000580698, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.012, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.54,0.54,0.54,0.54 0.54,0.54,0.54,0.54,0.54 0.55,0.55,0.55,0.55), mean=0.543, stddev=0.00149], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.10,0.10,0.11 0.11,0.12,0.13,0.15,0.16 0.17,0.19,0.20,0.28), mean=0.134, stddev=0.0203], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000580698, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.01129, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.12,0.12,0.14 0.15,0.16,0.18,0.20,0.21 0.22,0.23,0.23,0.29), mean=0.179, stddev=0.0237], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.29,0.30,0.31 0.33,0.34,0.36,0.38,0.40 0.41,0.42,0.42,0.43), mean=0.36, stddev=0.0277], bias-{mean,stddev}=-0.0176,0.02273, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.05e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.07,0.08,0.09 0.10,0.11,0.12,0.13,0.14 0.15,0.16,0.16,0.23), mean=0.121, stddev=0.018], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.24,0.30,0.32,0.35 0.37,0.40,0.44,0.48,0.50 0.52,0.53,0.54,0.58), mean=0.436, stddev=0.0496], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.008,0.009,0.009,0.009 0.01,0.01,0.01,0.01,0.01 0.01,0.01,0.02,0.02), mean=0.011, stddev=0.00141], oderiv-count=1.19693e+06
component name=tdnnf12.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11587.8, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.07,0.08,0.09 0.10,0.11,0.12,0.13,0.14 0.15,0.16,0.17,0.23), mean=0.12, stddev=0.0183], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.16,0.17,0.18 0.18,0.19,0.21,0.22,0.23 0.24,0.25,0.26,0.37), mean=0.207, stddev=0.0204]
component name=tdnnf12.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf12.noop type=NoOpComponent, dim=1024
component name=tdnnf13.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000580698, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01178, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.53,0.53,0.53,0.53 0.53,0.53,0.53,0.53,0.53 0.54,0.54,0.54,0.54), mean=0.533, stddev=0.00117], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.10,0.10,0.11 0.11,0.11,0.13,0.15,0.16 0.17,0.19,0.20,0.30), mean=0.132, stddev=0.0219], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000580698, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.01194, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.13,0.13,0.14 0.15,0.17,0.19,0.21,0.22 0.24,0.25,0.26,0.30), mean=0.189, stddev=0.0278], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.32,0.33,0.34,0.35 0.35,0.36,0.38,0.40,0.41 0.42,0.43,0.44,0.47), mean=0.381, stddev=0.0243], bias-{mean,stddev}=-0.0201,0.01997, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.65e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.09,0.10,0.10 0.11,0.12,0.13,0.15,0.16 0.17,0.18,0.18,0.22), mean=0.135, stddev=0.0197], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.26,0.34,0.35,0.36 0.38,0.40,0.44,0.47,0.49 0.50,0.52,0.53,0.56), mean=0.435, stddev=0.0424], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.008,0.009,0.009,0.01 0.01,0.01,0.01,0.01,0.01 0.01,0.02,0.02,0.02), mean=0.0117, stddev=0.00154], oderiv-count=1.0736e+06
component name=tdnnf13.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11075.8, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.09,0.09,0.10 0.11,0.12,0.14,0.15,0.16 0.17,0.18,0.18,0.24), mean=0.135, stddev=0.0202], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.18,0.19,0.20 0.20,0.21,0.23,0.25,0.26 0.27,0.28,0.30,0.42), mean=0.231, stddev=0.0234]
component name=tdnnf13.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf13.noop type=NoOpComponent, dim=1024
component name=prefinal-l type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000580698, l2-regularize=0.008, max-change=0.75, params-rms=0.01724, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.55,0.55,0.55,0.55 0.55,0.55,0.55,0.55,0.55 0.55,0.55,0.55,0.55), mean=0.552, stddev=0.000646], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.22,0.23,0.24,0.24 0.25,0.26,0.27,0.29,0.30 0.31,0.33,0.34,0.38), mean=0.275, stddev=0.0209], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=0.000580698, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.01186, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.12,0.13,0.14 0.15,0.17,0.19,0.21,0.22 0.23,0.25,0.27,0.35), mean=0.187, stddev=0.0294], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.32,0.34,0.34,0.35 0.35,0.36,0.38,0.40,0.41 0.41,0.42,0.42,0.45), mean=0.379, stddev=0.0204], bias-{mean,stddev}=-0.02577,0.03075, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.84e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.06,0.06,0.07 0.08,0.09,0.10,0.11,0.12 0.13,0.13,0.13,0.15), mean=0.102, stddev=0.0161], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.18,0.26,0.28,0.32 0.35,0.38,0.43,0.48,0.50 0.51,0.53,0.54,0.58), mean=0.425, stddev=0.0598], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.01,0.01,0.01 0.01,0.01,0.01,0.02,0.02 0.02,0.02,0.02,0.04), mean=0.0151, stddev=0.00208], oderiv-count=1.14227e+06
component name=prefinal-chain.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11075.8, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.06,0.06,0.07 0.08,0.09,0.10,0.11,0.12 0.13,0.13,0.14,0.15), mean=0.1, stddev=0.0165], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.14,0.14,0.15 0.16,0.17,0.18,0.19,0.20 0.20,0.21,0.21,0.23), mean=0.179, stddev=0.0159]
component name=prefinal-chain.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000580698, l2-regularize=0.008, max-change=0.75, params-rms=0.01579, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.50,0.50,0.50,0.50 0.50,0.50,0.51,0.51,0.51 0.51,0.51,0.51,0.51), mean=0.505, stddev=0.000977], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.18,0.19,0.20,0.21 0.22,0.23,0.25,0.27,0.28 0.29,0.31,0.32,0.38), mean=0.251, stddev=0.0269], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=11075.8, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-7e-08,-6e-08,-6e-08,-4e-08 -3e-08,-2e-08,1e-09,2e-08,3e-08 4e-08,5e-08,6e-08,7e-08), mean=7.21e-10, stddev=2.55e-08], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.69,0.70,0.70,0.71 0.73,0.74,0.77,0.80,0.81 0.83,0.85,0.87,0.90), mean=0.77, stddev=0.0371]
component name=output.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=2824, learning-rate=0.000580698, l2-regularize=0.002, max-change=1.5, linear-params-rms=0.02095, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.02,0.06,0.17 0.23,0.27,0.33,0.39,0.42 0.45,0.49,0.51,1.0), mean=0.323, stddev=0.0882], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.90,0.96,0.98,1.0 1.0,1.1,1.1,1.2,1.2 1.2,1.2,1.3,1.3), mean=1.11, stddev=0.0676], bias-{mean,stddev}=0.0002708,0.06296, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=0.000580698, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.008271, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.03,0.04,0.06 0.08,0.10,0.13,0.16,0.17 0.18,0.19,0.20,0.21), mean=0.127, stddev=0.0354], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.23,0.23,0.24,0.24 0.24,0.25,0.26,0.27,0.28 0.29,0.30,0.30,0.33), mean=0.264, stddev=0.0153], bias-{mean,stddev}=-0.05025,0.06313, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.42e+05, self-repaired-proportion=0.00772157, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-05,0.007,0.009,0.01 0.02,0.03,0.05,0.07,0.09 0.10,0.11,0.12,0.19), mean=0.0521, stddev=0.0279], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.06,0.08,0.11 0.13,0.18,0.35,0.47,0.54 0.63,0.72,0.73,0.77), mean=0.344, stddev=0.161], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.005,0.005,0.006 0.007,0.008,0.01,0.01,0.01 0.02,0.02,0.02,0.03), mean=0.0104, stddev=0.00314], oderiv-count=1.07974e+06
component name=prefinal-xent.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11075.8, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-06,0.007,0.009,0.01 0.02,0.03,0.05,0.07,0.09 0.10,0.11,0.12,0.17), mean=0.0509, stddev=0.0274], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(6e-05,0.04,0.05,0.05 0.06,0.08,0.10,0.11,0.11 0.12,0.13,0.14,0.31), mean=0.0938, stddev=0.0241]
component name=prefinal-xent.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000580698, l2-regularize=0.008, max-change=0.75, params-rms=0.01038, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.33,0.33,0.33,0.33 0.33,0.33,0.33,0.33,0.33 0.33,0.33,0.33,0.33), mean=0.332, stddev=0.000286], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.12,0.12,0.13 0.13,0.14,0.15,0.18,0.21 0.24,0.25,0.27,0.32), mean=0.163, stddev=0.0334], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=11075.8, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-5e-08,-4e-08,-3e-08,-3e-08 -2e-08,-1e-08,-6e-10,1e-08,2e-08 3e-08,3e-08,3e-08,5e-08), mean=-8.52e-10, stddev=1.54e-08], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.34,0.34,0.34,0.35 0.35,0.36,0.37,0.39,0.39 0.40,0.40,0.41,0.42), mean=0.373, stddev=0.015]
component name=output-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=2824, learning-rate=0.00290349, l2-regularize=0.002, learning-rate-factor=5, max-change=1.5, linear-params-rms=0.03395, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.02,0.02,0.08 0.15,0.28,0.52,0.69,0.78 0.84,0.90,0.92,1.3), mean=0.493, stddev=0.228], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.6,1.6,1.6,1.7 1.7,1.7,1.8,1.9,1.9 1.9,1.9,2.0,2.0), mean=1.8, stddev=0.0788], bias-{mean,stddev}=4.533e-09,0.06907, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-xent.log-softmax type=LogSoftmaxComponent, dim=2824, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,1e-07,6e-05,0.0002 0.0003,0.0004,0.0008,0.001,0.002 0.003,0.004,0.004,0.04), mean=0.00102, stddev=0.00117], oderiv-count=1.14234e+06
nnet3-show-progress --use-gpu=no telugu_exp/chain_cleaned_1d/tdnn1d_sp/15.mdl telugu_exp/chain_cleaned_1d/tdnn1d_sp/16.mdl 
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:SelectGpuId():cu-device.cc:168) Manually selected to compute on CPU.
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:6.85438 tdnnf2.linear:3.8413 tdnnf2.affine:4.10364 tdnnf3.linear:3.06085 tdnnf3.affine:3.46084 tdnnf4.linear:2.81415 tdnnf4.affine:3.27112 tdnnf5.linear:2.24571 tdnnf5.affine:2.55579 tdnnf6.linear:2.63284 tdnnf6.affine:3.06021 tdnnf7.linear:2.44654 tdnnf7.affine:2.90557 tdnnf8.linear:2.38848 tdnnf8.affine:2.82116 tdnnf9.linear:2.35366 tdnnf9.affine:2.72912 tdnnf10.linear:2.2753 tdnnf10.affine:2.67078 tdnnf11.linear:2.23956 tdnnf11.affine:2.60595 tdnnf12.linear:2.18007 tdnnf12.affine:2.64493 tdnnf13.linear:2.14213 tdnnf13.affine:2.82755 prefinal-l:2.77069 prefinal-chain.affine:3.17054 prefinal-chain.linear:2.58969 output.affine:4.14204 prefinal-xent.affine:1.71193 prefinal-xent.linear:1.19276 output-xent.affine:3.1904 ]
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:12.6746 tdnnf2.linear:9.08507 tdnnf2.affine:7.813 tdnnf3.linear:6.95989 tdnnf3.affine:6.19008 tdnnf4.linear:6.24615 tdnnf4.affine:5.71359 tdnnf5.linear:4.43567 tdnnf5.affine:4.4544 tdnnf6.linear:6.05622 tdnnf6.affine:5.6863 tdnnf7.linear:5.77716 tdnnf7.affine:5.60012 tdnnf8.linear:5.75007 tdnnf8.affine:5.57349 tdnnf9.linear:5.79228 tdnnf9.affine:5.53653 tdnnf10.linear:5.82854 tdnnf10.affine:5.53077 tdnnf11.linear:6.02269 tdnnf11.affine:5.61436 tdnnf12.linear:6.14377 tdnnf12.affine:5.85413 tdnnf13.linear:6.03294 tdnnf13.affine:6.18177 prefinal-l:8.82469 prefinal-chain.affine:6.20458 prefinal-chain.linear:8.08264 output.affine:18.1282 prefinal-xent.affine:4.95979 prefinal-xent.linear:5.31484 output-xent.affine:29.0999 ]
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.540794 tdnnf2.linear:0.420958 tdnnf2.affine:0.5225 tdnnf3.linear:0.436693 tdnnf3.affine:0.556195 tdnnf4.linear:0.449091 tdnnf4.affine:0.570746 tdnnf5.linear:0.502566 tdnnf5.affine:0.570186 tdnnf6.linear:0.437506 tdnnf6.affine:0.535905 tdnnf7.linear:0.424259 tdnnf7.affine:0.51895 tdnnf8.linear:0.416168 tdnnf8.affine:0.505815 tdnnf9.linear:0.406561 tdnnf9.affine:0.491889 tdnnf10.linear:0.390183 tdnnf10.affine:0.481189 tdnnf11.linear:0.372859 tdnnf11.affine:0.462864 tdnnf12.linear:0.354629 tdnnf12.affine:0.450984 tdnnf13.linear:0.353405 tdnnf13.affine:0.4563 prefinal-l:0.313756 prefinal-chain.affine:0.510607 prefinal-chain.linear:0.319595 output.affine:0.228406 prefinal-xent.affine:0.345368 prefinal-xent.linear:0.223868 output-xent.affine:0.109486 ]
# Accounting: time=0 threads=1
# Ended (code 0) at Thu Jul 21 12:59:29 EDT 2022, elapsed time 0 seconds
