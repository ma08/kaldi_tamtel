# nnet3-show-progress --use-gpu=no --verbose=2 telugu_exp/chain_cleaned_1d/tdnn1d_sp/39.mdl telugu_exp/chain_cleaned_1d/tdnn1d_sp/40.mdl 
# Started at Tue Jul 19 22:14:58 EDT 2022
#
nnet3-show-progress --use-gpu=no --verbose=2 telugu_exp/chain_cleaned_1d/tdnn1d_sp/39.mdl telugu_exp/chain_cleaned_1d/tdnn1d_sp/40.mdl 
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:SelectGpuId():cu-device.cc:168) Manually selected to compute on CPU.
VLOG[1] (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:136) Printing info for the difference between the neural nets: left-context: 28
right-context: 28
num-parameters: 9032208
modulus: 1
input-node name=ivector dim=100
input-node name=input dim=40
component-node name=lda component=lda input=Append(Offset(input, -1), input, Offset(input, 1), ReplaceIndex(ivector, t, 0)) input-dim=220 output-dim=220
component-node name=tdnn1.affine component=tdnn1.affine input=lda input-dim=220 output-dim=1024
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=1024 output-dim=1024
component-node name=tdnn1.batchnorm component=tdnn1.batchnorm input=tdnn1.relu input-dim=1024 output-dim=1024
component-node name=tdnn1.dropout component=tdnn1.dropout input=tdnn1.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.linear component=tdnnf2.linear input=tdnn1.dropout input-dim=1024 output-dim=128
component-node name=tdnnf2.affine component=tdnnf2.affine input=tdnnf2.linear input-dim=128 output-dim=1024
component-node name=tdnnf2.relu component=tdnnf2.relu input=tdnnf2.affine input-dim=1024 output-dim=1024
component-node name=tdnnf2.batchnorm component=tdnnf2.batchnorm input=tdnnf2.relu input-dim=1024 output-dim=1024
component-node name=tdnnf2.dropout component=tdnnf2.dropout input=tdnnf2.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.noop component=tdnnf2.noop input=Sum(Scale(0.66, tdnn1.dropout), tdnnf2.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf3.linear component=tdnnf3.linear input=tdnnf2.noop input-dim=1024 output-dim=128
component-node name=tdnnf3.affine component=tdnnf3.affine input=tdnnf3.linear input-dim=128 output-dim=1024
component-node name=tdnnf3.relu component=tdnnf3.relu input=tdnnf3.affine input-dim=1024 output-dim=1024
component-node name=tdnnf3.batchnorm component=tdnnf3.batchnorm input=tdnnf3.relu input-dim=1024 output-dim=1024
component-node name=tdnnf3.dropout component=tdnnf3.dropout input=tdnnf3.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf3.noop component=tdnnf3.noop input=Sum(Scale(0.66, tdnnf2.noop), tdnnf3.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf4.linear component=tdnnf4.linear input=tdnnf3.noop input-dim=1024 output-dim=128
component-node name=tdnnf4.affine component=tdnnf4.affine input=tdnnf4.linear input-dim=128 output-dim=1024
component-node name=tdnnf4.relu component=tdnnf4.relu input=tdnnf4.affine input-dim=1024 output-dim=1024
component-node name=tdnnf4.batchnorm component=tdnnf4.batchnorm input=tdnnf4.relu input-dim=1024 output-dim=1024
component-node name=tdnnf4.dropout component=tdnnf4.dropout input=tdnnf4.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf4.noop component=tdnnf4.noop input=Sum(Scale(0.66, tdnnf3.noop), tdnnf4.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf5.linear component=tdnnf5.linear input=tdnnf4.noop input-dim=1024 output-dim=128
component-node name=tdnnf5.affine component=tdnnf5.affine input=tdnnf5.linear input-dim=128 output-dim=1024
component-node name=tdnnf5.relu component=tdnnf5.relu input=tdnnf5.affine input-dim=1024 output-dim=1024
component-node name=tdnnf5.batchnorm component=tdnnf5.batchnorm input=tdnnf5.relu input-dim=1024 output-dim=1024
component-node name=tdnnf5.dropout component=tdnnf5.dropout input=tdnnf5.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf5.noop component=tdnnf5.noop input=Sum(Scale(0.66, tdnnf4.noop), tdnnf5.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf6.linear component=tdnnf6.linear input=tdnnf5.noop input-dim=1024 output-dim=128
component-node name=tdnnf6.affine component=tdnnf6.affine input=tdnnf6.linear input-dim=128 output-dim=1024
component-node name=tdnnf6.relu component=tdnnf6.relu input=tdnnf6.affine input-dim=1024 output-dim=1024
component-node name=tdnnf6.batchnorm component=tdnnf6.batchnorm input=tdnnf6.relu input-dim=1024 output-dim=1024
component-node name=tdnnf6.dropout component=tdnnf6.dropout input=tdnnf6.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf6.noop component=tdnnf6.noop input=Sum(Scale(0.66, tdnnf5.noop), tdnnf6.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf7.linear component=tdnnf7.linear input=tdnnf6.noop input-dim=1024 output-dim=128
component-node name=tdnnf7.affine component=tdnnf7.affine input=tdnnf7.linear input-dim=128 output-dim=1024
component-node name=tdnnf7.relu component=tdnnf7.relu input=tdnnf7.affine input-dim=1024 output-dim=1024
component-node name=tdnnf7.batchnorm component=tdnnf7.batchnorm input=tdnnf7.relu input-dim=1024 output-dim=1024
component-node name=tdnnf7.dropout component=tdnnf7.dropout input=tdnnf7.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf7.noop component=tdnnf7.noop input=Sum(Scale(0.66, tdnnf6.noop), tdnnf7.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf8.linear component=tdnnf8.linear input=tdnnf7.noop input-dim=1024 output-dim=128
component-node name=tdnnf8.affine component=tdnnf8.affine input=tdnnf8.linear input-dim=128 output-dim=1024
component-node name=tdnnf8.relu component=tdnnf8.relu input=tdnnf8.affine input-dim=1024 output-dim=1024
component-node name=tdnnf8.batchnorm component=tdnnf8.batchnorm input=tdnnf8.relu input-dim=1024 output-dim=1024
component-node name=tdnnf8.dropout component=tdnnf8.dropout input=tdnnf8.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf8.noop component=tdnnf8.noop input=Sum(Scale(0.66, tdnnf7.noop), tdnnf8.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf9.linear component=tdnnf9.linear input=tdnnf8.noop input-dim=1024 output-dim=128
component-node name=tdnnf9.affine component=tdnnf9.affine input=tdnnf9.linear input-dim=128 output-dim=1024
component-node name=tdnnf9.relu component=tdnnf9.relu input=tdnnf9.affine input-dim=1024 output-dim=1024
component-node name=tdnnf9.batchnorm component=tdnnf9.batchnorm input=tdnnf9.relu input-dim=1024 output-dim=1024
component-node name=tdnnf9.dropout component=tdnnf9.dropout input=tdnnf9.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf9.noop component=tdnnf9.noop input=Sum(Scale(0.66, tdnnf8.noop), tdnnf9.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf10.linear component=tdnnf10.linear input=tdnnf9.noop input-dim=1024 output-dim=128
component-node name=tdnnf10.affine component=tdnnf10.affine input=tdnnf10.linear input-dim=128 output-dim=1024
component-node name=tdnnf10.relu component=tdnnf10.relu input=tdnnf10.affine input-dim=1024 output-dim=1024
component-node name=tdnnf10.batchnorm component=tdnnf10.batchnorm input=tdnnf10.relu input-dim=1024 output-dim=1024
component-node name=tdnnf10.dropout component=tdnnf10.dropout input=tdnnf10.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf10.noop component=tdnnf10.noop input=Sum(Scale(0.66, tdnnf9.noop), tdnnf10.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf11.linear component=tdnnf11.linear input=tdnnf10.noop input-dim=1024 output-dim=128
component-node name=tdnnf11.affine component=tdnnf11.affine input=tdnnf11.linear input-dim=128 output-dim=1024
component-node name=tdnnf11.relu component=tdnnf11.relu input=tdnnf11.affine input-dim=1024 output-dim=1024
component-node name=tdnnf11.batchnorm component=tdnnf11.batchnorm input=tdnnf11.relu input-dim=1024 output-dim=1024
component-node name=tdnnf11.dropout component=tdnnf11.dropout input=tdnnf11.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf11.noop component=tdnnf11.noop input=Sum(Scale(0.66, tdnnf10.noop), tdnnf11.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf12.linear component=tdnnf12.linear input=tdnnf11.noop input-dim=1024 output-dim=128
component-node name=tdnnf12.affine component=tdnnf12.affine input=tdnnf12.linear input-dim=128 output-dim=1024
component-node name=tdnnf12.relu component=tdnnf12.relu input=tdnnf12.affine input-dim=1024 output-dim=1024
component-node name=tdnnf12.batchnorm component=tdnnf12.batchnorm input=tdnnf12.relu input-dim=1024 output-dim=1024
component-node name=tdnnf12.dropout component=tdnnf12.dropout input=tdnnf12.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf12.noop component=tdnnf12.noop input=Sum(Scale(0.66, tdnnf11.noop), tdnnf12.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf13.linear component=tdnnf13.linear input=tdnnf12.noop input-dim=1024 output-dim=128
component-node name=tdnnf13.affine component=tdnnf13.affine input=tdnnf13.linear input-dim=128 output-dim=1024
component-node name=tdnnf13.relu component=tdnnf13.relu input=tdnnf13.affine input-dim=1024 output-dim=1024
component-node name=tdnnf13.batchnorm component=tdnnf13.batchnorm input=tdnnf13.relu input-dim=1024 output-dim=1024
component-node name=tdnnf13.dropout component=tdnnf13.dropout input=tdnnf13.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf13.noop component=tdnnf13.noop input=Sum(Scale(0.66, tdnnf12.noop), tdnnf13.dropout) input-dim=1024 output-dim=1024
component-node name=prefinal-l component=prefinal-l input=tdnnf13.noop input-dim=1024 output-dim=256
component-node name=prefinal-chain.affine component=prefinal-chain.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-chain.relu component=prefinal-chain.relu input=prefinal-chain.affine input-dim=1024 output-dim=1024
component-node name=prefinal-chain.batchnorm1 component=prefinal-chain.batchnorm1 input=prefinal-chain.relu input-dim=1024 output-dim=1024
component-node name=prefinal-chain.linear component=prefinal-chain.linear input=prefinal-chain.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-chain.batchnorm2 component=prefinal-chain.batchnorm2 input=prefinal-chain.linear input-dim=256 output-dim=256
component-node name=output.affine component=output.affine input=prefinal-chain.batchnorm2 input-dim=256 output-dim=2824
output-node name=output input=output.affine dim=2824 objective=linear
component-node name=prefinal-xent.affine component=prefinal-xent.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-xent.relu component=prefinal-xent.relu input=prefinal-xent.affine input-dim=1024 output-dim=1024
component-node name=prefinal-xent.batchnorm1 component=prefinal-xent.batchnorm1 input=prefinal-xent.relu input-dim=1024 output-dim=1024
component-node name=prefinal-xent.linear component=prefinal-xent.linear input=prefinal-xent.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-xent.batchnorm2 component=prefinal-xent.batchnorm2 input=prefinal-xent.linear input-dim=256 output-dim=256
component-node name=output-xent.affine component=output-xent.affine input=prefinal-xent.batchnorm2 input-dim=256 output-dim=2824
component-node name=output-xent.log-softmax component=output-xent.log-softmax input=output-xent.affine input-dim=2824 output-dim=2824
output-node name=output-xent input=output-xent.log-softmax dim=2824 objective=linear
component name=lda type=FixedAffineComponent, input-dim=220, output-dim=220, linear-params-rms=0.00576, bias-{mean,stddev}=-0.0009624,0.01288
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=220, output-dim=1024, learning-rate=0.000509279, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.01408, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.09,0.11,0.13 0.15,0.18,0.21,0.23,0.25 0.27,0.29,0.31,0.36), mean=0.205, stddev=0.0417], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.24,0.26,0.27,0.29 0.31,0.33,0.41,0.50,0.62 0.74,0.78,0.79,0.86), mean=0.432, stddev=0.127], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.15,0.16,0.18 0.21,0.25,0.39,0.55,0.66 0.78,0.86,0.87,0.92), mean=0.414, stddev=0.177], bias-{mean,stddev}=-4.291e-05,0.01003, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=5e+04, self-repaired-proportion=0.0830078, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.2,-0.58,-0.49,-0.38 -0.29,-0.17,0.02,0.23,0.36 0.48,0.63,0.71,1.2), mean=0.0303, stddev=0.262], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-14,-9.0,-7.7,-6.3 -4.4,-2.7,0.34,3.3,5.0 6.5,8.8,10.0,16), mean=0.328, stddev=3.85]
component name=tdnn1.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=729.795, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.4,-0.87,-0.73,-0.56 -0.42,-0.23,-0.007,0.29,0.50 0.66,0.83,0.93,1.3), mean=0.022, stddev=0.361], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0,0 0.04,0.08,0.09,0.14), mean=0.00458, stddev=0.0176]
component name=tdnn1.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.44856, continuous=true
component name=tdnnf2.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000509279, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.008767, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.35,0.36,0.36,0.37 0.37,0.38,0.39,0.41,0.42 0.43,0.44,0.44,0.44), mean=0.396, stddev=0.0184], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.04,0.05,0.06 0.07,0.09,0.10,0.11,0.12 0.12,0.12,0.13,0.14), mean=0.0976, stddev=0.0176], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.16,0.16,0.18 0.19,0.23,0.35,0.52,0.58 0.61,0.64,0.64,0.66), mean=0.37, stddev=0.143], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000509279, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.008519, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.11,0.11,0.11 0.12,0.12,0.13,0.15,0.15 0.16,0.17,0.17,0.19), mean=0.136, stddev=0.0145], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.25,0.25,0.25,0.26 0.26,0.26,0.27,0.28,0.29 0.29,0.30,0.30,0.31), mean=0.272, stddev=0.0108], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.05,0.05,0.06 0.06,0.08,0.20,0.37,0.45 0.51,0.55,0.57,0.59), mean=0.228, stddev=0.15], bias-{mean,stddev}=-0.0002885,0.009958, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=1.42e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.37,-0.17,-0.14,-0.09 -0.04,0.008,0.12,0.23,0.28 0.33,0.38,0.41,0.51), mean=0.118, stddev=0.128], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.1,-0.50,-0.40,-0.23 -0.06,0.13,0.43,0.74,0.91 1.0,1.3,1.4,1.9), mean=0.428, stddev=0.389], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.03,0.04,0.05 0.07,0.12,0.13,0.22), mean=0.0296, stddev=0.0276], oderiv-count=132416
component name=tdnnf2.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=729.795, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.4,-0.96,-0.84,-0.63 -0.42,-0.17,0.30,0.75,1.0 1.3,1.5,1.6,2.7), mean=0.296, stddev=0.571], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.33,0.45 0.54,0.62,0.68,0.88), mean=0.129, stddev=0.198]
component name=tdnnf2.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.44856, continuous=true
component name=tdnnf2.noop type=NoOpComponent, dim=1024
component name=tdnnf3.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000509279, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.007041, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.29,0.29,0.30 0.30,0.31,0.32,0.33,0.34 0.34,0.35,0.35,0.36), mean=0.318, stddev=0.0136], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.06,0.06,0.07 0.07,0.07,0.08,0.09,0.09 0.09,0.09,0.10,0.11), mean=0.0793, stddev=0.00751], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.14,0.14,0.15 0.16,0.19,0.29,0.41,0.45 0.48,0.51,0.51,0.53), mean=0.3, stddev=0.108], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000509279, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.007396, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.09,0.09,0.10 0.10,0.11,0.12,0.13,0.13 0.14,0.14,0.15,0.16), mean=0.118, stddev=0.0119], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.21,0.22,0.22,0.22 0.22,0.23,0.24,0.24,0.25 0.25,0.25,0.26,0.26), mean=0.236, stddev=0.00913], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.05,0.05,0.06 0.07,0.08,0.18,0.32,0.39 0.44,0.47,0.49,0.52), mean=0.202, stddev=0.123], bias-{mean,stddev}=-0.0001009,0.006345, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05
component name=tdnnf3.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=729.795, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-2.3,-1.3,-1.2,-0.92 -0.69,-0.35,0.15,0.70,0.96 1.2,1.5,1.7,2.5), mean=0.166, stddev=0.651], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.47,0.63 0.73,0.84,0.87,1.1), mean=0.187, stddev=0.271]
component name=tdnnf3.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.44856, continuous=true
component name=tdnnf3.noop type=NoOpComponent, dim=1024
component name=tdnnf4.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000509279, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.006783, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.27,0.28,0.28,0.29 0.29,0.29,0.31,0.32,0.33 0.33,0.34,0.34,0.34), mean=0.307, stddev=0.0145], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.06,0.06,0.07 0.07,0.07,0.08,0.08,0.09 0.09,0.09,0.09,0.10), mean=0.0764, stddev=0.0068], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.13,0.13,0.14 0.15,0.17,0.27,0.40,0.44 0.47,0.49,0.50,0.51), mean=0.287, stddev=0.109], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000509279, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.007131, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.09,0.09,0.10 0.10,0.10,0.11,0.12,0.13 0.13,0.14,0.14,0.16), mean=0.114, stddev=0.011], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.20,0.21,0.21,0.21 0.21,0.22,0.23,0.24,0.24 0.24,0.25,0.25,0.25), mean=0.228, stddev=0.0101], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.06,0.06,0.07 0.08,0.09,0.17,0.30,0.37 0.42,0.46,0.47,0.53), mean=0.198, stddev=0.113], bias-{mean,stddev}=-4.99e-05,0.005522, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.02,0.04,0.05 0.07,0.09,0.11,0.16), mean=0.0237, stddev=0.0261], oderiv-count=20864
component name=tdnnf4.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=243.265, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-2.1,-1.4,-1.2,-0.89 -0.61,-0.28,0.31,0.87,1.1 1.4,1.6,1.8,2.5), mean=0.297, stddev=0.682], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.53,0.68 0.78,0.86,0.92,1.1), mean=0.215, stddev=0.291]
component name=tdnnf4.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.44856, continuous=true
component name=tdnnf4.noop type=NoOpComponent, dim=1024
component name=tdnnf5.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000509279, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=0, linear-params-rms=0.007658, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.22,0.22,0.22,0.23 0.23,0.24,0.24,0.25,0.26 0.26,0.26,0.26,0.28), mean=0.245, stddev=0.00983], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.07,0.07,0.07 0.08,0.08,0.09,0.09,0.10 0.10,0.10,0.10,0.12), mean=0.0863, stddev=0.00741], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.11,0.11,0.12 0.13,0.15,0.22,0.31,0.35 0.37,0.39,0.40,0.41), mean=0.231, stddev=0.0819], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000509279, l2-regularize=0.008, max-change=0.75, time-offsets=0, linear-params-rms=0.008103, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.07,0.07,0.07 0.08,0.08,0.09,0.10,0.11 0.11,0.11,0.12,0.13), mean=0.091, stddev=0.0108], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.23,0.24,0.24,0.24 0.25,0.25,0.26,0.27,0.27 0.27,0.28,0.28,0.29), mean=0.259, stddev=0.00893], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.14,0.14,0.15 0.16,0.17,0.23,0.32,0.37 0.39,0.41,0.42,0.44), mean=0.247, stddev=0.0791], bias-{mean,stddev}=0.000496,0.008443, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05
component name=tdnnf5.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=243.265, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.6,-1.0,-0.90,-0.70 -0.51,-0.31,0.12,0.51,0.74 0.91,1.1,1.2,1.9), mean=0.11, stddev=0.491], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.27,0.39 0.47,0.55,0.60,0.83), mean=0.105, stddev=0.174]
component name=tdnnf5.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.44856, continuous=true
component name=tdnnf5.noop type=NoOpComponent, dim=1024
component name=tdnnf6.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000509279, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.00642, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.26,0.27,0.27,0.27 0.28,0.28,0.29,0.30,0.30 0.31,0.31,0.31,0.32), mean=0.29, stddev=0.0105], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.06,0.06,0.06 0.06,0.07,0.07,0.08,0.08 0.08,0.09,0.09,0.09), mean=0.0723, stddev=0.00672], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.12,0.13,0.14 0.14,0.17,0.27,0.38,0.41 0.43,0.44,0.45,0.46), mean=0.273, stddev=0.0992], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000509279, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.006781, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.08,0.09,0.09 0.10,0.10,0.11,0.12,0.12 0.12,0.13,0.13,0.14), mean=0.108, stddev=0.0103], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.19,0.20,0.20,0.20 0.20,0.21,0.22,0.23,0.23 0.23,0.24,0.24,0.26), mean=0.217, stddev=0.0102], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.07,0.07,0.08 0.09,0.10,0.17,0.28,0.34 0.39,0.41,0.43,0.45), mean=0.194, stddev=0.0965], bias-{mean,stddev}=-0.0002947,0.004844, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05
component name=tdnnf6.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=243.265, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.6,-1.1,-0.98,-0.77 -0.59,-0.29,0.18,0.60,0.85 1.1,1.4,1.5,2.5), mean=0.17, stddev=0.555], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.43,0.60 0.68,0.76,0.83,1.0), mean=0.173, stddev=0.255]
component name=tdnnf6.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.44856, continuous=true
component name=tdnnf6.noop type=NoOpComponent, dim=1024
component name=tdnnf7.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000509279, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.005939, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.24,0.24,0.25,0.25 0.25,0.26,0.27,0.28,0.28 0.28,0.29,0.29,0.29), mean=0.269, stddev=0.0108], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.05,0.05,0.06 0.06,0.06,0.07,0.07,0.07 0.08,0.08,0.08,0.09), mean=0.0669, stddev=0.00608], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.11,0.12,0.13 0.13,0.16,0.25,0.34,0.37 0.39,0.40,0.41,0.42), mean=0.254, stddev=0.0881], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000509279, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.006496, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.08,0.08,0.08 0.09,0.10,0.10,0.11,0.12 0.12,0.12,0.13,0.14), mean=0.103, stddev=0.0106], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.19,0.19,0.19,0.19 0.20,0.20,0.21,0.21,0.22 0.22,0.22,0.23,0.24), mean=0.208, stddev=0.00841], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.07,0.07,0.08 0.09,0.10,0.16,0.27,0.33 0.36,0.40,0.41,0.43), mean=0.186, stddev=0.0918], bias-{mean,stddev}=-0.0001062,0.004844, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05
component name=tdnnf7.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=243.265, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.7,-1.1,-0.92,-0.74 -0.53,-0.35,0.10,0.50,0.69 0.90,1.1,1.2,1.8), mean=0.0847, stddev=0.499], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.43,0.57 0.67,0.76,0.86,1.0), mean=0.175, stddev=0.251]
component name=tdnnf7.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.44856, continuous=true
component name=tdnnf7.noop type=NoOpComponent, dim=1024
component name=tdnnf8.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000509279, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.005852, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.24,0.24,0.24,0.25 0.25,0.26,0.26,0.27,0.28 0.28,0.28,0.28,0.29), mean=0.265, stddev=0.00928], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.05,0.05,0.06 0.06,0.06,0.07,0.07,0.07 0.08,0.08,0.08,0.09), mean=0.0659, stddev=0.00641], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.11,0.12,0.12 0.13,0.16,0.25,0.34,0.37 0.38,0.39,0.40,0.41), mean=0.251, stddev=0.0855], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000509279, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.00635, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.07,0.07,0.08 0.09,0.09,0.10,0.11,0.11 0.12,0.12,0.13,0.14), mean=0.101, stddev=0.0116], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.18,0.19,0.19,0.19 0.19,0.20,0.20,0.21,0.21 0.22,0.22,0.22,0.22), mean=0.203, stddev=0.00773], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.07,0.07,0.07 0.08,0.10,0.16,0.26,0.32 0.36,0.39,0.41,0.43), mean=0.182, stddev=0.0908], bias-{mean,stddev}=-4.898e-05,0.004709, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=4.87e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.22,-0.10,-0.09,-0.04 0.002,0.05,0.14,0.22,0.26 0.30,0.34,0.36,0.47), mean=0.136, stddev=0.102], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.75,-0.38,-0.25,-0.06 0.05,0.20,0.43,0.62,0.76 0.87,0.96,1.0,1.4), mean=0.411, stddev=0.283], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.004,0.02,0.03 0.03,0.03,0.04,0.04), mean=0.00968, stddev=0.0112], oderiv-count=57088
component name=tdnnf8.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=243.265, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.4,-1.0,-0.91,-0.66 -0.48,-0.25,0.16,0.56,0.76 0.93,1.1,1.3,1.8), mean=0.154, stddev=0.493], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.49,0.62 0.71,0.84,0.90,1.2), mean=0.206, stddev=0.271]
component name=tdnnf8.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.44856, continuous=true
component name=tdnnf8.noop type=NoOpComponent, dim=1024
component name=tdnnf9.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000509279, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.005783, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.24,0.24,0.24,0.25 0.25,0.25,0.26,0.27,0.28 0.28,0.28,0.28,0.28), mean=0.262, stddev=0.00987], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.04,0.05,0.05 0.06,0.06,0.07,0.07,0.07 0.08,0.08,0.08,0.09), mean=0.065, stddev=0.00737], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.11,0.11,0.12 0.13,0.16,0.24,0.33,0.36 0.38,0.39,0.40,0.41), mean=0.248, stddev=0.0849], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000509279, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.006166, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.05,0.06,0.07 0.08,0.09,0.10,0.11,0.11 0.12,0.12,0.12,0.13), mean=0.0977, stddev=0.0138], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.18,0.18,0.18,0.18 0.19,0.19,0.20,0.20,0.21 0.21,0.21,0.21,0.22), mean=0.197, stddev=0.00785], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.06,0.06,0.07 0.08,0.09,0.15,0.26,0.31 0.35,0.38,0.40,0.42), mean=0.176, stddev=0.09], bias-{mean,stddev}=-0.0002865,0.004347, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=3.72e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.22,-0.18,-0.14,-0.09 -0.04,0.02,0.14,0.25,0.30 0.35,0.41,0.44,0.62), mean=0.136, stddev=0.133], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.1,-0.50,-0.40,-0.18 -0.02,0.16,0.44,0.74,0.90 1.0,1.2,1.3,1.6), mean=0.442, stddev=0.371]
component name=tdnnf9.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=243.265, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.7,-0.99,-0.87,-0.55 -0.38,-0.22,0.18,0.57,0.77 0.95,1.1,1.2,1.8), mean=0.182, stddev=0.471], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.49,0.62 0.72,0.82,0.86,1.2), mean=0.208, stddev=0.267]
component name=tdnnf9.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.44856, continuous=true
component name=tdnnf9.noop type=NoOpComponent, dim=1024
component name=tdnnf10.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000509279, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.00559, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.23,0.23,0.23,0.24 0.24,0.24,0.25,0.26,0.26 0.27,0.27,0.27,0.27), mean=0.253, stddev=0.00913], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.04,0.04,0.05 0.05,0.06,0.06,0.07,0.07 0.07,0.08,0.08,0.09), mean=0.0627, stddev=0.00858], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.10,0.11,0.12 0.13,0.15,0.23,0.32,0.35 0.37,0.38,0.38,0.39), mean=0.239, stddev=0.0827], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000509279, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.005989, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.05,0.05,0.06 0.08,0.09,0.10,0.11,0.11 0.11,0.12,0.12,0.13), mean=0.0946, stddev=0.015], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.17,0.17,0.17,0.18 0.18,0.19,0.19,0.20,0.20 0.20,0.21,0.21,0.21), mean=0.191, stddev=0.00821], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.06,0.06,0.07 0.07,0.09,0.14,0.25,0.31 0.35,0.38,0.39,0.41), mean=0.169, stddev=0.0896], bias-{mean,stddev}=-0.0004784,0.00416, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05
component name=tdnnf10.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=243.265, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.5,-0.89,-0.83,-0.58 -0.43,-0.23,0.14,0.54,0.77 0.96,1.1,1.3,1.9), mean=0.156, stddev=0.47], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.53,0.67 0.81,0.92,0.94,1.3), mean=0.232, stddev=0.291]
component name=tdnnf10.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.44856, continuous=true
component name=tdnnf10.noop type=NoOpComponent, dim=1024
component name=tdnnf11.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000509279, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.005443, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.22,0.23,0.23,0.23 0.23,0.24,0.25,0.26,0.26 0.26,0.26,0.27,0.28), mean=0.246, stddev=0.0103], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.03,0.03,0.04 0.05,0.05,0.06,0.07,0.07 0.07,0.08,0.08,0.08), mean=0.0608, stddev=0.00984], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.10,0.10,0.11 0.12,0.15,0.23,0.31,0.34 0.36,0.37,0.37,0.38), mean=0.233, stddev=0.0808], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000509279, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.005959, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.03,0.04,0.06 0.07,0.08,0.10,0.11,0.11 0.12,0.12,0.12,0.13), mean=0.0938, stddev=0.0172], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.17,0.17,0.17,0.18 0.18,0.18,0.19,0.20,0.20 0.20,0.21,0.21,0.22), mean=0.191, stddev=0.00821], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.05,0.06,0.06 0.07,0.08,0.14,0.25,0.31 0.35,0.38,0.40,0.41), mean=0.167, stddev=0.0927], bias-{mean,stddev}=-0.0001899,0.004292, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05
component name=tdnnf11.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=243.265, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.7,-1.1,-0.93,-0.74 -0.49,-0.26,0.12,0.52,0.76 0.96,1.2,1.4,1.7), mean=0.127, stddev=0.507], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.56,0.69 0.83,0.92,1.0,1.6), mean=0.241, stddev=0.305]
component name=tdnnf11.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.44856, continuous=true
component name=tdnnf11.noop type=NoOpComponent, dim=1024
component name=tdnnf12.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000509279, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.005227, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.21,0.21,0.22,0.22 0.23,0.23,0.24,0.24,0.25 0.25,0.25,0.26,0.26), mean=0.236, stddev=0.00933], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.03,0.03,0.04 0.04,0.05,0.06,0.07,0.07 0.07,0.07,0.08,0.08), mean=0.0582, stddev=0.0107], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.11,0.11,0.12 0.13,0.15,0.23,0.29,0.32 0.33,0.34,0.35,0.36), mean=0.226, stddev=0.0698], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000509279, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.006127, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.03,0.05,0.06 0.07,0.08,0.10,0.11,0.12 0.12,0.13,0.13,0.14), mean=0.0963, stddev=0.0186], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.17,0.18,0.18,0.18 0.19,0.19,0.20,0.20,0.21 0.21,0.21,0.21,0.22), mean=0.196, stddev=0.00784], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.06,0.06,0.06 0.07,0.09,0.14,0.26,0.32 0.35,0.38,0.40,0.42), mean=0.172, stddev=0.0935], bias-{mean,stddev}=-0.000217,0.004494, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=3.96e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.40,-0.19,-0.15,-0.10 -0.05,-0.0003,0.10,0.21,0.27 0.32,0.38,0.41,0.61), mean=0.106, stddev=0.129], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.7,-0.84,-0.65,-0.36 -0.19,-0.006,0.34,0.67,0.83 0.96,1.1,1.3,1.9), mean=0.32, stddev=0.423], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.01,0.03,0.04 0.04,0.05,0.05,0.07), mean=0.0146, stddev=0.0151], oderiv-count=43072
component name=tdnnf12.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=243.265, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.8,-1.0,-0.95,-0.72 -0.54,-0.34,0.02,0.41,0.66 0.85,1.0,1.1,1.8), mean=0.0378, stddev=0.467], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.67,0.88 0.99,1.1,1.2,1.4), mean=0.299, stddev=0.368]
component name=tdnnf12.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.44856, continuous=true
component name=tdnnf12.noop type=NoOpComponent, dim=1024
component name=tdnnf13.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000509279, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.005391, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.23,0.23,0.23,0.23 0.23,0.24,0.24,0.25,0.25 0.26,0.26,0.26,0.27), mean=0.244, stddev=0.00792], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.03,0.03,0.04 0.05,0.05,0.06,0.07,0.07 0.08,0.08,0.08,0.09), mean=0.06, stddev=0.011], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.13,0.13,0.14 0.15,0.17,0.24,0.30,0.32 0.34,0.35,0.35,0.37), mean=0.236, stddev=0.0626], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000509279, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.006417, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.06,0.07,0.08 0.08,0.09,0.10,0.11,0.12 0.13,0.13,0.13,0.15), mean=0.102, stddev=0.0153], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.18,0.19,0.19,0.19 0.20,0.20,0.20,0.21,0.22 0.22,0.22,0.22,0.22), mean=0.205, stddev=0.00748], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.06,0.07,0.07 0.08,0.10,0.16,0.27,0.32 0.36,0.38,0.40,0.41), mean=0.184, stddev=0.0917], bias-{mean,stddev}=-0.00015,0.005796, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05
component name=tdnnf13.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=243.265, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.4,-0.89,-0.81,-0.58 -0.45,-0.29,0.007,0.28,0.46 0.58,0.74,0.84,1.1), mean=0.00456, stddev=0.36], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.60,0.76 0.86,0.99,1.0,1.2), mean=0.251, stddev=0.323]
component name=tdnnf13.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.44856, continuous=true
component name=tdnnf13.noop type=NoOpComponent, dim=1024
component name=prefinal-l type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000509279, l2-regularize=0.008, max-change=0.75, params-rms=0.007015, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.19,0.20,0.20,0.21 0.21,0.22,0.22,0.23,0.24 0.24,0.24,0.24,0.25), mean=0.224, stddev=0.00984], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.08,0.09,0.09 0.10,0.10,0.11,0.12,0.13 0.13,0.14,0.14,0.16), mean=0.111, stddev=0.0131], params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.06,0.07,0.07 0.08,0.10,0.18,0.30,0.35 0.38,0.40,0.42,0.44), mean=0.2, stddev=0.103], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=0.000509279, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.00645, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.05,0.06,0.07 0.08,0.09,0.10,0.11,0.12 0.13,0.13,0.14,0.18), mean=0.102, stddev=0.0171], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.19,0.19,0.19,0.19 0.20,0.20,0.21,0.21,0.22 0.22,0.22,0.22,0.23), mean=0.206, stddev=0.00725], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.08,0.08,0.08 0.09,0.11,0.17,0.27,0.32 0.35,0.37,0.38,0.41), mean=0.189, stddev=0.0837], bias-{mean,stddev}=0.001118,0.005466, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.02,0.03,0.04 0.04,0.05,0.06,0.07), mean=0.0186, stddev=0.0163], oderiv-count=61248
component name=prefinal-chain.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=243.265, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.2,-0.82,-0.69,-0.50 -0.35,-0.20,0.11,0.43,0.57 0.72,0.84,1.0,1.6), mean=0.113, stddev=0.377], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.29,0.37 0.44,0.52,0.57,0.70), mean=0.127, stddev=0.168]
component name=prefinal-chain.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000509279, l2-regularize=0.008, max-change=0.75, params-rms=0.005022, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.15,0.15,0.15 0.15,0.16,0.16,0.17,0.17 0.17,0.17,0.18,0.18), mean=0.161, stddev=0.00679], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.04,0.04,0.05 0.06,0.07,0.08,0.09,0.09 0.10,0.10,0.10,0.14), mean=0.0793, stddev=0.0128], params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.04,0.04,0.05 0.05,0.07,0.13,0.22,0.25 0.27,0.29,0.30,0.31), mean=0.143, stddev=0.0738], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=243.265, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-4e-06,-3e-06,-3e-06,-2e-06 -2e-06,-1e-06,4e-09,1e-06,2e-06 3e-06,3e-06,3e-06,4e-06), mean=1.21e-07, stddev=1.51e-06], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.81,1.6,1.9 2.1,2.3,2.4,2.7), mean=0.838, stddev=0.789]
component name=output.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=2824, learning-rate=0.000509279, l2-regularize=0.002, max-change=1.5, linear-params-rms=0.004265, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-05,0.002,0.007,0.02 0.03,0.03,0.06,0.09,0.10 0.11,0.13,0.14,0.20), mean=0.0614, stddev=0.0299], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.19,0.20,0.20,0.21 0.21,0.22,0.23,0.24,0.24 0.24,0.25,0.25,0.26), mean=0.226, stddev=0.0107], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.07,0.07,0.08 0.08,0.10,0.17,0.30,0.36 0.41,0.44,0.46,0.49), mean=0.2, stddev=0.107], bias-{mean,stddev}=2.924e-06,0.004523, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=0.000509279, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.003471, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.01,0.01,0.02 0.03,0.04,0.06,0.07,0.07 0.07,0.08,0.08,0.09), mean=0.0535, stddev=0.015], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.10,0.11,0.11 0.11,0.11,0.11,0.11,0.12 0.12,0.12,0.12,0.12), mean=0.111, stddev=0.00332], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.04,0.05,0.05 0.06,0.07,0.10,0.14,0.16 0.18,0.19,0.19,0.22), mean=0.104, stddev=0.0395], bias-{mean,stddev}=0.0008604,0.003093, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.77e+03, self-repaired-proportion=0.0317171, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.77,-0.43,-0.35,-0.25 -0.16,-0.07,0.02,0.13,0.19 0.26,0.33,0.38,0.69), mean=0.0194, stddev=0.153], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-2.5,-1.8,-1.3,-0.85 -0.54,-0.24,0.28,0.89,1.2 1.4,1.8,1.9,3.4), mean=0.303, stddev=0.72]
component name=prefinal-xent.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=243.265, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.61,-0.35,-0.31,-0.21 -0.14,-0.07,0.05,0.17,0.25 0.33,0.41,0.45,0.64), mean=0.05, stddev=0.162], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.12,0.15 0.18,0.22,0.24,0.42), mean=0.0535, stddev=0.0699]
component name=prefinal-xent.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000509279, l2-regularize=0.008, max-change=0.75, params-rms=0.002257, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.06,0.06,0.06 0.07,0.07,0.07,0.08,0.08 0.08,0.08,0.08,0.09), mean=0.0721, stddev=0.00437], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.009,0.01,0.02 0.02,0.03,0.04,0.04,0.04 0.05,0.05,0.05,0.06), mean=0.0351, stddev=0.00869], params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.007,0.007,0.008 0.009,0.01,0.06,0.10,0.12 0.12,0.13,0.13,0.14), mean=0.0599, stddev=0.0404], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=243.265, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-3e-06,-2e-06,-2e-06,-2e-06 -1e-06,-1e-06,-2e-07,8e-07,1e-06 2e-06,2e-06,2e-06,2e-06), mean=-1.41e-07, stddev=9.97e-07], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0.24,0.51,0.70,0.80 0.84,0.90,0.92,1.0), mean=0.468, stddev=0.262]
component name=output-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=2824, learning-rate=0.00254639, l2-regularize=0.002, learning-rate-factor=5, max-change=1.5, linear-params-rms=0.003368, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0008,0.001,0.005,0.01 0.02,0.03,0.05,0.07,0.08 0.09,0.10,0.11,0.15), mean=0.0488, stddev=0.0229], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.15,0.15,0.16 0.16,0.17,0.18,0.19,0.19 0.20,0.20,0.20,0.22), mean=0.179, stddev=0.012], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.01,0.01,0.01 0.02,0.02,0.14,0.24,0.29 0.33,0.37,0.38,0.43), mean=0.143, stddev=0.108], bias-{mean,stddev}=-6.155e-10,0.003908, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-xent.log-softmax type=LogSoftmaxComponent, dim=2824, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.0006,0.003,0.004 0.005,0.006,0.007,0.06), mean=0.0014, stddev=0.00211], oderiv-count=19520

LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:6.68893 tdnnf2.linear:4.48871 tdnnf2.affine:4.37359 tdnnf3.linear:3.60486 tdnnf3.affine:3.79198 tdnnf4.linear:3.47288 tdnnf4.affine:3.65556 tdnnf5.linear:2.7725 tdnnf5.affine:2.94588 tdnnf6.linear:3.28706 tdnnf6.affine:3.47516 tdnnf7.linear:3.04078 tdnnf7.affine:3.32938 tdnnf8.linear:2.99609 tdnnf8.affine:3.25461 tdnnf9.linear:2.96071 tdnnf9.affine:3.16007 tdnnf10.linear:2.86184 tdnnf10.affine:3.06952 tdnnf11.linear:2.78682 tdnnf11.affine:3.05427 tdnnf12.linear:2.67631 tdnnf12.affine:3.14024 tdnnf13.linear:2.76028 tdnnf13.affine:3.29085 prefinal-l:3.59143 prefinal-chain.affine:3.30712 prefinal-chain.linear:2.57149 output.affine:3.63443 prefinal-xent.affine:1.78028 prefinal-xent.linear:1.15582 output-xent.affine:2.87116 ]
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:12.5879 tdnnf2.linear:8.79295 tdnnf2.affine:7.59932 tdnnf3.linear:6.72802 tdnnf3.affine:6.40307 tdnnf4.linear:6.45807 tdnnf4.affine:5.95383 tdnnf5.linear:4.71311 tdnnf5.affine:4.71127 tdnnf6.linear:6.21685 tdnnf6.affine:6.02939 tdnnf7.linear:5.95687 tdnnf7.affine:5.94348 tdnnf8.linear:5.99405 tdnnf8.affine:5.9458 tdnnf9.linear:6.08964 tdnnf9.affine:5.84245 tdnnf10.linear:6.01942 tdnnf10.affine:5.81185 tdnnf11.linear:6.17953 tdnnf11.affine:5.87526 tdnnf12.linear:5.8343 tdnnf12.affine:5.86163 tdnnf13.linear:5.45089 tdnnf13.affine:5.58587 prefinal-l:9.55528 prefinal-chain.affine:6.51878 prefinal-chain.linear:8.26432 output.affine:18.9106 prefinal-xent.affine:4.77785 prefinal-xent.linear:5.31024 output-xent.affine:29.4779 ]
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.52694 tdnnf2.linear:0.506709 tdnnf2.affine:0.5721 tdnnf3.linear:0.531508 tdnnf3.affine:0.590024 tdnnf4.linear:0.529862 tdnnf4.affine:0.610691 tdnnf5.linear:0.584007 tdnnf5.affine:0.624643 tdnnf6.linear:0.524091 tdnnf6.affine:0.573055 tdnnf7.linear:0.508284 tdnnf7.affine:0.557453 tdnnf8.linear:0.498763 tdnnf8.affine:0.54541 tdnnf9.linear:0.48436 tdnnf9.affine:0.537962 tdnnf10.linear:0.47417 tdnnf10.affine:0.525986 tdnnf11.linear:0.448423 tdnnf11.affine:0.516502 tdnnf12.linear:0.455888 tdnnf12.affine:0.532514 tdnnf13.linear:0.504345 tdnnf13.affine:0.586571 prefinal-l:0.371095 prefinal-chain.affine:0.50602 prefinal-chain.linear:0.309705 output.affine:0.19164 prefinal-xent.affine:0.371847 prefinal-xent.linear:0.216757 output-xent.affine:0.0973276 ]
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:PrintProfile():cu-device.cc:563) -----
[cudevice profile]
Total GPU time:	0s (may involve some double-counting)
-----
# Accounting: time=21 threads=1
# Ended (code 0) at Tue Jul 19 22:15:19 EDT 2022, elapsed time 21 seconds
