# nnet3-am-info telugu_exp/chain_cleaned_1d/tdnn1d_sp/27.mdl && nnet3-show-progress --use-gpu=no telugu_exp/chain_cleaned_1d/tdnn1d_sp/26.mdl telugu_exp/chain_cleaned_1d/tdnn1d_sp/27.mdl 
# Started at Tue Jul 19 21:41:07 EDT 2022
#
nnet3-am-info telugu_exp/chain_cleaned_1d/tdnn1d_sp/27.mdl 
input-dim: 40
ivector-dim: 100
num-pdfs: 2824
prior-dimension: 0
# Nnet info follows.
left-context: 28
right-context: 28
num-parameters: 9032208
modulus: 1
input-node name=ivector dim=100
input-node name=input dim=40
component-node name=lda component=lda input=Append(Offset(input, -1), input, Offset(input, 1), ReplaceIndex(ivector, t, 0)) input-dim=220 output-dim=220
component-node name=tdnn1.affine component=tdnn1.affine input=lda input-dim=220 output-dim=1024
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=1024 output-dim=1024
component-node name=tdnn1.batchnorm component=tdnn1.batchnorm input=tdnn1.relu input-dim=1024 output-dim=1024
component-node name=tdnn1.dropout component=tdnn1.dropout input=tdnn1.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.linear component=tdnnf2.linear input=tdnn1.dropout input-dim=1024 output-dim=128
component-node name=tdnnf2.affine component=tdnnf2.affine input=tdnnf2.linear input-dim=128 output-dim=1024
component-node name=tdnnf2.relu component=tdnnf2.relu input=tdnnf2.affine input-dim=1024 output-dim=1024
component-node name=tdnnf2.batchnorm component=tdnnf2.batchnorm input=tdnnf2.relu input-dim=1024 output-dim=1024
component-node name=tdnnf2.dropout component=tdnnf2.dropout input=tdnnf2.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.noop component=tdnnf2.noop input=Sum(Scale(0.66, tdnn1.dropout), tdnnf2.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf3.linear component=tdnnf3.linear input=tdnnf2.noop input-dim=1024 output-dim=128
component-node name=tdnnf3.affine component=tdnnf3.affine input=tdnnf3.linear input-dim=128 output-dim=1024
component-node name=tdnnf3.relu component=tdnnf3.relu input=tdnnf3.affine input-dim=1024 output-dim=1024
component-node name=tdnnf3.batchnorm component=tdnnf3.batchnorm input=tdnnf3.relu input-dim=1024 output-dim=1024
component-node name=tdnnf3.dropout component=tdnnf3.dropout input=tdnnf3.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf3.noop component=tdnnf3.noop input=Sum(Scale(0.66, tdnnf2.noop), tdnnf3.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf4.linear component=tdnnf4.linear input=tdnnf3.noop input-dim=1024 output-dim=128
component-node name=tdnnf4.affine component=tdnnf4.affine input=tdnnf4.linear input-dim=128 output-dim=1024
component-node name=tdnnf4.relu component=tdnnf4.relu input=tdnnf4.affine input-dim=1024 output-dim=1024
component-node name=tdnnf4.batchnorm component=tdnnf4.batchnorm input=tdnnf4.relu input-dim=1024 output-dim=1024
component-node name=tdnnf4.dropout component=tdnnf4.dropout input=tdnnf4.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf4.noop component=tdnnf4.noop input=Sum(Scale(0.66, tdnnf3.noop), tdnnf4.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf5.linear component=tdnnf5.linear input=tdnnf4.noop input-dim=1024 output-dim=128
component-node name=tdnnf5.affine component=tdnnf5.affine input=tdnnf5.linear input-dim=128 output-dim=1024
component-node name=tdnnf5.relu component=tdnnf5.relu input=tdnnf5.affine input-dim=1024 output-dim=1024
component-node name=tdnnf5.batchnorm component=tdnnf5.batchnorm input=tdnnf5.relu input-dim=1024 output-dim=1024
component-node name=tdnnf5.dropout component=tdnnf5.dropout input=tdnnf5.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf5.noop component=tdnnf5.noop input=Sum(Scale(0.66, tdnnf4.noop), tdnnf5.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf6.linear component=tdnnf6.linear input=tdnnf5.noop input-dim=1024 output-dim=128
component-node name=tdnnf6.affine component=tdnnf6.affine input=tdnnf6.linear input-dim=128 output-dim=1024
component-node name=tdnnf6.relu component=tdnnf6.relu input=tdnnf6.affine input-dim=1024 output-dim=1024
component-node name=tdnnf6.batchnorm component=tdnnf6.batchnorm input=tdnnf6.relu input-dim=1024 output-dim=1024
component-node name=tdnnf6.dropout component=tdnnf6.dropout input=tdnnf6.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf6.noop component=tdnnf6.noop input=Sum(Scale(0.66, tdnnf5.noop), tdnnf6.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf7.linear component=tdnnf7.linear input=tdnnf6.noop input-dim=1024 output-dim=128
component-node name=tdnnf7.affine component=tdnnf7.affine input=tdnnf7.linear input-dim=128 output-dim=1024
component-node name=tdnnf7.relu component=tdnnf7.relu input=tdnnf7.affine input-dim=1024 output-dim=1024
component-node name=tdnnf7.batchnorm component=tdnnf7.batchnorm input=tdnnf7.relu input-dim=1024 output-dim=1024
component-node name=tdnnf7.dropout component=tdnnf7.dropout input=tdnnf7.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf7.noop component=tdnnf7.noop input=Sum(Scale(0.66, tdnnf6.noop), tdnnf7.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf8.linear component=tdnnf8.linear input=tdnnf7.noop input-dim=1024 output-dim=128
component-node name=tdnnf8.affine component=tdnnf8.affine input=tdnnf8.linear input-dim=128 output-dim=1024
component-node name=tdnnf8.relu component=tdnnf8.relu input=tdnnf8.affine input-dim=1024 output-dim=1024
component-node name=tdnnf8.batchnorm component=tdnnf8.batchnorm input=tdnnf8.relu input-dim=1024 output-dim=1024
component-node name=tdnnf8.dropout component=tdnnf8.dropout input=tdnnf8.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf8.noop component=tdnnf8.noop input=Sum(Scale(0.66, tdnnf7.noop), tdnnf8.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf9.linear component=tdnnf9.linear input=tdnnf8.noop input-dim=1024 output-dim=128
component-node name=tdnnf9.affine component=tdnnf9.affine input=tdnnf9.linear input-dim=128 output-dim=1024
component-node name=tdnnf9.relu component=tdnnf9.relu input=tdnnf9.affine input-dim=1024 output-dim=1024
component-node name=tdnnf9.batchnorm component=tdnnf9.batchnorm input=tdnnf9.relu input-dim=1024 output-dim=1024
component-node name=tdnnf9.dropout component=tdnnf9.dropout input=tdnnf9.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf9.noop component=tdnnf9.noop input=Sum(Scale(0.66, tdnnf8.noop), tdnnf9.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf10.linear component=tdnnf10.linear input=tdnnf9.noop input-dim=1024 output-dim=128
component-node name=tdnnf10.affine component=tdnnf10.affine input=tdnnf10.linear input-dim=128 output-dim=1024
component-node name=tdnnf10.relu component=tdnnf10.relu input=tdnnf10.affine input-dim=1024 output-dim=1024
component-node name=tdnnf10.batchnorm component=tdnnf10.batchnorm input=tdnnf10.relu input-dim=1024 output-dim=1024
component-node name=tdnnf10.dropout component=tdnnf10.dropout input=tdnnf10.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf10.noop component=tdnnf10.noop input=Sum(Scale(0.66, tdnnf9.noop), tdnnf10.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf11.linear component=tdnnf11.linear input=tdnnf10.noop input-dim=1024 output-dim=128
component-node name=tdnnf11.affine component=tdnnf11.affine input=tdnnf11.linear input-dim=128 output-dim=1024
component-node name=tdnnf11.relu component=tdnnf11.relu input=tdnnf11.affine input-dim=1024 output-dim=1024
component-node name=tdnnf11.batchnorm component=tdnnf11.batchnorm input=tdnnf11.relu input-dim=1024 output-dim=1024
component-node name=tdnnf11.dropout component=tdnnf11.dropout input=tdnnf11.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf11.noop component=tdnnf11.noop input=Sum(Scale(0.66, tdnnf10.noop), tdnnf11.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf12.linear component=tdnnf12.linear input=tdnnf11.noop input-dim=1024 output-dim=128
component-node name=tdnnf12.affine component=tdnnf12.affine input=tdnnf12.linear input-dim=128 output-dim=1024
component-node name=tdnnf12.relu component=tdnnf12.relu input=tdnnf12.affine input-dim=1024 output-dim=1024
component-node name=tdnnf12.batchnorm component=tdnnf12.batchnorm input=tdnnf12.relu input-dim=1024 output-dim=1024
component-node name=tdnnf12.dropout component=tdnnf12.dropout input=tdnnf12.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf12.noop component=tdnnf12.noop input=Sum(Scale(0.66, tdnnf11.noop), tdnnf12.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf13.linear component=tdnnf13.linear input=tdnnf12.noop input-dim=1024 output-dim=128
component-node name=tdnnf13.affine component=tdnnf13.affine input=tdnnf13.linear input-dim=128 output-dim=1024
component-node name=tdnnf13.relu component=tdnnf13.relu input=tdnnf13.affine input-dim=1024 output-dim=1024
component-node name=tdnnf13.batchnorm component=tdnnf13.batchnorm input=tdnnf13.relu input-dim=1024 output-dim=1024
component-node name=tdnnf13.dropout component=tdnnf13.dropout input=tdnnf13.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf13.noop component=tdnnf13.noop input=Sum(Scale(0.66, tdnnf12.noop), tdnnf13.dropout) input-dim=1024 output-dim=1024
component-node name=prefinal-l component=prefinal-l input=tdnnf13.noop input-dim=1024 output-dim=256
component-node name=prefinal-chain.affine component=prefinal-chain.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-chain.relu component=prefinal-chain.relu input=prefinal-chain.affine input-dim=1024 output-dim=1024
component-node name=prefinal-chain.batchnorm1 component=prefinal-chain.batchnorm1 input=prefinal-chain.relu input-dim=1024 output-dim=1024
component-node name=prefinal-chain.linear component=prefinal-chain.linear input=prefinal-chain.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-chain.batchnorm2 component=prefinal-chain.batchnorm2 input=prefinal-chain.linear input-dim=256 output-dim=256
component-node name=output.affine component=output.affine input=prefinal-chain.batchnorm2 input-dim=256 output-dim=2824
output-node name=output input=output.affine dim=2824 objective=linear
component-node name=prefinal-xent.affine component=prefinal-xent.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-xent.relu component=prefinal-xent.relu input=prefinal-xent.affine input-dim=1024 output-dim=1024
component-node name=prefinal-xent.batchnorm1 component=prefinal-xent.batchnorm1 input=prefinal-xent.relu input-dim=1024 output-dim=1024
component-node name=prefinal-xent.linear component=prefinal-xent.linear input=prefinal-xent.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-xent.batchnorm2 component=prefinal-xent.batchnorm2 input=prefinal-xent.linear input-dim=256 output-dim=256
component-node name=output-xent.affine component=output-xent.affine input=prefinal-xent.batchnorm2 input-dim=256 output-dim=2824
component-node name=output-xent.log-softmax component=output-xent.log-softmax input=output-xent.affine input-dim=2824 output-dim=2824
output-node name=output-xent input=output-xent.log-softmax dim=2824 objective=linear
component name=lda type=FixedAffineComponent, input-dim=220, output-dim=220, linear-params-rms=0.00576, bias-{mean,stddev}=-0.0009624,0.01288
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=220, output-dim=1024, learning-rate=0.000716314, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.02837, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.07,0.09,0.13 0.19,0.27,0.35,0.48,0.59 0.69,0.89,1.1,1.4), mean=0.381, stddev=0.179], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.54,0.55,0.55,0.58 0.60,0.66,0.82,1.0,1.2 1.4,1.6,1.6,1.6), mean=0.873, stddev=0.248], bias-{mean,stddev}=-0.005195,0.03312, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=2.77e+06, self-repaired-proportion=0.0357732, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(5e-05,0.0002,0.0004,0.001 0.002,0.004,0.02,0.04,0.04 0.05,0.05,0.06,0.07), mean=0.0214, stddev=0.0158], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.05,0.05,0.08 0.11,0.16,0.45,0.68,0.78 0.87,0.92,0.95,0.99), mean=0.437, stddev=0.257], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.04,0.04,0.05 0.06,0.07,0.10,0.13,0.15 0.17,0.20,0.24,0.34), mean=0.102, stddev=0.0397], oderiv-count=4.67853e+06
component name=tdnn1.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=46738.2, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-06,0.0001,0.0002,0.0009 0.002,0.004,0.02,0.04,0.04 0.05,0.06,0.06,0.07), mean=0.0214, stddev=0.016], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.0009,0.002,0.004 0.007,0.01,0.03,0.04,0.04 0.05,0.05,0.05,0.07), mean=0.0277, stddev=0.0135]
component name=tdnn1.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.201646, continuous=true
component name=tdnnf2.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000716314, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.01851, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.84,0.84,0.84,0.84 0.84,0.84,0.84,0.84,0.84 0.84,0.84,0.84,0.84), mean=0.837, stddev=0.000244], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.12,0.12,0.14 0.15,0.17,0.20,0.24,0.27 0.29,0.32,0.33,0.42), mean=0.204, stddev=0.0459], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000716314, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.01487, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.15,0.15,0.16 0.17,0.19,0.22,0.27,0.31 0.35,0.38,0.39,0.43), mean=0.231, stddev=0.0552], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.39,0.40,0.41,0.42 0.44,0.45,0.47,0.50,0.52 0.53,0.55,0.55,0.59), mean=0.475, stddev=0.0321], bias-{mean,stddev}=-0.03029,0.04922, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=3e+06, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.05,0.07,0.08 0.09,0.09,0.11,0.12,0.13 0.14,0.15,0.15,0.19), mean=0.109, stddev=0.019], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.17,0.29,0.31,0.36 0.38,0.40,0.45,0.51,0.53 0.56,0.60,0.63,0.70), mean=0.455, stddev=0.0674], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.007,0.008,0.008 0.008,0.009,0.01,0.01,0.01 0.02,0.02,0.02,0.03), mean=0.0107, stddev=0.00232], oderiv-count=4.46714e+06
component name=tdnnf2.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=46226.2, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.05,0.06,0.07 0.08,0.09,0.11,0.12,0.13 0.14,0.15,0.15,0.17), mean=0.106, stddev=0.0195], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.12,0.13,0.14 0.15,0.15,0.17,0.20,0.21 0.23,0.24,0.26,0.33), mean=0.177, stddev=0.0283]
component name=tdnnf2.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.201646, continuous=true
component name=tdnnf2.noop type=NoOpComponent, dim=1024
component name=tdnnf3.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000716314, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.01367, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.62,0.62,0.62 0.62,0.62,0.62,0.62,0.62 0.62,0.62,0.62,0.62), mean=0.618, stddev=0.000828], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.12,0.12,0.12 0.13,0.14,0.15,0.17,0.18 0.19,0.20,0.21,0.23), mean=0.153, stddev=0.0209], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000716314, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.01247, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.13,0.14,0.15 0.15,0.16,0.19,0.22,0.25 0.27,0.29,0.31,0.36), mean=0.196, stddev=0.0377], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.35,0.35,0.35,0.36 0.36,0.38,0.40,0.42,0.43 0.44,0.44,0.45,0.48), mean=0.398, stddev=0.0244], bias-{mean,stddev}=-0.01882,0.02566, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=2.97e+06, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.10,0.10,0.11 0.11,0.12,0.14,0.15,0.16 0.17,0.18,0.19,0.25), mean=0.137, stddev=0.0195], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.30,0.36,0.37,0.40 0.41,0.43,0.46,0.50,0.52 0.53,0.54,0.56,0.62), mean=0.463, stddev=0.0414], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.005,0.005,0.005 0.006,0.006,0.007,0.007,0.008 0.009,0.01,0.01,0.01), mean=0.00673, stddev=0.0011], oderiv-count=4.52678e+06
component name=tdnnf3.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=45714.2, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.09,0.10,0.10 0.11,0.12,0.13,0.15,0.16 0.17,0.18,0.19,0.22), mean=0.132, stddev=0.0195], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.16,0.16,0.18 0.18,0.20,0.22,0.25,0.26 0.28,0.29,0.31,0.41), mean=0.224, stddev=0.0327]
component name=tdnnf3.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.201646, continuous=true
component name=tdnnf3.noop type=NoOpComponent, dim=1024
component name=tdnnf4.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000716314, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.01298, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.59,0.59,0.59,0.59 0.59,0.59,0.59,0.59,0.59 0.59,0.59,0.59,0.59), mean=0.588, stddev=0.00104], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.11,0.12,0.12 0.13,0.13,0.14,0.16,0.17 0.18,0.19,0.19,0.22), mean=0.146, stddev=0.0173], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000716314, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.01163, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.13,0.14,0.14 0.15,0.16,0.18,0.21,0.22 0.23,0.25,0.26,0.32), mean=0.184, stddev=0.0282], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.32,0.32,0.33,0.33 0.34,0.35,0.37,0.39,0.40 0.42,0.43,0.43,0.44), mean=0.371, stddev=0.0254], bias-{mean,stddev}=-0.0111,0.01948, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=1.06e+06, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.10,0.11,0.11 0.12,0.12,0.14,0.15,0.16 0.16,0.17,0.19,0.27), mean=0.137, stddev=0.0168], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.34,0.38,0.39,0.41 0.42,0.43,0.46,0.49,0.51 0.52,0.54,0.54,0.59), mean=0.463, stddev=0.0352], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.007,0.008,0.008,0.008 0.009,0.009,0.01,0.01,0.01 0.01,0.01,0.01,0.02), mean=0.0104, stddev=0.00151], oderiv-count=1.59552e+06
component name=tdnnf4.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=15238.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.10,0.10,0.11 0.12,0.12,0.13,0.15,0.16 0.16,0.17,0.18,0.26), mean=0.136, stddev=0.0171], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.17,0.18,0.18 0.19,0.20,0.23,0.25,0.26 0.28,0.29,0.30,0.43), mean=0.229, stddev=0.0299]
component name=tdnnf4.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.201646, continuous=true
component name=tdnnf4.noop type=NoOpComponent, dim=1024
component name=tdnnf5.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000716314, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=0, linear-params-rms=0.01232, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.39,0.39,0.39,0.39 0.39,0.39,0.39,0.40,0.40 0.40,0.40,0.40,0.40), mean=0.394, stddev=0.000846], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.11,0.12,0.12 0.12,0.13,0.14,0.15,0.15 0.16,0.16,0.17,0.18), mean=0.139, stddev=0.0112], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000716314, l2-regularize=0.008, max-change=0.75, time-offsets=0, linear-params-rms=0.01228, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.10,0.10,0.11 0.11,0.12,0.14,0.15,0.16 0.18,0.19,0.19,0.22), mean=0.137, stddev=0.0211], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.32,0.33,0.33,0.35 0.36,0.37,0.39,0.41,0.43 0.43,0.46,0.47,0.48), mean=0.392, stddev=0.028], bias-{mean,stddev}=-0.008086,0.02928, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=1.08e+06, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.04,0.05,0.05 0.06,0.07,0.08,0.09,0.10 0.10,0.11,0.11,0.12), mean=0.0783, stddev=0.0151], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.23,0.26,0.30 0.33,0.37,0.43,0.49,0.53 0.56,0.58,0.60,0.72), mean=0.426, stddev=0.0778], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.01,0.01,0.01 0.02,0.02,0.02,0.02,0.02 0.02,0.03,0.03,0.04), mean=0.0193, stddev=0.00332], oderiv-count=1.53459e+06
component name=tdnnf5.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=15238.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.04,0.04,0.05 0.06,0.07,0.08,0.09,0.10 0.10,0.11,0.11,0.13), mean=0.0769, stddev=0.0153], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.09,0.09,0.10 0.11,0.12,0.14,0.15,0.16 0.17,0.18,0.19,0.24), mean=0.136, stddev=0.0218]
component name=tdnnf5.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.201646, continuous=true
component name=tdnnf5.noop type=NoOpComponent, dim=1024
component name=tdnnf6.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000716314, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.0129, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.58,0.58,0.58,0.58 0.58,0.58,0.58,0.58,0.58 0.58,0.58,0.58,0.58), mean=0.584, stddev=0.000173], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.11,0.12,0.12 0.12,0.13,0.14,0.16,0.17 0.18,0.18,0.19,0.24), mean=0.145, stddev=0.017], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000716314, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.01175, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.12,0.13,0.14 0.15,0.16,0.19,0.21,0.22 0.23,0.25,0.26,0.32), mean=0.186, stddev=0.0285], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.30,0.32,0.33,0.33 0.34,0.35,0.37,0.40,0.41 0.41,0.43,0.45,0.46), mean=0.375, stddev=0.0264], bias-{mean,stddev}=-0.02502,0.0176, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.66e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.10,0.11,0.11 0.12,0.12,0.13,0.15,0.15 0.16,0.17,0.17,0.25), mean=0.134, stddev=0.0146], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.29,0.37,0.38,0.39 0.40,0.42,0.45,0.48,0.49 0.51,0.52,0.53,0.56), mean=0.448, stddev=0.0364], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.007,0.008,0.008,0.009 0.009,0.01,0.01,0.01,0.01 0.01,0.01,0.01,0.02), mean=0.0106, stddev=0.00131], oderiv-count=1.47693e+06
component name=tdnnf6.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=14726.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.10,0.10,0.11 0.11,0.12,0.13,0.14,0.15 0.16,0.17,0.17,0.25), mean=0.132, stddev=0.0154], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.18,0.18,0.19 0.20,0.21,0.23,0.25,0.26 0.27,0.28,0.29,0.46), mean=0.23, stddev=0.0251]
component name=tdnnf6.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.201646, continuous=true
component name=tdnnf6.noop type=NoOpComponent, dim=1024
component name=tdnnf7.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000716314, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01192, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.54,0.54,0.54,0.54 0.54,0.54,0.54,0.54,0.54 0.54,0.54,0.54,0.54), mean=0.54, stddev=0.00189], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.10,0.10,0.11 0.11,0.12,0.13,0.15,0.16 0.16,0.17,0.18,0.22), mean=0.134, stddev=0.0161], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000716314, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.01158, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.11,0.12,0.13 0.15,0.16,0.18,0.21,0.22 0.23,0.24,0.26,0.32), mean=0.183, stddev=0.0291], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.30,0.31,0.32,0.33 0.34,0.35,0.37,0.39,0.40 0.41,0.42,0.42,0.43), mean=0.37, stddev=0.024], bias-{mean,stddev}=-0.02625,0.01927, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.31e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.10,0.10,0.11 0.11,0.12,0.13,0.14,0.15 0.16,0.16,0.17,0.18), mean=0.131, stddev=0.0151], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.31,0.34,0.36,0.38 0.39,0.41,0.44,0.48,0.49 0.51,0.52,0.53,0.56), mean=0.441, stddev=0.0396], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.007,0.008,0.008,0.009 0.009,0.01,0.01,0.01,0.01 0.01,0.01,0.01,0.02), mean=0.011, stddev=0.00145], oderiv-count=1.4407e+06
component name=tdnnf7.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=14214.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.10,0.10,0.10 0.11,0.12,0.13,0.14,0.15 0.16,0.16,0.17,0.19), mean=0.129, stddev=0.0158], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.18,0.19,0.19 0.20,0.21,0.23,0.25,0.25 0.26,0.27,0.29,0.34), mean=0.228, stddev=0.0221]
component name=tdnnf7.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.201646, continuous=true
component name=tdnnf7.noop type=NoOpComponent, dim=1024
component name=tdnnf8.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000716314, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01218, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.55,0.55,0.55,0.55 0.55,0.55,0.55,0.55,0.55 0.55,0.55,0.55,0.55), mean=0.551, stddev=0.00108], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.11,0.11,0.11 0.12,0.12,0.14,0.15,0.16 0.17,0.18,0.18,0.22), mean=0.137, stddev=0.0167], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000716314, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.01163, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.10,0.11,0.13 0.14,0.16,0.18,0.21,0.22 0.23,0.25,0.25,0.28), mean=0.183, stddev=0.0316], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.32,0.33,0.33,0.34 0.34,0.35,0.37,0.39,0.40 0.41,0.41,0.43,0.44), mean=0.371, stddev=0.0217], bias-{mean,stddev}=-0.02892,0.02094, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.79e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.07,0.08,0.09 0.10,0.11,0.13,0.14,0.15 0.16,0.16,0.17,0.20), mean=0.126, stddev=0.0198], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.19,0.32,0.33,0.36 0.38,0.40,0.44,0.48,0.49 0.51,0.52,0.53,0.57), mean=0.435, stddev=0.0466], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.007,0.008,0.008,0.009 0.009,0.01,0.01,0.01,0.01 0.01,0.02,0.02,0.02), mean=0.0113, stddev=0.00167], oderiv-count=1.41414e+06
component name=tdnnf8.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=13702.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.07,0.08,0.09 0.10,0.11,0.13,0.14,0.15 0.16,0.16,0.17,0.20), mean=0.125, stddev=0.0201], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.18,0.18,0.19 0.19,0.20,0.22,0.24,0.25 0.27,0.28,0.29,0.32), mean=0.224, stddev=0.0244]
component name=tdnnf8.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.201646, continuous=true
component name=tdnnf8.noop type=NoOpComponent, dim=1024
component name=tdnnf9.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000716314, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01257, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.56,0.57,0.57,0.57 0.57,0.57,0.57,0.57,0.57 0.57,0.57,0.57,0.57), mean=0.569, stddev=0.0019], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.11,0.11,0.11 0.12,0.13,0.14,0.16,0.16 0.17,0.18,0.19,0.22), mean=0.141, stddev=0.0183], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000716314, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.01155, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.08,0.09,0.11 0.13,0.15,0.19,0.21,0.22 0.23,0.25,0.26,0.41), mean=0.181, stddev=0.0367], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.31,0.31,0.32,0.33 0.33,0.34,0.37,0.39,0.40 0.42,0.43,0.44,0.46), mean=0.369, stddev=0.027], bias-{mean,stddev}=-0.02832,0.02268, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.27e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.07,0.07,0.08 0.09,0.11,0.13,0.14,0.15 0.16,0.17,0.18,0.25), mean=0.124, stddev=0.0238], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.26,0.30,0.32 0.35,0.39,0.43,0.47,0.49 0.51,0.53,0.53,0.60), mean=0.426, stddev=0.0555], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.007,0.007,0.008,0.008 0.009,0.009,0.01,0.01,0.01 0.01,0.02,0.02,0.02), mean=0.0109, stddev=0.00184], oderiv-count=1.40346e+06
component name=tdnnf9.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=13190.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.07,0.07,0.08 0.09,0.10,0.12,0.14,0.15 0.16,0.17,0.18,0.25), mean=0.122, stddev=0.0243], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.18,0.19,0.19 0.20,0.21,0.23,0.25,0.26 0.27,0.29,0.30,0.42), mean=0.228, stddev=0.0245]
component name=tdnnf9.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.201646, continuous=true
component name=tdnnf9.noop type=NoOpComponent, dim=1024
component name=tdnnf10.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000716314, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.0125, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.56,0.56,0.56,0.56 0.56,0.56,0.57,0.57,0.57 0.57,0.57,0.57,0.57), mean=0.566, stddev=0.00134], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.10,0.10,0.11 0.12,0.12,0.14,0.15,0.17 0.18,0.19,0.20,0.24), mean=0.14, stddev=0.0205], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000716314, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.01161, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.07,0.08,0.09 0.12,0.14,0.19,0.22,0.23 0.24,0.25,0.26,0.29), mean=0.18, stddev=0.0442], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.31,0.32,0.32,0.33 0.34,0.35,0.37,0.40,0.40 0.42,0.43,0.44,0.45), mean=0.371, stddev=0.0272], bias-{mean,stddev}=-0.0252,0.02049, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.42e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.06,0.06,0.07 0.09,0.10,0.13,0.15,0.16 0.17,0.18,0.19,0.21), mean=0.125, stddev=0.0279], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.21,0.24,0.29 0.33,0.38,0.43,0.47,0.49 0.50,0.52,0.53,0.58), mean=0.416, stddev=0.0641], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.007,0.007,0.008 0.008,0.009,0.01,0.01,0.01 0.01,0.02,0.02,0.02), mean=0.0108, stddev=0.0019], oderiv-count=1.25709e+06
component name=tdnnf10.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=12678.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.06,0.06,0.07 0.08,0.10,0.13,0.15,0.16 0.17,0.18,0.18,0.22), mean=0.123, stddev=0.0287], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.18,0.19,0.20 0.21,0.22,0.24,0.26,0.27 0.28,0.30,0.31,0.37), mean=0.239, stddev=0.0269]
component name=tdnnf10.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.201646, continuous=true
component name=tdnnf10.noop type=NoOpComponent, dim=1024
component name=tdnnf11.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000716314, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01303, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.59,0.59,0.59,0.59 0.59,0.59,0.59,0.59,0.59 0.59,0.59,0.59,0.59), mean=0.59, stddev=0.000946], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.10,0.10,0.11 0.12,0.13,0.14,0.16,0.18 0.19,0.21,0.22,0.27), mean=0.145, stddev=0.0247], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000716314, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.01199, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.06,0.07,0.09 0.11,0.14,0.19,0.23,0.24 0.26,0.27,0.27,0.30), mean=0.185, stddev=0.051], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.31,0.33,0.33,0.34 0.35,0.36,0.38,0.41,0.41 0.44,0.44,0.45,0.47), mean=0.383, stddev=0.0277], bias-{mean,stddev}=-0.02391,0.01959, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.56e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.06,0.06,0.07 0.08,0.10,0.13,0.16,0.17 0.18,0.19,0.21,0.26), mean=0.129, stddev=0.0329], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.18,0.21,0.26 0.32,0.36,0.41,0.46,0.48 0.50,0.51,0.53,0.58), mean=0.402, stddev=0.07], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.007,0.007,0.008 0.008,0.009,0.01,0.01,0.01 0.01,0.01,0.02,0.02), mean=0.0104, stddev=0.00198], oderiv-count=1.20698e+06
component name=tdnnf11.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=12166.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.05,0.06,0.07 0.08,0.10,0.13,0.16,0.17 0.18,0.20,0.21,0.25), mean=0.127, stddev=0.0342], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.17,0.20,0.21,0.22 0.23,0.24,0.26,0.29,0.31 0.32,0.34,0.36,0.49), mean=0.267, stddev=0.0338]
component name=tdnnf11.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.201646, continuous=true
component name=tdnnf11.noop type=NoOpComponent, dim=1024
component name=tdnnf12.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000716314, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01246, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.56,0.56,0.56,0.56 0.56,0.56,0.56,0.56,0.57 0.57,0.57,0.57,0.57), mean=0.564, stddev=0.00137], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.09,0.09,0.10 0.11,0.12,0.13,0.16,0.18 0.19,0.21,0.22,0.29), mean=0.138, stddev=0.0279], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000716314, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.01221, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.06,0.07,0.09 0.11,0.14,0.18,0.24,0.27 0.28,0.30,0.30,0.32), mean=0.187, stddev=0.0581], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.33,0.33,0.34,0.35 0.36,0.37,0.39,0.41,0.42 0.44,0.45,0.45,0.48), mean=0.39, stddev=0.0265], bias-{mean,stddev}=-0.02473,0.01839, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.89e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.05,0.05,0.06 0.07,0.09,0.11,0.14,0.15 0.16,0.17,0.18,0.23), mean=0.113, stddev=0.0303], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.15,0.17,0.23 0.27,0.31,0.37,0.42,0.45 0.47,0.49,0.50,0.56), mean=0.365, stddev=0.0721], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.007,0.008,0.008,0.009 0.009,0.01,0.01,0.01,0.02 0.02,0.02,0.02,0.03), mean=0.0122, stddev=0.00256], oderiv-count=1.17171e+06
component name=tdnnf12.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11654.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.04,0.05,0.06 0.07,0.08,0.11,0.13,0.15 0.16,0.17,0.18,0.23), mean=0.108, stddev=0.0305], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.17,0.20,0.21,0.22 0.23,0.24,0.27,0.31,0.34 0.35,0.37,0.38,0.48), mean=0.279, stddev=0.0406]
component name=tdnnf12.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.201646, continuous=true
component name=tdnnf12.noop type=NoOpComponent, dim=1024
component name=tdnnf13.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000716314, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01148, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.52,0.52,0.52,0.52 0.52,0.52,0.52,0.52,0.52 0.52,0.52,0.52,0.52), mean=0.52, stddev=0.00144], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.08,0.08,0.09 0.09,0.10,0.12,0.14,0.16 0.19,0.21,0.23,0.28), mean=0.126, stddev=0.0302], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000716314, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.01157, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.08,0.09,0.10 0.11,0.13,0.17,0.22,0.25 0.28,0.30,0.31,0.34), mean=0.178, stddev=0.052], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.32,0.33,0.33,0.33 0.34,0.35,0.37,0.39,0.40 0.41,0.43,0.43,0.44), mean=0.369, stddev=0.025], bias-{mean,stddev}=-0.02563,0.02339, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.22e+05, self-repaired-proportion=0.000344229, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.02,0.02,0.03 0.04,0.06,0.07,0.09,0.11 0.12,0.13,0.15,0.18), mean=0.0753, stddev=0.0254], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.09,0.13,0.16 0.19,0.23,0.29,0.35,0.39 0.42,0.47,0.50,0.61), mean=0.293, stddev=0.0814], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.01,0.01,0.02 0.02,0.02,0.02,0.02,0.03 0.03,0.03,0.04,0.07), mean=0.0201, stddev=0.00475], oderiv-count=1.07034e+06
component name=tdnnf13.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11142.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0004,0.008,0.02,0.03 0.04,0.05,0.07,0.09,0.10 0.11,0.13,0.14,0.18), mean=0.0689, stddev=0.0257], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.08,0.12,0.16 0.18,0.20,0.23,0.26,0.27 0.29,0.30,0.31,0.36), mean=0.227, stddev=0.0424]
component name=tdnnf13.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.201646, continuous=true
component name=tdnnf13.noop type=NoOpComponent, dim=1024
component name=prefinal-l type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000716314, l2-regularize=0.008, max-change=0.75, params-rms=0.02236, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.71,0.71,0.71,0.71 0.71,0.71,0.72,0.72,0.72 0.72,0.72,0.72,0.72), mean=0.715, stddev=0.00192], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.27,0.29,0.30,0.31 0.32,0.33,0.35,0.38,0.40 0.42,0.44,0.45,0.47), mean=0.356, stddev=0.0325], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=0.000716314, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.01363, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.08,0.08,0.11 0.13,0.16,0.21,0.26,0.28 0.31,0.33,0.36,0.46), mean=0.21, stddev=0.0599], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.37,0.38,0.39,0.40 0.40,0.42,0.44,0.46,0.47 0.48,0.49,0.50,0.53), mean=0.435, stddev=0.0249], bias-{mean,stddev}=-0.02109,0.02422, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.83e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.04,0.04,0.05 0.05,0.07,0.09,0.11,0.12 0.13,0.15,0.15,0.18), mean=0.0905, stddev=0.0274], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.19,0.21,0.25 0.28,0.31,0.38,0.43,0.47 0.50,0.52,0.53,0.58), mean=0.375, stddev=0.0742], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.007,0.009,0.009,0.01 0.01,0.01,0.02,0.02,0.02 0.02,0.03,0.03,0.06), mean=0.0163, stddev=0.00488], oderiv-count=1.13888e+06
component name=prefinal-chain.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11142.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.03,0.04,0.04 0.05,0.06,0.09,0.11,0.12 0.13,0.14,0.15,0.18), mean=0.0877, stddev=0.0268], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.13,0.13,0.14 0.15,0.17,0.18,0.20,0.21 0.22,0.23,0.23,0.25), mean=0.182, stddev=0.0222]
component name=prefinal-chain.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000716314, l2-regularize=0.008, max-change=0.75, params-rms=0.01755, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.56,0.56,0.56,0.56 0.56,0.56,0.56,0.56,0.56 0.56,0.56,0.57,0.57), mean=0.562, stddev=0.0015], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.19,0.21,0.22,0.23 0.24,0.25,0.27,0.30,0.33 0.35,0.37,0.39,0.46), mean=0.278, stddev=0.0371], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=11142.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-8e-08,-7e-08,-6e-08,-5e-08 -4e-08,-2e-08,-2e-09,2e-08,3e-08 4e-08,5e-08,6e-08,8e-08), mean=-3.2e-10, stddev=2.77e-08], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.71,0.72,0.74,0.77 0.78,0.80,0.85,0.89,0.91 0.93,0.95,1.0,1.1), mean=0.847, stddev=0.0552]
component name=output.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=2824, learning-rate=0.000716314, l2-regularize=0.002, max-change=1.5, linear-params-rms=0.02423, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.03,0.07,0.21 0.27,0.32,0.38,0.44,0.49 0.52,0.56,0.58,1.1), mean=0.375, stddev=0.0974], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.0,1.0,1.1,1.1 1.1,1.2,1.3,1.4,1.4 1.5,1.5,1.5,1.6), mean=1.28, stddev=0.103], bias-{mean,stddev}=0.0003972,0.07644, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=0.000716314, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.009263, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.02,0.03,0.05 0.07,0.12,0.15,0.18,0.19 0.20,0.21,0.21,0.24), mean=0.142, stddev=0.0433], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.25,0.25,0.26,0.27 0.27,0.28,0.30,0.31,0.32 0.33,0.34,0.34,0.36), mean=0.296, stddev=0.0186], bias-{mean,stddev}=-0.05118,0.05264, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.5e+05, self-repaired-proportion=0.0120003, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-05,0.004,0.007,0.01 0.01,0.02,0.04,0.07,0.09 0.10,0.11,0.12,0.18), mean=0.0457, stddev=0.0282], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.008,0.04,0.06,0.09 0.11,0.15,0.28,0.43,0.51 0.66,0.71,0.72,0.77), mean=0.301, stddev=0.165], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.005,0.005 0.007,0.008,0.01,0.02,0.02 0.02,0.02,0.02,0.03), mean=0.0118, stddev=0.00408], oderiv-count=1.12634e+06
component name=prefinal-xent.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11142.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-06,0.003,0.006,0.009 0.01,0.02,0.04,0.07,0.08 0.10,0.11,0.12,0.18), mean=0.0433, stddev=0.0277], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(9e-05,0.02,0.04,0.05 0.06,0.07,0.09,0.11,0.12 0.13,0.14,0.14,0.20), mean=0.0874, stddev=0.0251]
component name=prefinal-xent.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000716314, l2-regularize=0.008, max-change=0.75, params-rms=0.0111, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.35,0.35,0.35,0.35 0.35,0.35,0.36,0.36,0.36 0.36,0.36,0.36,0.36), mean=0.355, stddev=0.000423], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.10,0.11,0.12 0.13,0.13,0.15,0.19,0.25 0.31,0.33,0.34,0.35), mean=0.169, stddev=0.0538], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=11142.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-5e-08,-5e-08,-4e-08,-3e-08 -2e-08,-2e-08,-1e-10,1e-08,2e-08 3e-08,4e-08,4e-08,5e-08), mean=-8.34e-10, stddev=1.77e-08], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.33,0.33,0.34,0.35 0.35,0.37,0.38,0.40,0.41 0.42,0.42,0.42,0.43), mean=0.382, stddev=0.0207]
component name=output-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=2824, learning-rate=0.00358157, l2-regularize=0.002, learning-rate-factor=5, max-change=1.5, linear-params-rms=0.03423, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.02,0.02,0.09 0.15,0.28,0.53,0.70,0.78 0.85,0.90,0.93,1.3), mean=0.498, stddev=0.229], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.6,1.6,1.6 1.7,1.7,1.8,1.9,1.9 2.0,2.0,2.0,2.1), mean=1.82, stddev=0.098], bias-{mean,stddev}=3.762e-09,0.07301, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-xent.log-softmax type=LogSoftmaxComponent, dim=2824, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,2e-07,6e-05,0.0002 0.0003,0.0004,0.0008,0.001,0.002 0.003,0.004,0.004,0.04), mean=0.00103, stddev=0.00116], oderiv-count=1.09146e+06
nnet3-show-progress --use-gpu=no telugu_exp/chain_cleaned_1d/tdnn1d_sp/26.mdl telugu_exp/chain_cleaned_1d/tdnn1d_sp/27.mdl 
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:SelectGpuId():cu-device.cc:168) Manually selected to compute on CPU.
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:8.03157 tdnnf2.linear:4.84473 tdnnf2.affine:4.7879 tdnnf3.linear:3.69278 tdnnf3.affine:4.05577 tdnnf4.linear:3.55338 tdnnf4.affine:3.94583 tdnnf5.linear:2.82325 tdnnf5.affine:3.08958 tdnnf6.linear:3.40986 tdnnf6.affine:3.76397 tdnnf7.linear:3.08113 tdnnf7.affine:3.54789 tdnnf8.linear:3.1067 tdnnf8.affine:3.47773 tdnnf9.linear:3.06376 tdnnf9.affine:3.38587 tdnnf10.linear:2.97014 tdnnf10.affine:3.32839 tdnnf11.linear:2.88921 tdnnf11.affine:3.33375 tdnnf12.linear:2.80881 tdnnf12.affine:3.47463 tdnnf13.linear:2.90212 tdnnf13.affine:3.6867 prefinal-l:4.18176 prefinal-chain.affine:3.97673 prefinal-chain.linear:3.20296 output.affine:5.04358 prefinal-xent.affine:2.18621 prefinal-xent.linear:1.40593 output-xent.affine:3.79785 ]
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:13.5059 tdnnf2.linear:9.47487 tdnnf2.affine:7.8346 tdnnf3.linear:6.99718 tdnnf3.affine:6.4663 tdnnf4.linear:6.64826 tdnnf4.affine:5.99918 tdnnf5.linear:4.46131 tdnnf5.affine:4.54983 tdnnf6.linear:6.60609 tdnnf6.affine:6.09597 tdnnf7.linear:6.10489 tdnnf7.affine:6.02056 tdnnf8.linear:6.23383 tdnnf8.affine:6.06118 tdnnf9.linear:6.43717 tdnnf9.affine:6.02536 tdnnf10.linear:6.39807 tdnnf10.affine:6.03683 tdnnf11.linear:6.6725 tdnnf11.affine:6.21799 tdnnf12.linear:6.37805 tdnnf12.affine:6.32851 tdnnf13.linear:5.8792 tdnnf13.affine:6.02591 prefinal-l:11.4471 prefinal-chain.affine:7.05344 prefinal-chain.linear:8.98434 output.affine:20.9956 prefinal-xent.affine:5.29288 prefinal-xent.linear:5.68298 output-xent.affine:29.3626 ]
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.586354 tdnnf2.linear:0.505292 tdnnf2.affine:0.606612 tdnnf3.linear:0.523121 tdnnf3.affine:0.621715 tdnnf4.linear:0.529807 tdnnf4.affine:0.653462 tdnnf5.linear:0.629619 tdnnf5.affine:0.676652 tdnnf6.linear:0.51199 tdnnf6.affine:0.616405 tdnnf7.linear:0.504067 tdnnf7.affine:0.588386 tdnnf8.linear:0.499355 tdnnf8.affine:0.572111 tdnnf9.linear:0.474751 tdnnf9.affine:0.560467 tdnnf10.linear:0.463511 tdnnf10.affine:0.548502 tdnnf11.linear:0.431794 tdnnf11.affine:0.532859 tdnnf12.linear:0.436678 tdnnf12.affine:0.542681 tdnnf13.linear:0.486349 tdnnf13.affine:0.599359 prefinal-l:0.360324 prefinal-chain.affine:0.55775 prefinal-chain.linear:0.353161 output.affine:0.23771 prefinal-xent.affine:0.405829 prefinal-xent.linear:0.248117 output-xent.affine:0.129332 ]
# Accounting: time=0 threads=1
# Ended (code 0) at Tue Jul 19 21:41:07 EDT 2022, elapsed time 0 seconds
