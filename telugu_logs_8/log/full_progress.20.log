# nnet3-show-progress --use-gpu=no --verbose=2 telugu_exp/chain_cleaned_1d/tdnn1d_sp/19.mdl telugu_exp/chain_cleaned_1d/tdnn1d_sp/20.mdl 
# Started at Tue Jul 19 21:04:01 EDT 2022
#
nnet3-show-progress --use-gpu=no --verbose=2 telugu_exp/chain_cleaned_1d/tdnn1d_sp/19.mdl telugu_exp/chain_cleaned_1d/tdnn1d_sp/20.mdl 
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:SelectGpuId():cu-device.cc:168) Manually selected to compute on CPU.
VLOG[1] (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:136) Printing info for the difference between the neural nets: left-context: 28
right-context: 28
num-parameters: 9032208
modulus: 1
input-node name=ivector dim=100
input-node name=input dim=40
component-node name=lda component=lda input=Append(Offset(input, -1), input, Offset(input, 1), ReplaceIndex(ivector, t, 0)) input-dim=220 output-dim=220
component-node name=tdnn1.affine component=tdnn1.affine input=lda input-dim=220 output-dim=1024
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=1024 output-dim=1024
component-node name=tdnn1.batchnorm component=tdnn1.batchnorm input=tdnn1.relu input-dim=1024 output-dim=1024
component-node name=tdnn1.dropout component=tdnn1.dropout input=tdnn1.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.linear component=tdnnf2.linear input=tdnn1.dropout input-dim=1024 output-dim=128
component-node name=tdnnf2.affine component=tdnnf2.affine input=tdnnf2.linear input-dim=128 output-dim=1024
component-node name=tdnnf2.relu component=tdnnf2.relu input=tdnnf2.affine input-dim=1024 output-dim=1024
component-node name=tdnnf2.batchnorm component=tdnnf2.batchnorm input=tdnnf2.relu input-dim=1024 output-dim=1024
component-node name=tdnnf2.dropout component=tdnnf2.dropout input=tdnnf2.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.noop component=tdnnf2.noop input=Sum(Scale(0.66, tdnn1.dropout), tdnnf2.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf3.linear component=tdnnf3.linear input=tdnnf2.noop input-dim=1024 output-dim=128
component-node name=tdnnf3.affine component=tdnnf3.affine input=tdnnf3.linear input-dim=128 output-dim=1024
component-node name=tdnnf3.relu component=tdnnf3.relu input=tdnnf3.affine input-dim=1024 output-dim=1024
component-node name=tdnnf3.batchnorm component=tdnnf3.batchnorm input=tdnnf3.relu input-dim=1024 output-dim=1024
component-node name=tdnnf3.dropout component=tdnnf3.dropout input=tdnnf3.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf3.noop component=tdnnf3.noop input=Sum(Scale(0.66, tdnnf2.noop), tdnnf3.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf4.linear component=tdnnf4.linear input=tdnnf3.noop input-dim=1024 output-dim=128
component-node name=tdnnf4.affine component=tdnnf4.affine input=tdnnf4.linear input-dim=128 output-dim=1024
component-node name=tdnnf4.relu component=tdnnf4.relu input=tdnnf4.affine input-dim=1024 output-dim=1024
component-node name=tdnnf4.batchnorm component=tdnnf4.batchnorm input=tdnnf4.relu input-dim=1024 output-dim=1024
component-node name=tdnnf4.dropout component=tdnnf4.dropout input=tdnnf4.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf4.noop component=tdnnf4.noop input=Sum(Scale(0.66, tdnnf3.noop), tdnnf4.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf5.linear component=tdnnf5.linear input=tdnnf4.noop input-dim=1024 output-dim=128
component-node name=tdnnf5.affine component=tdnnf5.affine input=tdnnf5.linear input-dim=128 output-dim=1024
component-node name=tdnnf5.relu component=tdnnf5.relu input=tdnnf5.affine input-dim=1024 output-dim=1024
component-node name=tdnnf5.batchnorm component=tdnnf5.batchnorm input=tdnnf5.relu input-dim=1024 output-dim=1024
component-node name=tdnnf5.dropout component=tdnnf5.dropout input=tdnnf5.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf5.noop component=tdnnf5.noop input=Sum(Scale(0.66, tdnnf4.noop), tdnnf5.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf6.linear component=tdnnf6.linear input=tdnnf5.noop input-dim=1024 output-dim=128
component-node name=tdnnf6.affine component=tdnnf6.affine input=tdnnf6.linear input-dim=128 output-dim=1024
component-node name=tdnnf6.relu component=tdnnf6.relu input=tdnnf6.affine input-dim=1024 output-dim=1024
component-node name=tdnnf6.batchnorm component=tdnnf6.batchnorm input=tdnnf6.relu input-dim=1024 output-dim=1024
component-node name=tdnnf6.dropout component=tdnnf6.dropout input=tdnnf6.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf6.noop component=tdnnf6.noop input=Sum(Scale(0.66, tdnnf5.noop), tdnnf6.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf7.linear component=tdnnf7.linear input=tdnnf6.noop input-dim=1024 output-dim=128
component-node name=tdnnf7.affine component=tdnnf7.affine input=tdnnf7.linear input-dim=128 output-dim=1024
component-node name=tdnnf7.relu component=tdnnf7.relu input=tdnnf7.affine input-dim=1024 output-dim=1024
component-node name=tdnnf7.batchnorm component=tdnnf7.batchnorm input=tdnnf7.relu input-dim=1024 output-dim=1024
component-node name=tdnnf7.dropout component=tdnnf7.dropout input=tdnnf7.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf7.noop component=tdnnf7.noop input=Sum(Scale(0.66, tdnnf6.noop), tdnnf7.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf8.linear component=tdnnf8.linear input=tdnnf7.noop input-dim=1024 output-dim=128
component-node name=tdnnf8.affine component=tdnnf8.affine input=tdnnf8.linear input-dim=128 output-dim=1024
component-node name=tdnnf8.relu component=tdnnf8.relu input=tdnnf8.affine input-dim=1024 output-dim=1024
component-node name=tdnnf8.batchnorm component=tdnnf8.batchnorm input=tdnnf8.relu input-dim=1024 output-dim=1024
component-node name=tdnnf8.dropout component=tdnnf8.dropout input=tdnnf8.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf8.noop component=tdnnf8.noop input=Sum(Scale(0.66, tdnnf7.noop), tdnnf8.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf9.linear component=tdnnf9.linear input=tdnnf8.noop input-dim=1024 output-dim=128
component-node name=tdnnf9.affine component=tdnnf9.affine input=tdnnf9.linear input-dim=128 output-dim=1024
component-node name=tdnnf9.relu component=tdnnf9.relu input=tdnnf9.affine input-dim=1024 output-dim=1024
component-node name=tdnnf9.batchnorm component=tdnnf9.batchnorm input=tdnnf9.relu input-dim=1024 output-dim=1024
component-node name=tdnnf9.dropout component=tdnnf9.dropout input=tdnnf9.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf9.noop component=tdnnf9.noop input=Sum(Scale(0.66, tdnnf8.noop), tdnnf9.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf10.linear component=tdnnf10.linear input=tdnnf9.noop input-dim=1024 output-dim=128
component-node name=tdnnf10.affine component=tdnnf10.affine input=tdnnf10.linear input-dim=128 output-dim=1024
component-node name=tdnnf10.relu component=tdnnf10.relu input=tdnnf10.affine input-dim=1024 output-dim=1024
component-node name=tdnnf10.batchnorm component=tdnnf10.batchnorm input=tdnnf10.relu input-dim=1024 output-dim=1024
component-node name=tdnnf10.dropout component=tdnnf10.dropout input=tdnnf10.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf10.noop component=tdnnf10.noop input=Sum(Scale(0.66, tdnnf9.noop), tdnnf10.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf11.linear component=tdnnf11.linear input=tdnnf10.noop input-dim=1024 output-dim=128
component-node name=tdnnf11.affine component=tdnnf11.affine input=tdnnf11.linear input-dim=128 output-dim=1024
component-node name=tdnnf11.relu component=tdnnf11.relu input=tdnnf11.affine input-dim=1024 output-dim=1024
component-node name=tdnnf11.batchnorm component=tdnnf11.batchnorm input=tdnnf11.relu input-dim=1024 output-dim=1024
component-node name=tdnnf11.dropout component=tdnnf11.dropout input=tdnnf11.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf11.noop component=tdnnf11.noop input=Sum(Scale(0.66, tdnnf10.noop), tdnnf11.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf12.linear component=tdnnf12.linear input=tdnnf11.noop input-dim=1024 output-dim=128
component-node name=tdnnf12.affine component=tdnnf12.affine input=tdnnf12.linear input-dim=128 output-dim=1024
component-node name=tdnnf12.relu component=tdnnf12.relu input=tdnnf12.affine input-dim=1024 output-dim=1024
component-node name=tdnnf12.batchnorm component=tdnnf12.batchnorm input=tdnnf12.relu input-dim=1024 output-dim=1024
component-node name=tdnnf12.dropout component=tdnnf12.dropout input=tdnnf12.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf12.noop component=tdnnf12.noop input=Sum(Scale(0.66, tdnnf11.noop), tdnnf12.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf13.linear component=tdnnf13.linear input=tdnnf12.noop input-dim=1024 output-dim=128
component-node name=tdnnf13.affine component=tdnnf13.affine input=tdnnf13.linear input-dim=128 output-dim=1024
component-node name=tdnnf13.relu component=tdnnf13.relu input=tdnnf13.affine input-dim=1024 output-dim=1024
component-node name=tdnnf13.batchnorm component=tdnnf13.batchnorm input=tdnnf13.relu input-dim=1024 output-dim=1024
component-node name=tdnnf13.dropout component=tdnnf13.dropout input=tdnnf13.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf13.noop component=tdnnf13.noop input=Sum(Scale(0.66, tdnnf12.noop), tdnnf13.dropout) input-dim=1024 output-dim=1024
component-node name=prefinal-l component=prefinal-l input=tdnnf13.noop input-dim=1024 output-dim=256
component-node name=prefinal-chain.affine component=prefinal-chain.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-chain.relu component=prefinal-chain.relu input=prefinal-chain.affine input-dim=1024 output-dim=1024
component-node name=prefinal-chain.batchnorm1 component=prefinal-chain.batchnorm1 input=prefinal-chain.relu input-dim=1024 output-dim=1024
component-node name=prefinal-chain.linear component=prefinal-chain.linear input=prefinal-chain.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-chain.batchnorm2 component=prefinal-chain.batchnorm2 input=prefinal-chain.linear input-dim=256 output-dim=256
component-node name=output.affine component=output.affine input=prefinal-chain.batchnorm2 input-dim=256 output-dim=2824
output-node name=output input=output.affine dim=2824 objective=linear
component-node name=prefinal-xent.affine component=prefinal-xent.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-xent.relu component=prefinal-xent.relu input=prefinal-xent.affine input-dim=1024 output-dim=1024
component-node name=prefinal-xent.batchnorm1 component=prefinal-xent.batchnorm1 input=prefinal-xent.relu input-dim=1024 output-dim=1024
component-node name=prefinal-xent.linear component=prefinal-xent.linear input=prefinal-xent.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-xent.batchnorm2 component=prefinal-xent.batchnorm2 input=prefinal-xent.linear input-dim=256 output-dim=256
component-node name=output-xent.affine component=output-xent.affine input=prefinal-xent.batchnorm2 input-dim=256 output-dim=2824
component-node name=output-xent.log-softmax component=output-xent.log-softmax input=output-xent.affine input-dim=2824 output-dim=2824
output-node name=output-xent input=output-xent.log-softmax dim=2824 objective=linear
component name=lda type=FixedAffineComponent, input-dim=220, output-dim=220, linear-params-rms=0.00576, bias-{mean,stddev}=-0.0009624,0.01288
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=220, output-dim=1024, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.01884, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.07,0.08,0.10 0.14,0.19,0.26,0.33,0.39 0.43,0.47,0.51,0.64), mean=0.263, stddev=0.0939], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.33,0.38,0.38,0.40 0.42,0.45,0.56,0.67,0.79 0.90,0.98,0.99,1.0), mean=0.585, stddev=0.145], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.19,0.21,0.23,0.25 0.28,0.34,0.51,0.77,0.90 1.0,1.1,1.1,1.2), mean=0.555, stddev=0.234], bias-{mean,stddev}=-0.0002647,0.01331, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.05,0.24,0.34 0.42,0.54,0.64,0.96), mean=0.12, stddev=0.157], oderiv-count=116352
component name=tdnn1.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=628.38, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.6,-1.2,-1.1,-0.83 -0.60,-0.33,0.02,0.38,0.64 0.84,1.1,1.3,1.7), mean=0.0222, stddev=0.498], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0,0.004 0.08,0.13,0.17,0.23), mean=0.00881, stddev=0.0316]
component name=tdnn1.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.037037, continuous=true
component name=tdnnf2.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.009887, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.39,0.39,0.40,0.41 0.41,0.43,0.45,0.47,0.47 0.48,0.49,0.50,0.52), mean=0.447, stddev=0.0225], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.03,0.03,0.04 0.06,0.08,0.11,0.13,0.15 0.16,0.18,0.18,0.22), mean=0.107, stddev=0.0341], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.13,0.13,0.15 0.17,0.21,0.40,0.59,0.66 0.70,0.74,0.75,0.78), mean=0.408, stddev=0.184], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.01002, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.12,0.12,0.13 0.13,0.14,0.16,0.18,0.19 0.20,0.21,0.21,0.23), mean=0.159, stddev=0.0215], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.29,0.29,0.29 0.30,0.31,0.32,0.33,0.34 0.35,0.35,0.35,0.36), mean=0.32, stddev=0.0147], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.05,0.06,0.06 0.07,0.10,0.21,0.44,0.54 0.61,0.67,0.70,0.72), mean=0.267, stddev=0.178], bias-{mean,stddev}=0.0005551,0.0142, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=2.83e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.14,-0.07,-0.05,-0.01 0.02,0.05,0.13,0.20,0.24 0.26,0.31,0.33,0.39), mean=0.126, stddev=0.0859], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.53,-0.14,-0.03,0.08 0.15,0.26,0.47,0.65,0.74 0.82,0.96,1.0,1.6), mean=0.459, stddev=0.244], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.04,0.06 0.07,0.10,0.10,0.13), mean=0.0185, stddev=0.0266], oderiv-count=22400
component name=tdnnf2.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=628.38, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-2.9,-2.0,-1.7,-1.3 -1.0,-0.60,0.08,0.78,1.2 1.5,1.8,2.2,3.9), mean=0.0966, stddev=0.878], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.23,0.51 0.64,0.77,0.86,1.2), mean=0.111, stddev=0.226]
component name=tdnnf2.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.037037, continuous=true
component name=tdnnf2.noop type=NoOpComponent, dim=1024
component name=tdnnf3.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.007497, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.29,0.30,0.30,0.31 0.32,0.33,0.34,0.35,0.36 0.37,0.37,0.37,0.38), mean=0.339, stddev=0.0166], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.06,0.06,0.07 0.07,0.08,0.08,0.09,0.10 0.10,0.11,0.11,0.13), mean=0.0841, stddev=0.0109], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.11,0.11,0.12 0.14,0.17,0.31,0.44,0.50 0.53,0.56,0.57,0.60), mean=0.312, stddev=0.134], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.008442, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.10,0.11,0.11 0.12,0.12,0.13,0.15,0.15 0.16,0.17,0.18,0.19), mean=0.134, stddev=0.0153], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.24,0.24,0.24,0.25 0.26,0.26,0.27,0.28,0.29 0.29,0.29,0.30,0.30), mean=0.27, stddev=0.0121], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.06,0.06,0.07 0.08,0.10,0.19,0.37,0.45 0.51,0.55,0.56,0.60), mean=0.23, stddev=0.141], bias-{mean,stddev}=0.0006174,0.009503, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=2.28e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.22,-0.08,-0.05,0.007 0.04,0.08,0.16,0.24,0.27 0.31,0.34,0.37,0.49), mean=0.161, stddev=0.0961], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.41,-0.07,-0.005,0.10 0.18,0.29,0.48,0.68,0.76 0.85,0.94,1.0,1.3), mean=0.476, stddev=0.233]
component name=tdnnf3.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=628.38, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-3.3,-1.8,-1.7,-1.3 -0.98,-0.53,0.21,0.90,1.3 1.6,2.0,2.2,3.3), mean=0.191, stddev=0.895], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.49,0.70 0.84,0.98,1.0,1.5), mean=0.185, stddev=0.307]
component name=tdnnf3.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.037037, continuous=true
component name=tdnnf3.noop type=NoOpComponent, dim=1024
component name=tdnnf4.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.00722, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.28,0.29,0.30 0.31,0.31,0.33,0.34,0.35 0.35,0.37,0.37,0.37), mean=0.326, stddev=0.0172], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.06,0.06,0.07 0.07,0.07,0.08,0.09,0.09 0.10,0.10,0.11,0.12), mean=0.0811, stddev=0.00936], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.11,0.11,0.12 0.13,0.16,0.29,0.43,0.48 0.51,0.52,0.54,0.55), mean=0.299, stddev=0.132], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.0082, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.10,0.10,0.11 0.11,0.12,0.13,0.14,0.15 0.16,0.16,0.17,0.20), mean=0.13, stddev=0.0151], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.23,0.23,0.23,0.24 0.25,0.25,0.26,0.27,0.28 0.29,0.29,0.30,0.31), mean=0.262, stddev=0.0141], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.07,0.07,0.08 0.09,0.11,0.18,0.35,0.43 0.49,0.54,0.56,0.60), mean=0.226, stddev=0.134], bias-{mean,stddev}=0.0001597,0.008369, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=1.47e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.5,-0.97,-0.84,-0.59 -0.39,-0.21,0.21,0.63,0.85 1.1,1.3,1.5,1.8), mean=0.219, stddev=0.507], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-3.2,-2.7,-2.3,-1.6 -1.0,-0.46,0.50,1.4,2.1 2.5,3.0,3.4,4.5), mean=0.486, stddev=1.22]
component name=tdnnf4.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=209.46, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-2.5,-1.8,-1.6,-1.3 -1.0,-0.61,0.15,0.80,1.2 1.5,2.0,2.3,3.0), mean=0.115, stddev=0.857], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.53,0.73 0.87,1.0,1.1,1.4), mean=0.199, stddev=0.318]
component name=tdnnf4.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.037037, continuous=true
component name=tdnnf4.noop type=NoOpComponent, dim=1024
component name=tdnnf5.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=0, linear-params-rms=0.008, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.22,0.23,0.23,0.24 0.24,0.25,0.25,0.27,0.27 0.27,0.28,0.28,0.29), mean=0.256, stddev=0.0119], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.07,0.07,0.07 0.08,0.08,0.09,0.10,0.10 0.11,0.11,0.11,0.13), mean=0.09, stddev=0.0092], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.10,0.10,0.11 0.12,0.14,0.22,0.33,0.38 0.40,0.42,0.43,0.45), mean=0.238, stddev=0.0949], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, time-offsets=0, linear-params-rms=0.00893, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.07,0.08,0.08 0.08,0.09,0.10,0.11,0.12 0.12,0.13,0.13,0.16), mean=0.1, stddev=0.0129], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.26,0.26,0.26,0.26 0.27,0.27,0.29,0.30,0.30 0.31,0.31,0.32,0.32), mean=0.285, stddev=0.0131], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.13,0.13,0.14 0.15,0.17,0.24,0.36,0.43 0.46,0.48,0.49,0.52), mean=0.267, stddev=0.103], bias-{mean,stddev}=-0.0001686,0.01121, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=1.17e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.08,-0.03,-0.02,-0.0009 0.02,0.04,0.09,0.14,0.16 0.18,0.20,0.22,0.26), mean=0.092, stddev=0.0558], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.30,-0.12,-0.05,0.07 0.16,0.26,0.45,0.65,0.75 0.84,0.94,1.0,1.3), mean=0.451, stddev=0.235], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.01,0.03,0.04 0.04,0.05,0.05,0.07), mean=0.0154, stddev=0.015], oderiv-count=86784
component name=tdnnf5.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=209.46, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-2.1,-1.5,-1.2,-0.98 -0.71,-0.43,0.14,0.68,1.0 1.2,1.5,1.7,2.4), mean=0.127, stddev=0.672], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.26,0.43 0.53,0.63,0.69,0.85), mean=0.104, stddev=0.189]
component name=tdnnf5.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.037037, continuous=true
component name=tdnnf5.noop type=NoOpComponent, dim=1024
component name=tdnnf6.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.006665, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.27,0.27,0.27,0.28 0.28,0.29,0.30,0.31,0.32 0.32,0.33,0.33,0.33), mean=0.301, stddev=0.0139], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.06,0.06,0.06 0.07,0.07,0.07,0.08,0.08 0.09,0.09,0.10,0.11), mean=0.075, stddev=0.00786], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.09,0.10,0.11 0.11,0.14,0.28,0.40,0.44 0.46,0.48,0.49,0.50), mean=0.277, stddev=0.121], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.007643, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.09,0.09,0.10 0.10,0.11,0.12,0.13,0.14 0.15,0.15,0.16,0.17), mean=0.121, stddev=0.0147], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.21,0.21,0.22,0.23 0.23,0.23,0.24,0.25,0.26 0.26,0.27,0.27,0.28), mean=0.244, stddev=0.0123], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.06,0.07,0.07 0.08,0.10,0.17,0.33,0.40 0.45,0.49,0.51,0.52), mean=0.212, stddev=0.121], bias-{mean,stddev}=0.0003072,0.006679, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.59e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.09,-0.02,-0.008,0.01 0.04,0.07,0.13,0.18,0.21 0.24,0.27,0.30,0.42), mean=0.129, stddev=0.0689], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.29,-0.04,0.003,0.10 0.17,0.27,0.43,0.59,0.69 0.77,0.85,0.93,1.2), mean=0.432, stddev=0.206], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.03,0.03 0.04,0.04,0.05,0.06), mean=0.0111, stddev=0.0137], oderiv-count=17664
component name=tdnnf6.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=209.46, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-2.1,-1.5,-1.3,-1.1 -0.76,-0.50,0.11,0.71,1.0 1.3,1.5,1.8,2.7), mean=0.114, stddev=0.721], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.51,0.69 0.83,0.99,1.0,1.5), mean=0.202, stddev=0.305]
component name=tdnnf6.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.037037, continuous=true
component name=tdnnf6.noop type=NoOpComponent, dim=1024
component name=tdnnf7.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.006051, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.24,0.24,0.25,0.25 0.26,0.26,0.27,0.28,0.29 0.29,0.30,0.30,0.31), mean=0.274, stddev=0.0121], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.05,0.05,0.06 0.06,0.06,0.07,0.07,0.08 0.08,0.08,0.09,0.09), mean=0.0681, stddev=0.00723], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.09,0.09,0.10 0.11,0.14,0.27,0.35,0.39 0.40,0.42,0.43,0.44), mean=0.254, stddev=0.101], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.007215, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.09,0.09,0.09 0.10,0.10,0.11,0.12,0.13 0.14,0.14,0.15,0.16), mean=0.115, stddev=0.0131], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.20,0.20,0.21,0.21 0.22,0.22,0.23,0.24,0.25 0.25,0.25,0.25,0.26), mean=0.231, stddev=0.0115], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.07,0.07,0.07 0.08,0.10,0.17,0.31,0.37 0.42,0.45,0.46,0.49), mean=0.203, stddev=0.11], bias-{mean,stddev}=0.0003894,0.006592, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=5.36e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.26,-0.12,-0.09,-0.05 0.008,0.05,0.15,0.25,0.29 0.33,0.37,0.40,0.55), mean=0.149, stddev=0.113], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.84,-0.47,-0.27,-0.10 0.04,0.18,0.46,0.71,0.86 0.97,1.1,1.2,1.7), mean=0.447, stddev=0.338], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.008,0.02,0.02 0.02,0.03,0.03,0.04), mean=0.00863, stddev=0.00893], oderiv-count=47616
component name=tdnnf7.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=209.46, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-2.4,-1.5,-1.3,-0.94 -0.72,-0.50,0.15,0.68,0.99 1.2,1.5,1.8,2.5), mean=0.121, stddev=0.682], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.52,0.70 0.85,0.96,1.1,1.3), mean=0.208, stddev=0.311]
component name=tdnnf7.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.037037, continuous=true
component name=tdnnf7.noop type=NoOpComponent, dim=1024
component name=tdnnf8.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.006079, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.25,0.26,0.26,0.26 0.26,0.27,0.27,0.28,0.29 0.29,0.30,0.30,0.30), mean=0.275, stddev=0.00969], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.05,0.05,0.06 0.06,0.06,0.07,0.07,0.08 0.08,0.08,0.09,0.10), mean=0.0684, stddev=0.00749], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.10,0.10,0.11 0.12,0.16,0.27,0.35,0.38 0.40,0.42,0.42,0.43), mean=0.259, stddev=0.0939], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.007107, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.08,0.09,0.09 0.10,0.10,0.11,0.12,0.13 0.14,0.14,0.15,0.17), mean=0.113, stddev=0.0138], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.20,0.20,0.21,0.21 0.22,0.22,0.23,0.23,0.24 0.24,0.24,0.25,0.25), mean=0.227, stddev=0.00855], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.07,0.07,0.08 0.09,0.10,0.17,0.30,0.36 0.40,0.43,0.45,0.48), mean=0.202, stddev=0.104], bias-{mean,stddev}=0.0001691,0.006765, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=3.64e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.41,-0.25,-0.20,-0.12 -0.06,0.01,0.14,0.26,0.33 0.40,0.47,0.52,0.77), mean=0.136, stddev=0.158], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.4,-0.66,-0.54,-0.32 -0.14,0.09,0.46,0.83,1.0 1.2,1.4,1.5,2.2), mean=0.454, stddev=0.468], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.007,0.01,0.02 0.02,0.02,0.03,0.03), mean=0.00754, stddev=0.00773], oderiv-count=71808
component name=tdnnf8.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=209.46, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.9,-1.3,-1.1,-0.89 -0.63,-0.31,0.19,0.72,0.98 1.2,1.4,1.8,2.3), mean=0.191, stddev=0.63], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.52,0.69 0.81,0.93,0.98,1.2), mean=0.211, stddev=0.299]
component name=tdnnf8.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.037037, continuous=true
component name=tdnnf8.noop type=NoOpComponent, dim=1024
component name=tdnnf9.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.00606, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.24,0.25,0.25,0.26 0.26,0.27,0.27,0.28,0.29 0.29,0.29,0.29,0.30), mean=0.274, stddev=0.0106], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.05,0.05,0.06 0.06,0.06,0.07,0.07,0.08 0.08,0.08,0.09,0.09), mean=0.0681, stddev=0.00785], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.10,0.10,0.11 0.13,0.16,0.26,0.34,0.38 0.39,0.41,0.42,0.44), mean=0.258, stddev=0.0924], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.006905, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.07,0.08,0.09 0.09,0.10,0.11,0.12,0.13 0.13,0.14,0.14,0.15), mean=0.11, stddev=0.0143], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.19,0.20,0.20,0.20 0.21,0.21,0.22,0.23,0.23 0.24,0.24,0.24,0.25), mean=0.221, stddev=0.0101], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.07,0.07,0.07 0.08,0.10,0.17,0.29,0.35 0.39,0.42,0.44,0.46), mean=0.196, stddev=0.101], bias-{mean,stddev}=0.0002373,0.006366, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=3.05e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.61,-0.31,-0.25,-0.17 -0.11,-0.03,0.11,0.27,0.34 0.40,0.48,0.54,0.77), mean=0.116, stddev=0.181], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.3,-0.75,-0.59,-0.35 -0.17,0.08,0.44,0.81,1.0 1.2,1.5,1.6,1.9), mean=0.44, stddev=0.479], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.007,0.02,0.03 0.03,0.04,0.04,0.06), mean=0.0106, stddev=0.012], oderiv-count=22080
component name=tdnnf9.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=209.46, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.8,-1.4,-1.2,-0.96 -0.73,-0.42,0.08,0.56,0.79 0.99,1.3,1.5,2.1), mean=0.0637, stddev=0.598], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.50,0.63 0.77,0.91,1.0,1.4), mean=0.193, stddev=0.285]
component name=tdnnf9.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.037037, continuous=true
component name=tdnnf9.noop type=NoOpComponent, dim=1024
component name=tdnnf10.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.005852, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.23,0.24,0.24,0.25 0.25,0.26,0.26,0.27,0.28 0.28,0.28,0.29,0.29), mean=0.265, stddev=0.00986], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.04,0.05,0.05 0.05,0.06,0.07,0.07,0.08 0.08,0.08,0.08,0.09), mean=0.0657, stddev=0.00847], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.10,0.10,0.11 0.12,0.16,0.25,0.33,0.36 0.38,0.40,0.40,0.41), mean=0.25, stddev=0.0866], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.006767, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.06,0.07,0.08 0.08,0.09,0.11,0.12,0.13 0.13,0.14,0.14,0.15), mean=0.107, stddev=0.0169], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.19,0.19,0.20,0.20 0.20,0.21,0.22,0.22,0.23 0.23,0.23,0.24,0.25), mean=0.216, stddev=0.00914], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.06,0.07,0.07 0.08,0.10,0.17,0.29,0.34 0.38,0.41,0.42,0.45), mean=0.192, stddev=0.1], bias-{mean,stddev}=0.0004881,0.005868, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=6.94e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.11,-0.05,-0.02,0.009 0.03,0.07,0.14,0.21,0.25 0.28,0.31,0.33,0.51), mean=0.14, stddev=0.0819], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.36,-0.07,-0.02,0.10 0.18,0.27,0.46,0.63,0.73 0.83,0.90,0.95,1.2), mean=0.453, stddev=0.218]
component name=tdnnf10.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=209.46, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-2.0,-1.3,-1.1,-0.86 -0.67,-0.39,0.08,0.58,0.83 0.98,1.2,1.3,2.2), mean=0.0729, stddev=0.571], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.54,0.70 0.83,0.93,0.97,1.4), mean=0.22, stddev=0.304]
component name=tdnnf10.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.037037, continuous=true
component name=tdnnf10.noop type=NoOpComponent, dim=1024
component name=tdnnf11.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.005684, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.23,0.23,0.23,0.24 0.24,0.25,0.26,0.27,0.27 0.27,0.28,0.28,0.28), mean=0.257, stddev=0.0109], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.04,0.04,0.05 0.05,0.06,0.06,0.07,0.08 0.08,0.08,0.08,0.09), mean=0.0636, stddev=0.00924], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.09,0.09,0.11 0.12,0.15,0.25,0.32,0.36 0.37,0.39,0.39,0.40), mean=0.242, stddev=0.0863], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.006872, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.05,0.06,0.07 0.08,0.09,0.11,0.12,0.13 0.13,0.14,0.15,0.42), mean=0.108, stddev=0.0216], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.19,0.19,0.20,0.20 0.20,0.21,0.22,0.23,0.23 0.24,0.24,0.24,0.51), mean=0.219, stddev=0.021], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.06,0.06,0.07 0.08,0.09,0.16,0.29,0.35 0.41,0.43,0.45,0.53), mean=0.192, stddev=0.107], bias-{mean,stddev}=0.0003103,0.00578, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05
component name=tdnnf11.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=209.46, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-5.2,-1.6,-1.3,-1.0 -0.75,-0.49,0.03,0.53,0.76 0.99,1.3,1.4,1.9), mean=0.019, stddev=0.638], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.61,0.80 0.98,1.1,1.2,1.4), mean=0.266, stddev=0.352]
component name=tdnnf11.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.037037, continuous=true
component name=tdnnf11.noop type=NoOpComponent, dim=1024
component name=tdnnf12.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.005613, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.23,0.24,0.24,0.24 0.24,0.25,0.25,0.26,0.26 0.27,0.27,0.27,0.28), mean=0.254, stddev=0.00885], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.03,0.04,0.04 0.05,0.05,0.06,0.07,0.08 0.08,0.08,0.08,0.09), mean=0.0625, stddev=0.0111], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.09,0.10,0.11 0.12,0.16,0.25,0.32,0.34 0.36,0.38,0.38,0.39), mean=0.241, stddev=0.0799], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.00715, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.06,0.06,0.08 0.08,0.09,0.11,0.13,0.14 0.15,0.15,0.16,0.17), mean=0.112, stddev=0.022], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.20,0.21,0.21,0.21 0.22,0.22,0.23,0.24,0.24 0.24,0.25,0.25,0.26), mean=0.229, stddev=0.00938], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.06,0.06,0.07 0.08,0.10,0.17,0.31,0.37 0.41,0.44,0.45,0.49), mean=0.2, stddev=0.111], bias-{mean,stddev}=0.0004036,0.005811, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=2.44e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.70,-0.47,-0.37,-0.23 -0.13,0.003,0.21,0.45,0.56 0.65,0.72,0.77,1.3), mean=0.215, stddev=0.267], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.4,-0.97,-0.73,-0.46 -0.20,0.06,0.50,0.96,1.2 1.4,1.7,1.8,2.4), mean=0.503, stddev=0.57], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.05,0.07 0.08,0.09,0.11,0.13), mean=0.0187, stddev=0.0293], oderiv-count=2944
component name=tdnnf12.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=209.46, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-2.5,-1.5,-1.3,-1.0 -0.76,-0.42,0.12,0.63,0.87 1.1,1.3,1.5,2.0), mean=0.0941, stddev=0.638], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.71,0.96 1.1,1.3,1.3,1.8), mean=0.31, stddev=0.405]
component name=tdnnf12.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.037037, continuous=true
component name=tdnnf12.noop type=NoOpComponent, dim=1024
component name=tdnnf13.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.005762, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.24,0.24,0.24,0.25 0.25,0.25,0.26,0.27,0.27 0.28,0.28,0.28,0.29), mean=0.261, stddev=0.00897], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.04,0.04,0.04 0.05,0.05,0.06,0.08,0.08 0.08,0.09,0.09,0.10), mean=0.064, stddev=0.0126], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.11,0.12,0.13 0.14,0.17,0.25,0.32,0.35 0.37,0.39,0.39,0.42), mean=0.249, stddev=0.0761], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.00767, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.07,0.07,0.08 0.10,0.11,0.12,0.14,0.15 0.15,0.16,0.16,0.18), mean=0.121, stddev=0.0195], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.22,0.22,0.23,0.23 0.23,0.24,0.24,0.25,0.26 0.26,0.27,0.27,0.27), mean=0.245, stddev=0.0105], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.07,0.07,0.08 0.09,0.11,0.18,0.33,0.40 0.44,0.47,0.49,0.51), mean=0.217, stddev=0.115], bias-{mean,stddev}=0.0004156,0.007562, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05
component name=tdnnf13.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=209.46, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-2.3,-1.3,-1.0,-0.80 -0.61,-0.38,0.07,0.62,0.90 1.2,1.5,1.7,2.3), mean=0.114, stddev=0.607], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.12,0.91,1.1 1.3,1.5,1.6,1.9), mean=0.416, stddev=0.482]
component name=tdnnf13.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.037037, continuous=true
component name=tdnnf13.noop type=NoOpComponent, dim=1024
component name=prefinal-l type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, params-rms=0.008432, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.24,0.25,0.25,0.25 0.26,0.26,0.27,0.28,0.28 0.29,0.29,0.30,0.32), mean=0.27, stddev=0.0113], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.09,0.09,0.10 0.11,0.12,0.13,0.15,0.16 0.17,0.17,0.18,0.20), mean=0.133, stddev=0.0196], params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.07,0.07,0.08 0.09,0.12,0.22,0.36,0.42 0.46,0.49,0.50,0.55), mean=0.24, stddev=0.123], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.008565, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.05,0.06,0.07 0.08,0.10,0.13,0.17,0.18 0.19,0.20,0.20,0.25), mean=0.132, stddev=0.0368], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.24,0.25,0.25,0.26 0.26,0.26,0.27,0.28,0.29 0.29,0.30,0.30,0.33), mean=0.274, stddev=0.0119], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.08,0.09,0.09 0.10,0.13,0.21,0.37,0.43 0.48,0.51,0.54,0.56), mean=0.244, stddev=0.125], bias-{mean,stddev}=-0.0003361,0.007797, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.02,0.02 0.03,0.03,0.04,0.05), mean=0.00774, stddev=0.01], oderiv-count=77312
component name=prefinal-chain.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=209.46, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-2.1,-1.5,-1.3,-1.1 -0.79,-0.46,0.02,0.50,0.80 1.1,1.4,1.7,2.7), mean=0.0289, stddev=0.644], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.25,0.76,0.99 1.1,1.3,1.4,1.7), mean=0.372, stddev=0.415]
component name=prefinal-chain.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, params-rms=0.006971, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.19,0.19,0.19,0.20 0.21,0.21,0.22,0.23,0.24 0.24,0.25,0.25,0.26), mean=0.223, stddev=0.0133], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.05,0.05,0.06 0.07,0.08,0.11,0.14,0.14 0.15,0.16,0.16,0.23), mean=0.108, stddev=0.0298], params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.05,0.05,0.06 0.07,0.09,0.17,0.30,0.35 0.39,0.41,0.43,0.46), mean=0.196, stddev=0.107], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=209.46, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-6e-06,-5e-06,-4e-06,-3e-06 -2e-06,-2e-06,-7e-08,2e-06,2e-06 3e-06,4e-06,5e-06,5e-06), mean=-1.19e-08, stddev=1.98e-06], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,1.3,2.6,3.1 3.5,3.7,4.0,4.5), mean=1.38, stddev=1.27]
component name=output.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=2824, learning-rate=0.000899226, l2-regularize=0.002, max-change=1.5, linear-params-rms=0.007128, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(8e-05,0.005,0.01,0.03 0.04,0.06,0.10,0.14,0.17 0.19,0.21,0.22,0.63), mean=0.103, stddev=0.0494], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.31,0.32,0.32,0.33 0.34,0.36,0.38,0.40,0.41 0.42,0.43,0.43,0.46), mean=0.378, stddev=0.0268], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.10,0.10,0.11 0.12,0.15,0.26,0.52,0.63 0.70,0.75,0.79,0.90), mean=0.324, stddev=0.196], bias-{mean,stddev}=-1.125e-06,0.009598, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.00465, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.009,0.02,0.03,0.03 0.04,0.06,0.07,0.09,0.09 0.10,0.11,0.11,0.16), mean=0.0717, stddev=0.02], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.14,0.14,0.14 0.14,0.14,0.15,0.15,0.16 0.16,0.16,0.16,0.16), mean=0.149, stddev=0.0058], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.05,0.06,0.06 0.07,0.08,0.13,0.19,0.22 0.24,0.26,0.26,0.40), mean=0.137, stddev=0.0585], bias-{mean,stddev}=-7.788e-05,0.004601, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=2.29e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.40,-0.11,-0.09,-0.04 -0.01,0.02,0.09,0.18,0.24 0.29,0.37,0.43,0.68), mean=0.105, stddev=0.108], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.4,-0.43,-0.31,-0.18 -0.04,0.08,0.36,0.73,0.87 1.0,1.3,1.5,2.7), mean=0.407, stddev=0.399], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.02,0.03 0.05,0.06,0.07,0.10), mean=0.00888, stddev=0.0168], oderiv-count=5888
component name=prefinal-xent.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=209.46, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.3,-0.68,-0.59,-0.45 -0.31,-0.18,0.02,0.26,0.42 0.55,0.69,0.85,1.3), mean=0.0381, stddev=0.305], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.20,0.26 0.32,0.37,0.42,0.83), mean=0.0835, stddev=0.121]
component name=prefinal-xent.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000899226, l2-regularize=0.008, max-change=0.75, params-rms=0.002976, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.08,0.09,0.09 0.09,0.09,0.10,0.10,0.10 0.10,0.10,0.11,0.11), mean=0.0951, stddev=0.00501], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.009,0.01,0.02,0.02 0.03,0.04,0.05,0.05,0.06 0.06,0.06,0.06,0.07), mean=0.0464, stddev=0.0109], params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.01,0.01,0.02 0.02,0.03,0.08,0.13,0.15 0.16,0.17,0.18,0.19), mean=0.0817, stddev=0.0488], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=209.46, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-3e-06,-3e-06,-3e-06,-2e-06 -2e-06,-1e-06,-3e-08,1e-06,2e-06 2e-06,3e-06,3e-06,4e-06), mean=-1.18e-08, stddev=1.35e-06], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0.15,0.70,0.98,1.1 1.2,1.3,1.3,1.4), mean=0.637, stddev=0.391]
component name=output-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=2824, learning-rate=0.00449613, l2-regularize=0.002, learning-rate-factor=5, max-change=1.5, linear-params-rms=0.005179, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.008,0.02 0.03,0.05,0.07,0.10,0.12 0.13,0.15,0.16,0.28), mean=0.0756, stddev=0.034], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.23,0.23,0.24,0.25 0.25,0.26,0.27,0.29,0.30 0.30,0.31,0.31,0.33), mean=0.275, stddev=0.0179], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.03,0.03,0.03 0.04,0.06,0.21,0.37,0.46 0.50,0.54,0.57,0.62), mean=0.225, stddev=0.158], bias-{mean,stddev}=-2.771e-10,0.006145, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-xent.log-softmax type=LogSoftmaxComponent, dim=2824, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.006,0.008 0.01,0.01,0.02,0.04), mean=0.0029, stddev=0.00423], oderiv-count=3392

LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:8.95286 tdnnf2.linear:5.06217 tdnnf2.affine:5.15167 tdnnf3.linear:3.83859 tdnnf3.affine:4.33285 tdnnf4.linear:3.69659 tdnnf4.affine:4.20718 tdnnf5.linear:2.89623 tdnnf5.affine:3.25301 tdnnf6.linear:3.41247 tdnnf6.affine:3.91884 tdnnf7.linear:3.0979 tdnnf7.affine:3.70034 tdnnf8.linear:3.11256 tdnnf8.affine:3.64544 tdnnf9.linear:3.10248 tdnnf9.affine:3.54102 tdnnf10.linear:2.99624 tdnnf10.affine:3.46987 tdnnf11.linear:2.91042 tdnnf11.affine:3.52332 tdnnf12.linear:2.87396 tdnnf12.affine:3.66557 tdnnf13.linear:2.95013 tdnnf13.affine:3.93443 prefinal-l:4.3171 prefinal-chain.affine:4.39217 prefinal-chain.linear:3.5694 output.affine:6.08239 prefinal-xent.affine:2.38555 prefinal-xent.linear:1.52354 output-xent.affine:4.41587 ]
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:14.0638 tdnnf2.linear:9.91944 tdnnf2.affine:8.00259 tdnnf3.linear:7.16349 tdnnf3.affine:6.57106 tdnnf4.linear:6.87507 tdnnf4.affine:6.0979 tdnnf5.linear:4.54804 tdnnf5.affine:4.59875 tdnnf6.linear:6.6957 tdnnf6.affine:6.08258 tdnnf7.linear:6.12347 tdnnf7.affine:6.02991 tdnnf8.linear:6.24147 tdnnf8.affine:6.06314 tdnnf9.linear:6.4485 tdnnf9.affine:6.04866 tdnnf10.linear:6.452 tdnnf10.affine:6.06194 tdnnf11.linear:6.74384 tdnnf11.affine:6.31591 tdnnf12.linear:6.67968 tdnnf12.affine:6.51336 tdnnf13.linear:6.11445 tdnnf13.affine:6.31651 prefinal-l:11.9855 prefinal-chain.affine:7.28926 prefinal-chain.linear:9.51486 output.affine:22.5024 prefinal-xent.affine:5.64694 prefinal-xent.linear:5.87039 output-xent.affine:29.1885 ]
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.637137 tdnnf2.linear:0.511193 tdnnf2.affine:0.645831 tdnnf3.linear:0.536762 tdnnf3.affine:0.661373 tdnnf4.linear:0.534927 tdnnf4.affine:0.688154 tdnnf5.linear:0.632405 tdnnf5.affine:0.705863 tdnnf6.linear:0.508011 tdnnf6.affine:0.646347 tdnnf7.linear:0.508749 tdnnf7.affine:0.614981 tdnnf8.linear:0.498147 tdnnf8.affine:0.602467 tdnnf9.linear:0.481027 tdnnf9.affine:0.585167 tdnnf10.linear:0.464968 tdnnf10.affine:0.574104 tdnnf11.linear:0.430625 tdnnf11.affine:0.558773 tdnnf12.linear:0.429115 tdnnf12.affine:0.561384 tdnnf13.linear:0.481616 tdnnf13.affine:0.6223 prefinal-l:0.361439 prefinal-chain.affine:0.60153 prefinal-chain.linear:0.371051 output.affine:0.268108 prefinal-xent.affine:0.420303 prefinal-xent.linear:0.256403 output-xent.affine:0.151952 ]
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:PrintProfile():cu-device.cc:563) -----
[cudevice profile]
Total GPU time:	0s (may involve some double-counting)
-----
# Accounting: time=21 threads=1
# Ended (code 0) at Tue Jul 19 21:04:22 EDT 2022, elapsed time 21 seconds
