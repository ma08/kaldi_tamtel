# nnet3-show-progress --use-gpu=no --verbose=2 telugu_exp/chain_cleaned_1d/tdnn1d_sp/29.mdl telugu_exp/chain_cleaned_1d/tdnn1d_sp/30.mdl 
# Started at Tue Jul 19 21:50:05 EDT 2022
#
nnet3-show-progress --use-gpu=no --verbose=2 telugu_exp/chain_cleaned_1d/tdnn1d_sp/29.mdl telugu_exp/chain_cleaned_1d/tdnn1d_sp/30.mdl 
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:SelectGpuId():cu-device.cc:168) Manually selected to compute on CPU.
VLOG[1] (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:136) Printing info for the difference between the neural nets: left-context: 28
right-context: 28
num-parameters: 9032208
modulus: 1
input-node name=ivector dim=100
input-node name=input dim=40
component-node name=lda component=lda input=Append(Offset(input, -1), input, Offset(input, 1), ReplaceIndex(ivector, t, 0)) input-dim=220 output-dim=220
component-node name=tdnn1.affine component=tdnn1.affine input=lda input-dim=220 output-dim=1024
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=1024 output-dim=1024
component-node name=tdnn1.batchnorm component=tdnn1.batchnorm input=tdnn1.relu input-dim=1024 output-dim=1024
component-node name=tdnn1.dropout component=tdnn1.dropout input=tdnn1.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.linear component=tdnnf2.linear input=tdnn1.dropout input-dim=1024 output-dim=128
component-node name=tdnnf2.affine component=tdnnf2.affine input=tdnnf2.linear input-dim=128 output-dim=1024
component-node name=tdnnf2.relu component=tdnnf2.relu input=tdnnf2.affine input-dim=1024 output-dim=1024
component-node name=tdnnf2.batchnorm component=tdnnf2.batchnorm input=tdnnf2.relu input-dim=1024 output-dim=1024
component-node name=tdnnf2.dropout component=tdnnf2.dropout input=tdnnf2.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.noop component=tdnnf2.noop input=Sum(Scale(0.66, tdnn1.dropout), tdnnf2.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf3.linear component=tdnnf3.linear input=tdnnf2.noop input-dim=1024 output-dim=128
component-node name=tdnnf3.affine component=tdnnf3.affine input=tdnnf3.linear input-dim=128 output-dim=1024
component-node name=tdnnf3.relu component=tdnnf3.relu input=tdnnf3.affine input-dim=1024 output-dim=1024
component-node name=tdnnf3.batchnorm component=tdnnf3.batchnorm input=tdnnf3.relu input-dim=1024 output-dim=1024
component-node name=tdnnf3.dropout component=tdnnf3.dropout input=tdnnf3.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf3.noop component=tdnnf3.noop input=Sum(Scale(0.66, tdnnf2.noop), tdnnf3.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf4.linear component=tdnnf4.linear input=tdnnf3.noop input-dim=1024 output-dim=128
component-node name=tdnnf4.affine component=tdnnf4.affine input=tdnnf4.linear input-dim=128 output-dim=1024
component-node name=tdnnf4.relu component=tdnnf4.relu input=tdnnf4.affine input-dim=1024 output-dim=1024
component-node name=tdnnf4.batchnorm component=tdnnf4.batchnorm input=tdnnf4.relu input-dim=1024 output-dim=1024
component-node name=tdnnf4.dropout component=tdnnf4.dropout input=tdnnf4.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf4.noop component=tdnnf4.noop input=Sum(Scale(0.66, tdnnf3.noop), tdnnf4.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf5.linear component=tdnnf5.linear input=tdnnf4.noop input-dim=1024 output-dim=128
component-node name=tdnnf5.affine component=tdnnf5.affine input=tdnnf5.linear input-dim=128 output-dim=1024
component-node name=tdnnf5.relu component=tdnnf5.relu input=tdnnf5.affine input-dim=1024 output-dim=1024
component-node name=tdnnf5.batchnorm component=tdnnf5.batchnorm input=tdnnf5.relu input-dim=1024 output-dim=1024
component-node name=tdnnf5.dropout component=tdnnf5.dropout input=tdnnf5.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf5.noop component=tdnnf5.noop input=Sum(Scale(0.66, tdnnf4.noop), tdnnf5.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf6.linear component=tdnnf6.linear input=tdnnf5.noop input-dim=1024 output-dim=128
component-node name=tdnnf6.affine component=tdnnf6.affine input=tdnnf6.linear input-dim=128 output-dim=1024
component-node name=tdnnf6.relu component=tdnnf6.relu input=tdnnf6.affine input-dim=1024 output-dim=1024
component-node name=tdnnf6.batchnorm component=tdnnf6.batchnorm input=tdnnf6.relu input-dim=1024 output-dim=1024
component-node name=tdnnf6.dropout component=tdnnf6.dropout input=tdnnf6.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf6.noop component=tdnnf6.noop input=Sum(Scale(0.66, tdnnf5.noop), tdnnf6.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf7.linear component=tdnnf7.linear input=tdnnf6.noop input-dim=1024 output-dim=128
component-node name=tdnnf7.affine component=tdnnf7.affine input=tdnnf7.linear input-dim=128 output-dim=1024
component-node name=tdnnf7.relu component=tdnnf7.relu input=tdnnf7.affine input-dim=1024 output-dim=1024
component-node name=tdnnf7.batchnorm component=tdnnf7.batchnorm input=tdnnf7.relu input-dim=1024 output-dim=1024
component-node name=tdnnf7.dropout component=tdnnf7.dropout input=tdnnf7.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf7.noop component=tdnnf7.noop input=Sum(Scale(0.66, tdnnf6.noop), tdnnf7.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf8.linear component=tdnnf8.linear input=tdnnf7.noop input-dim=1024 output-dim=128
component-node name=tdnnf8.affine component=tdnnf8.affine input=tdnnf8.linear input-dim=128 output-dim=1024
component-node name=tdnnf8.relu component=tdnnf8.relu input=tdnnf8.affine input-dim=1024 output-dim=1024
component-node name=tdnnf8.batchnorm component=tdnnf8.batchnorm input=tdnnf8.relu input-dim=1024 output-dim=1024
component-node name=tdnnf8.dropout component=tdnnf8.dropout input=tdnnf8.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf8.noop component=tdnnf8.noop input=Sum(Scale(0.66, tdnnf7.noop), tdnnf8.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf9.linear component=tdnnf9.linear input=tdnnf8.noop input-dim=1024 output-dim=128
component-node name=tdnnf9.affine component=tdnnf9.affine input=tdnnf9.linear input-dim=128 output-dim=1024
component-node name=tdnnf9.relu component=tdnnf9.relu input=tdnnf9.affine input-dim=1024 output-dim=1024
component-node name=tdnnf9.batchnorm component=tdnnf9.batchnorm input=tdnnf9.relu input-dim=1024 output-dim=1024
component-node name=tdnnf9.dropout component=tdnnf9.dropout input=tdnnf9.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf9.noop component=tdnnf9.noop input=Sum(Scale(0.66, tdnnf8.noop), tdnnf9.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf10.linear component=tdnnf10.linear input=tdnnf9.noop input-dim=1024 output-dim=128
component-node name=tdnnf10.affine component=tdnnf10.affine input=tdnnf10.linear input-dim=128 output-dim=1024
component-node name=tdnnf10.relu component=tdnnf10.relu input=tdnnf10.affine input-dim=1024 output-dim=1024
component-node name=tdnnf10.batchnorm component=tdnnf10.batchnorm input=tdnnf10.relu input-dim=1024 output-dim=1024
component-node name=tdnnf10.dropout component=tdnnf10.dropout input=tdnnf10.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf10.noop component=tdnnf10.noop input=Sum(Scale(0.66, tdnnf9.noop), tdnnf10.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf11.linear component=tdnnf11.linear input=tdnnf10.noop input-dim=1024 output-dim=128
component-node name=tdnnf11.affine component=tdnnf11.affine input=tdnnf11.linear input-dim=128 output-dim=1024
component-node name=tdnnf11.relu component=tdnnf11.relu input=tdnnf11.affine input-dim=1024 output-dim=1024
component-node name=tdnnf11.batchnorm component=tdnnf11.batchnorm input=tdnnf11.relu input-dim=1024 output-dim=1024
component-node name=tdnnf11.dropout component=tdnnf11.dropout input=tdnnf11.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf11.noop component=tdnnf11.noop input=Sum(Scale(0.66, tdnnf10.noop), tdnnf11.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf12.linear component=tdnnf12.linear input=tdnnf11.noop input-dim=1024 output-dim=128
component-node name=tdnnf12.affine component=tdnnf12.affine input=tdnnf12.linear input-dim=128 output-dim=1024
component-node name=tdnnf12.relu component=tdnnf12.relu input=tdnnf12.affine input-dim=1024 output-dim=1024
component-node name=tdnnf12.batchnorm component=tdnnf12.batchnorm input=tdnnf12.relu input-dim=1024 output-dim=1024
component-node name=tdnnf12.dropout component=tdnnf12.dropout input=tdnnf12.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf12.noop component=tdnnf12.noop input=Sum(Scale(0.66, tdnnf11.noop), tdnnf12.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf13.linear component=tdnnf13.linear input=tdnnf12.noop input-dim=1024 output-dim=128
component-node name=tdnnf13.affine component=tdnnf13.affine input=tdnnf13.linear input-dim=128 output-dim=1024
component-node name=tdnnf13.relu component=tdnnf13.relu input=tdnnf13.affine input-dim=1024 output-dim=1024
component-node name=tdnnf13.batchnorm component=tdnnf13.batchnorm input=tdnnf13.relu input-dim=1024 output-dim=1024
component-node name=tdnnf13.dropout component=tdnnf13.dropout input=tdnnf13.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf13.noop component=tdnnf13.noop input=Sum(Scale(0.66, tdnnf12.noop), tdnnf13.dropout) input-dim=1024 output-dim=1024
component-node name=prefinal-l component=prefinal-l input=tdnnf13.noop input-dim=1024 output-dim=256
component-node name=prefinal-chain.affine component=prefinal-chain.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-chain.relu component=prefinal-chain.relu input=prefinal-chain.affine input-dim=1024 output-dim=1024
component-node name=prefinal-chain.batchnorm1 component=prefinal-chain.batchnorm1 input=prefinal-chain.relu input-dim=1024 output-dim=1024
component-node name=prefinal-chain.linear component=prefinal-chain.linear input=prefinal-chain.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-chain.batchnorm2 component=prefinal-chain.batchnorm2 input=prefinal-chain.linear input-dim=256 output-dim=256
component-node name=output.affine component=output.affine input=prefinal-chain.batchnorm2 input-dim=256 output-dim=2824
output-node name=output input=output.affine dim=2824 objective=linear
component-node name=prefinal-xent.affine component=prefinal-xent.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-xent.relu component=prefinal-xent.relu input=prefinal-xent.affine input-dim=1024 output-dim=1024
component-node name=prefinal-xent.batchnorm1 component=prefinal-xent.batchnorm1 input=prefinal-xent.relu input-dim=1024 output-dim=1024
component-node name=prefinal-xent.linear component=prefinal-xent.linear input=prefinal-xent.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-xent.batchnorm2 component=prefinal-xent.batchnorm2 input=prefinal-xent.linear input-dim=256 output-dim=256
component-node name=output-xent.affine component=output-xent.affine input=prefinal-xent.batchnorm2 input-dim=256 output-dim=2824
component-node name=output-xent.log-softmax component=output-xent.log-softmax input=output-xent.affine input-dim=2824 output-dim=2824
output-node name=output-xent input=output-xent.log-softmax dim=2824 objective=linear
component name=lda type=FixedAffineComponent, input-dim=220, output-dim=220, linear-params-rms=0.00576, bias-{mean,stddev}=-0.0009624,0.01288
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=220, output-dim=1024, learning-rate=0.000676725, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.01641, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.06,0.08,0.11 0.14,0.19,0.24,0.28,0.31 0.35,0.38,0.40,0.46), mean=0.234, stddev=0.0678], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.29,0.32,0.32,0.34 0.36,0.39,0.48,0.58,0.70 0.81,0.90,0.91,0.95), mean=0.507, stddev=0.137], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.18,0.19,0.20,0.21 0.24,0.30,0.45,0.65,0.78 0.88,0.96,0.99,1.1), mean=0.484, stddev=0.204], bias-{mean,stddev}=-0.0005113,0.01127, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.14,0.24 0.33,0.42,0.47,0.61), mean=0.0615, stddev=0.116], oderiv-count=138048
component name=tdnn1.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=-1967.83, test-mode=false
component name=tdnn1.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.242798, continuous=true
component name=tdnnf2.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000676725, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.009475, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.37,0.38,0.39,0.40 0.40,0.41,0.43,0.45,0.45 0.46,0.47,0.47,0.50), mean=0.428, stddev=0.0213], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.03,0.03,0.05 0.06,0.09,0.11,0.12,0.13 0.14,0.15,0.16,0.18), mean=0.104, stddev=0.0269], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.14,0.15,0.16 0.18,0.22,0.38,0.56,0.63 0.67,0.70,0.71,0.74), mean=0.395, stddev=0.168], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000676725, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.009191, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.11,0.11,0.12 0.12,0.13,0.14,0.16,0.17 0.18,0.19,0.19,0.22), mean=0.146, stddev=0.0177], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.25,0.26,0.27,0.27 0.28,0.28,0.29,0.30,0.31 0.31,0.32,0.32,0.34), mean=0.294, stddev=0.0127], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.05,0.05,0.06 0.07,0.09,0.20,0.40,0.49 0.55,0.60,0.62,0.65), mean=0.245, stddev=0.163], bias-{mean,stddev}=0.0001722,0.01226, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=1.07e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.52,-0.33,-0.26,-0.16 -0.10,-0.01,0.15,0.32,0.41 0.49,0.57,0.62,0.99), mean=0.152, stddev=0.201], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.3,-0.89,-0.72,-0.44 -0.23,-0.005,0.48,0.97,1.2 1.5,1.7,1.9,2.8), mean=0.494, stddev=0.592], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.04,0.08 0.11,0.14,0.16,0.23), mean=0.0184, stddev=0.0387], oderiv-count=9856
component name=tdnnf2.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=-1967.83, test-mode=false
component name=tdnnf2.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.242798, continuous=true
component name=tdnnf2.noop type=NoOpComponent, dim=1024
component name=tdnnf3.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000676725, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.007248, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.29,0.30,0.30,0.30 0.31,0.31,0.33,0.34,0.34 0.35,0.36,0.36,0.36), mean=0.328, stddev=0.0146], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.06,0.06,0.07 0.07,0.07,0.08,0.09,0.09 0.10,0.10,0.10,0.11), mean=0.0815, stddev=0.00907], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.12,0.12,0.13 0.15,0.18,0.30,0.42,0.48 0.50,0.52,0.52,0.53), mean=0.305, stddev=0.12], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000676725, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.007803, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.09,0.10,0.10 0.11,0.11,0.12,0.14,0.14 0.15,0.15,0.16,0.17), mean=0.124, stddev=0.0133], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.22,0.23,0.23,0.23 0.24,0.24,0.25,0.26,0.26 0.27,0.27,0.27,0.28), mean=0.249, stddev=0.0107], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.05,0.06,0.06 0.07,0.09,0.18,0.33,0.41 0.46,0.50,0.53,0.56), mean=0.213, stddev=0.13], bias-{mean,stddev}=6.155e-05,0.007821, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.01,0.02 0.02,0.02,0.03,0.03), mean=0.00401, stddev=0.00712], oderiv-count=96384
component name=tdnnf3.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=-1967.83, test-mode=false
component name=tdnnf3.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.242798, continuous=true
component name=tdnnf3.noop type=NoOpComponent, dim=1024
component name=tdnnf4.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000676725, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.007026, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.29,0.29,0.30 0.30,0.30,0.32,0.33,0.34 0.34,0.35,0.35,0.35), mean=0.318, stddev=0.0144], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.06,0.06,0.07 0.07,0.07,0.08,0.09,0.09 0.09,0.10,0.10,0.11), mean=0.0791, stddev=0.00792], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.12,0.12,0.13 0.14,0.17,0.28,0.42,0.46 0.49,0.51,0.51,0.54), mean=0.294, stddev=0.122], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000676725, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.007607, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.10,0.10,0.10 0.11,0.11,0.12,0.13,0.14 0.14,0.15,0.15,0.17), mean=0.121, stddev=0.0126], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.21,0.21,0.22,0.22 0.23,0.23,0.24,0.25,0.26 0.26,0.27,0.27,0.27), mean=0.243, stddev=0.0115], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.07,0.07,0.07 0.08,0.10,0.18,0.32,0.40 0.45,0.50,0.53,0.56), mean=0.21, stddev=0.122], bias-{mean,stddev}=0.0002017,0.007225, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05
component name=tdnnf4.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=-655.945, test-mode=false
component name=tdnnf4.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.242798, continuous=true
component name=tdnnf4.noop type=NoOpComponent, dim=1024
component name=tdnnf5.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000676725, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=0, linear-params-rms=0.007911, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.23,0.23,0.23,0.24 0.24,0.24,0.25,0.26,0.27 0.27,0.28,0.28,0.28), mean=0.253, stddev=0.0107], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.07,0.07,0.08 0.08,0.08,0.09,0.10,0.10 0.10,0.11,0.11,0.12), mean=0.0891, stddev=0.00797], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.11,0.11,0.12 0.13,0.15,0.22,0.32,0.37 0.39,0.41,0.42,0.44), mean=0.237, stddev=0.0878], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000676725, l2-regularize=0.008, max-change=0.75, time-offsets=0, linear-params-rms=0.008577, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.07,0.07,0.08 0.08,0.09,0.10,0.11,0.11 0.12,0.12,0.12,0.13), mean=0.0963, stddev=0.0116], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.25,0.26,0.26,0.26 0.26,0.27,0.27,0.28,0.29 0.29,0.29,0.30,0.30), mean=0.274, stddev=0.00941], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.14,0.14,0.15 0.16,0.18,0.24,0.34,0.40 0.42,0.45,0.45,0.46), mean=0.259, stddev=0.0897], bias-{mean,stddev}=0.0005422,0.009304, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.05,0.07 0.08,0.10,0.13,0.26), mean=0.0196, stddev=0.0317], oderiv-count=16768
component name=tdnnf5.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=-655.945, test-mode=false
component name=tdnnf5.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.242798, continuous=true
component name=tdnnf5.noop type=NoOpComponent, dim=1024
component name=tdnnf6.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000676725, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.006702, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.27,0.27,0.28,0.28 0.29,0.29,0.30,0.31,0.32 0.32,0.33,0.33,0.33), mean=0.303, stddev=0.0116], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.06,0.06,0.06 0.07,0.07,0.08,0.08,0.08 0.09,0.09,0.09,0.10), mean=0.0755, stddev=0.00712], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.11,0.11,0.13 0.13,0.16,0.28,0.39,0.43 0.46,0.48,0.48,0.50), mean=0.282, stddev=0.112], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000676725, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.007191, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.09,0.09,0.09 0.10,0.10,0.11,0.12,0.13 0.14,0.14,0.14,0.15), mean=0.114, stddev=0.0124], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.20,0.20,0.21,0.21 0.22,0.22,0.23,0.24,0.24 0.25,0.25,0.25,0.27), mean=0.23, stddev=0.0113], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.07,0.07,0.08 0.09,0.10,0.18,0.31,0.37 0.41,0.44,0.46,0.49), mean=0.204, stddev=0.107], bias-{mean,stddev}=0.0004426,0.00608, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.03,0.04 0.04,0.05,0.06,0.08), mean=0.0104, stddev=0.0163], oderiv-count=15936
component name=tdnnf6.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=-655.945, test-mode=false
component name=tdnnf6.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.242798, continuous=true
component name=tdnnf6.noop type=NoOpComponent, dim=1024
component name=tdnnf7.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000676725, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.006044, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.24,0.25,0.25,0.25 0.26,0.27,0.27,0.28,0.29 0.29,0.29,0.29,0.30), mean=0.273, stddev=0.0105], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.05,0.05,0.06 0.06,0.06,0.07,0.07,0.08 0.08,0.08,0.08,0.09), mean=0.0681, stddev=0.00664], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.10,0.10,0.11 0.12,0.15,0.26,0.35,0.38 0.40,0.41,0.42,0.44), mean=0.256, stddev=0.0967], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000676725, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.006847, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.08,0.08,0.09 0.09,0.10,0.11,0.12,0.12 0.13,0.14,0.14,0.15), mean=0.109, stddev=0.0123], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.19,0.20,0.20,0.20 0.21,0.21,0.22,0.23,0.23 0.23,0.24,0.24,0.24), mean=0.219, stddev=0.00934], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.07,0.07,0.07 0.08,0.10,0.17,0.29,0.35 0.39,0.42,0.44,0.46), mean=0.194, stddev=0.101], bias-{mean,stddev}=0.0001448,0.005749, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=4.01e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.27,-0.18,-0.14,-0.09 -0.05,0.02,0.14,0.25,0.32 0.37,0.42,0.45,0.62), mean=0.138, stddev=0.141], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.91,-0.46,-0.36,-0.21 -0.05,0.13,0.44,0.76,0.98 1.1,1.3,1.4,1.6), mean=0.449, stddev=0.399], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.03,0.04 0.04,0.05,0.05,0.07), mean=0.0115, stddev=0.0156], oderiv-count=19136
component name=tdnnf7.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=-655.945, test-mode=false
component name=tdnnf7.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.242798, continuous=true
component name=tdnnf7.noop type=NoOpComponent, dim=1024
component name=tdnnf8.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000676725, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.006026, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.25,0.25,0.25,0.26 0.26,0.26,0.27,0.28,0.29 0.29,0.29,0.30,0.30), mean=0.273, stddev=0.0101], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.05,0.05,0.06 0.06,0.06,0.07,0.07,0.08 0.08,0.08,0.08,0.10), mean=0.0678, stddev=0.00724], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.10,0.11,0.12 0.13,0.16,0.26,0.35,0.38 0.39,0.40,0.41,0.44), mean=0.257, stddev=0.091], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000676725, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.006722, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.07,0.07,0.08 0.09,0.10,0.11,0.12,0.12 0.13,0.13,0.14,0.15), mean=0.107, stddev=0.0138], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.19,0.20,0.20,0.20 0.20,0.21,0.21,0.22,0.23 0.23,0.23,0.23,0.24), mean=0.215, stddev=0.00904], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.07,0.07,0.08 0.08,0.10,0.17,0.28,0.34 0.38,0.41,0.43,0.45), mean=0.192, stddev=0.0976], bias-{mean,stddev}=0.0005983,0.005774, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.02,0.02 0.03,0.03,0.03,0.04), mean=0.00873, stddev=0.0105], oderiv-count=47488
component name=tdnnf8.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=-655.945, test-mode=false
component name=tdnnf8.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.242798, continuous=true
component name=tdnnf8.noop type=NoOpComponent, dim=1024
component name=tdnnf9.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000676725, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.005981, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.25,0.25,0.25,0.25 0.26,0.26,0.27,0.28,0.28 0.29,0.29,0.29,0.30), mean=0.27, stddev=0.0105], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.05,0.05,0.05 0.06,0.06,0.07,0.07,0.08 0.08,0.08,0.08,0.09), mean=0.0672, stddev=0.00783], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.10,0.11,0.12 0.13,0.16,0.26,0.34,0.37 0.39,0.40,0.41,0.42), mean=0.256, stddev=0.0887], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000676725, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.006516, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.06,0.07,0.08 0.08,0.09,0.10,0.11,0.12 0.12,0.13,0.13,0.14), mean=0.103, stddev=0.0146], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.18,0.19,0.19,0.19 0.20,0.20,0.21,0.22,0.22 0.22,0.23,0.23,0.23), mean=0.208, stddev=0.00863], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.07,0.07,0.07 0.08,0.10,0.16,0.28,0.33 0.37,0.40,0.42,0.45), mean=0.186, stddev=0.095], bias-{mean,stddev}=0.0003502,0.005266, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=4.01e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.30,-0.14,-0.11,-0.05 -0.008,0.04,0.14,0.26,0.31 0.36,0.43,0.49,0.60), mean=0.148, stddev=0.129], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.82,-0.44,-0.34,-0.10 0.009,0.15,0.44,0.73,0.88 0.99,1.1,1.2,1.7), mean=0.435, stddev=0.344]
component name=tdnnf9.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=-655.945, test-mode=false
component name=tdnnf9.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.242798, continuous=true
component name=tdnnf9.noop type=NoOpComponent, dim=1024
component name=tdnnf10.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000676725, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.005803, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.24,0.24,0.24,0.25 0.25,0.25,0.26,0.27,0.27 0.28,0.28,0.29,0.29), mean=0.262, stddev=0.01], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.04,0.04,0.05 0.05,0.06,0.07,0.07,0.07 0.08,0.08,0.08,0.09), mean=0.0651, stddev=0.00888], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.10,0.11,0.12 0.13,0.16,0.25,0.33,0.36 0.38,0.39,0.40,0.41), mean=0.249, stddev=0.0849], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000676725, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.006396, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.05,0.06,0.07 0.08,0.09,0.10,0.11,0.12 0.12,0.13,0.13,0.14), mean=0.101, stddev=0.0168], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.18,0.19,0.19,0.19 0.19,0.20,0.20,0.21,0.22 0.22,0.23,0.23,0.24), mean=0.204, stddev=0.00877], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.06,0.06,0.07 0.08,0.09,0.16,0.27,0.33 0.37,0.39,0.41,0.43), mean=0.181, stddev=0.0953], bias-{mean,stddev}=0.0005441,0.005316, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=5.3e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.23,-0.13,-0.09,-0.05 -0.006,0.04,0.13,0.21,0.26 0.31,0.36,0.38,0.48), mean=0.128, stddev=0.106], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.68,-0.37,-0.25,-0.07 0.08,0.19,0.41,0.64,0.73 0.83,0.97,1.1,1.3), mean=0.403, stddev=0.281]
component name=tdnnf10.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=-655.945, test-mode=false
component name=tdnnf10.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.242798, continuous=true
component name=tdnnf10.noop type=NoOpComponent, dim=1024
component name=tdnnf11.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000676725, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.005681, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.23,0.24,0.24,0.24 0.24,0.25,0.26,0.27,0.27 0.27,0.28,0.28,0.29), mean=0.257, stddev=0.0107], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.03,0.04,0.04 0.05,0.06,0.07,0.07,0.07 0.08,0.08,0.08,0.09), mean=0.0634, stddev=0.0103], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.10,0.10,0.11 0.13,0.15,0.25,0.32,0.36 0.37,0.39,0.39,0.40), mean=0.243, stddev=0.0842], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000676725, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.006429, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.04,0.05,0.07 0.08,0.09,0.10,0.12,0.12 0.13,0.13,0.13,0.14), mean=0.101, stddev=0.0184], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.18,0.18,0.19,0.19 0.19,0.20,0.21,0.21,0.22 0.22,0.22,0.23,0.23), mean=0.206, stddev=0.00863], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.06,0.06,0.06 0.07,0.09,0.15,0.28,0.33 0.37,0.40,0.42,0.43), mean=0.18, stddev=0.0993], bias-{mean,stddev}=0.0003251,0.004814, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.41e+03, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.7,-1.3,-1.1,-0.85 -0.63,-0.39,0.11,0.64,0.92 1.1,1.3,1.6,2.2), mean=0.12, stddev=0.603], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-6.4,-3.8,-3.1,-2.3 -1.8,-1.1,0.12,1.3,2.0 2.5,3.0,3.2,5.1), mean=0.0896, stddev=1.48]
component name=tdnnf11.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=-655.945, test-mode=false
component name=tdnnf11.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.242798, continuous=true
component name=tdnnf11.noop type=NoOpComponent, dim=1024
component name=tdnnf12.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000676725, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.005569, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.23,0.23,0.23,0.24 0.24,0.24,0.25,0.26,0.26 0.27,0.27,0.27,0.28), mean=0.252, stddev=0.00889], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.03,0.04,0.04 0.04,0.05,0.06,0.07,0.08 0.08,0.08,0.08,0.09), mean=0.062, stddev=0.0113], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.11,0.11,0.12 0.13,0.16,0.24,0.31,0.34 0.36,0.37,0.38,0.41), mean=0.24, stddev=0.0765], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000676725, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.006752, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.04,0.05,0.06 0.08,0.09,0.11,0.12,0.13 0.14,0.14,0.15,0.16), mean=0.106, stddev=0.0215], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.20,0.20,0.20,0.20 0.21,0.21,0.22,0.22,0.23 0.23,0.23,0.24,0.24), mean=0.216, stddev=0.00854], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.06,0.06,0.07 0.08,0.09,0.16,0.29,0.35 0.39,0.41,0.43,0.47), mean=0.189, stddev=0.104], bias-{mean,stddev}=0.0005477,0.005425, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.18e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.12,-0.06,-0.04,-0.01 0.01,0.04,0.10,0.16,0.19 0.22,0.26,0.28,0.36), mean=0.101, stddev=0.0717], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.36,-0.14,-0.09,0.02 0.11,0.19,0.35,0.50,0.57 0.64,0.71,0.73,0.81), mean=0.344, stddev=0.188]
component name=tdnnf12.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=-655.945, test-mode=false
component name=tdnnf12.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.242798, continuous=true
component name=tdnnf12.noop type=NoOpComponent, dim=1024
component name=tdnnf13.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000676725, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.005782, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.24,0.24,0.24,0.25 0.25,0.25,0.26,0.27,0.27 0.28,0.28,0.28,0.29), mean=0.261, stddev=0.00901], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.03,0.04,0.04 0.05,0.05,0.06,0.07,0.08 0.08,0.09,0.09,0.10), mean=0.0643, stddev=0.012], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.12,0.13,0.14 0.15,0.18,0.25,0.32,0.35 0.38,0.40,0.41,0.48), mean=0.251, stddev=0.0751], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000676725, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.007269, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.07,0.07,0.08 0.09,0.10,0.12,0.13,0.14 0.14,0.15,0.16,0.19), mean=0.115, stddev=0.0184], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.21,0.21,0.22,0.22 0.22,0.22,0.23,0.24,0.24 0.25,0.25,0.26,0.28), mean=0.232, stddev=0.00952], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.07,0.07,0.08 0.09,0.10,0.18,0.31,0.37 0.40,0.44,0.46,0.69), mean=0.205, stddev=0.109], bias-{mean,stddev}=4.549e-05,0.007159, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=6.3e+04, self-repaired-proportion=0.0384115, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.56,-0.21,-0.17,-0.13 -0.09,-0.05,0.02,0.10,0.15 0.18,0.23,0.27,0.34), mean=0.0249, stddev=0.0978], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-2.1,-0.65,-0.49,-0.33 -0.16,-0.02,0.25,0.49,0.62 0.70,0.83,0.91,1.3), mean=0.227, stddev=0.337], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.05,0.11,0.13 0.16,0.23,0.31,0.69), mean=0.0579, stddev=0.0733], oderiv-count=8128
component name=tdnnf13.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=-655.945, test-mode=false
component name=tdnnf13.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.242798, continuous=true
component name=tdnnf13.noop type=NoOpComponent, dim=1024
component name=prefinal-l type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000676725, l2-regularize=0.008, max-change=0.75, params-rms=0.008207, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.23,0.24,0.24,0.24 0.25,0.25,0.26,0.27,0.28 0.28,0.29,0.29,0.30), mean=0.262, stddev=0.0117], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.10,0.10,0.11 0.11,0.12,0.13,0.14,0.15 0.16,0.16,0.17,0.20), mean=0.13, stddev=0.0158], params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.07,0.07,0.08 0.09,0.11,0.21,0.35,0.40 0.44,0.47,0.50,0.69), mean=0.233, stddev=0.121], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=0.000676725, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.007801, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.07,0.07,0.08 0.10,0.11,0.12,0.14,0.15 0.16,0.16,0.17,0.21), mean=0.123, stddev=0.0214], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.23,0.23,0.23,0.23 0.24,0.24,0.25,0.26,0.26 0.27,0.27,0.28,0.29), mean=0.249, stddev=0.0109], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.08,0.09,0.09 0.10,0.12,0.20,0.32,0.38 0.43,0.46,0.49,0.71), mean=0.224, stddev=0.111], bias-{mean,stddev}=0.001096,0.007136, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.02,0.04,0.04 0.05,0.06,0.07,0.09), mean=0.0185, stddev=0.0185], oderiv-count=41920
component name=prefinal-chain.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=-655.945, test-mode=false
component name=prefinal-chain.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000676725, l2-regularize=0.008, max-change=0.75, params-rms=0.006126, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.17,0.17,0.18 0.18,0.19,0.20,0.21,0.21 0.21,0.22,0.22,0.22), mean=0.196, stddev=0.0111], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.05,0.06,0.06 0.07,0.08,0.10,0.11,0.11 0.12,0.13,0.13,0.17), mean=0.0965, stddev=0.0172], params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.05,0.05,0.06 0.06,0.08,0.16,0.26,0.30 0.34,0.36,0.39,0.50), mean=0.173, stddev=0.093], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=-655.945, test-mode=false
component name=output.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=2824, learning-rate=0.000676725, l2-regularize=0.002, max-change=1.5, linear-params-rms=0.005588, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-05,0.002,0.01,0.02 0.03,0.05,0.08,0.11,0.13 0.15,0.16,0.17,0.77), mean=0.0797, stddev=0.0406], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.23,0.24,0.25,0.26 0.27,0.28,0.30,0.31,0.32 0.33,0.33,0.34,0.35), mean=0.296, stddev=0.0191], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.09,0.09,0.10 0.11,0.12,0.21,0.39,0.48 0.53,0.59,0.62,0.88), mean=0.258, stddev=0.147], bias-{mean,stddev}=3.918e-06,0.006707, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=0.000676725, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.004192, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.02,0.02,0.03 0.04,0.05,0.07,0.08,0.08 0.09,0.09,0.10,0.16), mean=0.065, stddev=0.0166], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.12,0.12,0.13 0.13,0.13,0.13,0.14,0.14 0.14,0.14,0.15,0.19), mean=0.134, stddev=0.00629], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.05,0.05,0.06 0.06,0.08,0.11,0.17,0.19 0.21,0.23,0.28,0.36), mean=0.124, stddev=0.052], bias-{mean,stddev}=0.003743,0.005727, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05
component name=prefinal-xent.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=-655.945, test-mode=false
component name=prefinal-xent.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000676725, l2-regularize=0.008, max-change=0.75, params-rms=0.002624, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.07,0.08,0.08 0.08,0.08,0.08,0.09,0.09 0.09,0.09,0.09,0.10), mean=0.0838, stddev=0.00432], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.007,0.01,0.01,0.02 0.03,0.04,0.04,0.05,0.05 0.05,0.05,0.06,0.06), mean=0.041, stddev=0.00893], params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.009,0.01,0.01,0.01 0.01,0.02,0.07,0.11,0.13 0.14,0.15,0.16,0.21), mean=0.0712, stddev=0.0445], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=-655.945, test-mode=false
component name=output-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=2824, learning-rate=0.00338363, l2-regularize=0.002, learning-rate-factor=5, max-change=1.5, linear-params-rms=0.004182, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.002,0.006,0.02 0.03,0.04,0.06,0.08,0.10 0.11,0.12,0.13,0.17), mean=0.0609, stddev=0.0277], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.18,0.19,0.19,0.20 0.20,0.21,0.22,0.23,0.24 0.25,0.25,0.25,0.27), mean=0.222, stddev=0.0145], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.02,0.02,0.02 0.03,0.04,0.17,0.31,0.36 0.41,0.44,0.46,0.49), mean=0.18, stddev=0.131], bias-{mean,stddev}=2.689e-10,0.004805, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-xent.log-softmax type=LogSoftmaxComponent, dim=2824, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.0007,0.002,0.003 0.004,0.004,0.005,0.05), mean=0.00104, stddev=0.00153], oderiv-count=57344

LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:7.79939 tdnnf2.linear:4.85121 tdnnf2.affine:4.72212 tdnnf3.linear:3.71075 tdnnf3.affine:4.00296 tdnnf4.linear:3.59741 tdnnf4.affine:3.90152 tdnnf5.linear:2.86407 tdnnf5.affine:3.1194 tdnnf6.linear:3.4313 tdnnf6.affine:3.6871 tdnnf7.linear:3.09469 tdnnf7.affine:3.51067 tdnnf8.linear:3.08528 tdnnf8.affine:3.44663 tdnnf9.linear:3.06219 tdnnf9.affine:3.34063 tdnnf10.linear:2.9713 tdnnf10.affine:3.27924 tdnnf11.linear:2.90845 tdnnf11.affine:3.29524 tdnnf12.linear:2.85152 tdnnf12.affine:3.46165 tdnnf13.linear:2.96018 tdnnf13.affine:3.72863 prefinal-l:4.20192 prefinal-chain.affine:4.00103 prefinal-chain.linear:3.13675 output.affine:4.76438 prefinal-xent.affine:2.1575 prefinal-xent.linear:1.34337 output-xent.affine:3.56521 ]
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:13.3127 tdnnf2.linear:9.34854 tdnnf2.affine:7.79086 tdnnf3.linear:6.95772 tdnnf3.affine:6.47184 tdnnf4.linear:6.67789 tdnnf4.affine:6.02895 tdnnf5.linear:4.5487 tdnnf5.affine:4.59328 tdnnf6.linear:6.58877 tdnnf6.affine:6.12078 tdnnf7.linear:6.09461 tdnnf7.affine:6.03641 tdnnf8.linear:6.21416 tdnnf8.affine:6.06697 tdnnf9.linear:6.39084 tdnnf9.affine:6.00831 tdnnf10.linear:6.33043 tdnnf10.affine:6.01137 tdnnf11.linear:6.60261 tdnnf11.affine:6.18437 tdnnf12.linear:6.3088 tdnnf12.affine:6.27036 tdnnf13.linear:5.87589 tdnnf13.affine:6.06358 prefinal-l:11.1667 prefinal-chain.affine:7.05485 prefinal-chain.linear:8.85463 output.affine:20.3003 prefinal-xent.affine:5.21011 prefinal-xent.linear:5.56944 output-xent.affine:29.4504 ]
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.582666 tdnnf2.linear:0.516495 tdnnf2.affine:0.605989 tdnnf3.linear:0.532816 tdnnf3.affine:0.61862 tdnnf4.linear:0.541977 tdnnf4.affine:0.650674 tdnnf5.linear:0.638863 tdnnf5.affine:0.686829 tdnnf6.linear:0.521723 tdnnf6.affine:0.604859 tdnnf7.linear:0.508798 tdnnf7.affine:0.584336 tdnnf8.linear:0.496677 tdnnf8.affine:0.569785 tdnnf9.linear:0.478304 tdnnf9.affine:0.556164 tdnnf10.linear:0.468813 tdnnf10.affine:0.546287 tdnnf11.linear:0.439826 tdnnf11.affine:0.533319 tdnnf12.linear:0.452943 tdnnf12.affine:0.553088 tdnnf13.linear:0.509758 tdnnf13.affine:0.626003 prefinal-l:0.374619 prefinal-chain.affine:0.574554 prefinal-chain.linear:0.355443 output.affine:0.232233 prefinal-xent.affine:0.41564 prefinal-xent.linear:0.240266 output-xent.affine:0.121344 ]
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:PrintProfile():cu-device.cc:563) -----
[cudevice profile]
Total GPU time:	0s (may involve some double-counting)
-----
# Accounting: time=21 threads=1
# Ended (code 0) at Tue Jul 19 21:50:26 EDT 2022, elapsed time 21 seconds
