# nnet3-show-progress --use-gpu=no --verbose=2 telugu_exp/chain_cleaned_1d/tdnn1d_sp/9.mdl telugu_exp/chain_cleaned_1d/tdnn1d_sp/10.mdl 
# Started at Tue Jul 19 20:25:08 EDT 2022
#
nnet3-show-progress --use-gpu=no --verbose=2 telugu_exp/chain_cleaned_1d/tdnn1d_sp/9.mdl telugu_exp/chain_cleaned_1d/tdnn1d_sp/10.mdl 
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:SelectGpuId():cu-device.cc:168) Manually selected to compute on CPU.
VLOG[1] (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:136) Printing info for the difference between the neural nets: left-context: 28
right-context: 28
num-parameters: 9032208
modulus: 1
input-node name=ivector dim=100
input-node name=input dim=40
component-node name=lda component=lda input=Append(Offset(input, -1), input, Offset(input, 1), ReplaceIndex(ivector, t, 0)) input-dim=220 output-dim=220
component-node name=tdnn1.affine component=tdnn1.affine input=lda input-dim=220 output-dim=1024
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=1024 output-dim=1024
component-node name=tdnn1.batchnorm component=tdnn1.batchnorm input=tdnn1.relu input-dim=1024 output-dim=1024
component-node name=tdnn1.dropout component=tdnn1.dropout input=tdnn1.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.linear component=tdnnf2.linear input=tdnn1.dropout input-dim=1024 output-dim=128
component-node name=tdnnf2.affine component=tdnnf2.affine input=tdnnf2.linear input-dim=128 output-dim=1024
component-node name=tdnnf2.relu component=tdnnf2.relu input=tdnnf2.affine input-dim=1024 output-dim=1024
component-node name=tdnnf2.batchnorm component=tdnnf2.batchnorm input=tdnnf2.relu input-dim=1024 output-dim=1024
component-node name=tdnnf2.dropout component=tdnnf2.dropout input=tdnnf2.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.noop component=tdnnf2.noop input=Sum(Scale(0.66, tdnn1.dropout), tdnnf2.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf3.linear component=tdnnf3.linear input=tdnnf2.noop input-dim=1024 output-dim=128
component-node name=tdnnf3.affine component=tdnnf3.affine input=tdnnf3.linear input-dim=128 output-dim=1024
component-node name=tdnnf3.relu component=tdnnf3.relu input=tdnnf3.affine input-dim=1024 output-dim=1024
component-node name=tdnnf3.batchnorm component=tdnnf3.batchnorm input=tdnnf3.relu input-dim=1024 output-dim=1024
component-node name=tdnnf3.dropout component=tdnnf3.dropout input=tdnnf3.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf3.noop component=tdnnf3.noop input=Sum(Scale(0.66, tdnnf2.noop), tdnnf3.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf4.linear component=tdnnf4.linear input=tdnnf3.noop input-dim=1024 output-dim=128
component-node name=tdnnf4.affine component=tdnnf4.affine input=tdnnf4.linear input-dim=128 output-dim=1024
component-node name=tdnnf4.relu component=tdnnf4.relu input=tdnnf4.affine input-dim=1024 output-dim=1024
component-node name=tdnnf4.batchnorm component=tdnnf4.batchnorm input=tdnnf4.relu input-dim=1024 output-dim=1024
component-node name=tdnnf4.dropout component=tdnnf4.dropout input=tdnnf4.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf4.noop component=tdnnf4.noop input=Sum(Scale(0.66, tdnnf3.noop), tdnnf4.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf5.linear component=tdnnf5.linear input=tdnnf4.noop input-dim=1024 output-dim=128
component-node name=tdnnf5.affine component=tdnnf5.affine input=tdnnf5.linear input-dim=128 output-dim=1024
component-node name=tdnnf5.relu component=tdnnf5.relu input=tdnnf5.affine input-dim=1024 output-dim=1024
component-node name=tdnnf5.batchnorm component=tdnnf5.batchnorm input=tdnnf5.relu input-dim=1024 output-dim=1024
component-node name=tdnnf5.dropout component=tdnnf5.dropout input=tdnnf5.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf5.noop component=tdnnf5.noop input=Sum(Scale(0.66, tdnnf4.noop), tdnnf5.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf6.linear component=tdnnf6.linear input=tdnnf5.noop input-dim=1024 output-dim=128
component-node name=tdnnf6.affine component=tdnnf6.affine input=tdnnf6.linear input-dim=128 output-dim=1024
component-node name=tdnnf6.relu component=tdnnf6.relu input=tdnnf6.affine input-dim=1024 output-dim=1024
component-node name=tdnnf6.batchnorm component=tdnnf6.batchnorm input=tdnnf6.relu input-dim=1024 output-dim=1024
component-node name=tdnnf6.dropout component=tdnnf6.dropout input=tdnnf6.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf6.noop component=tdnnf6.noop input=Sum(Scale(0.66, tdnnf5.noop), tdnnf6.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf7.linear component=tdnnf7.linear input=tdnnf6.noop input-dim=1024 output-dim=128
component-node name=tdnnf7.affine component=tdnnf7.affine input=tdnnf7.linear input-dim=128 output-dim=1024
component-node name=tdnnf7.relu component=tdnnf7.relu input=tdnnf7.affine input-dim=1024 output-dim=1024
component-node name=tdnnf7.batchnorm component=tdnnf7.batchnorm input=tdnnf7.relu input-dim=1024 output-dim=1024
component-node name=tdnnf7.dropout component=tdnnf7.dropout input=tdnnf7.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf7.noop component=tdnnf7.noop input=Sum(Scale(0.66, tdnnf6.noop), tdnnf7.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf8.linear component=tdnnf8.linear input=tdnnf7.noop input-dim=1024 output-dim=128
component-node name=tdnnf8.affine component=tdnnf8.affine input=tdnnf8.linear input-dim=128 output-dim=1024
component-node name=tdnnf8.relu component=tdnnf8.relu input=tdnnf8.affine input-dim=1024 output-dim=1024
component-node name=tdnnf8.batchnorm component=tdnnf8.batchnorm input=tdnnf8.relu input-dim=1024 output-dim=1024
component-node name=tdnnf8.dropout component=tdnnf8.dropout input=tdnnf8.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf8.noop component=tdnnf8.noop input=Sum(Scale(0.66, tdnnf7.noop), tdnnf8.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf9.linear component=tdnnf9.linear input=tdnnf8.noop input-dim=1024 output-dim=128
component-node name=tdnnf9.affine component=tdnnf9.affine input=tdnnf9.linear input-dim=128 output-dim=1024
component-node name=tdnnf9.relu component=tdnnf9.relu input=tdnnf9.affine input-dim=1024 output-dim=1024
component-node name=tdnnf9.batchnorm component=tdnnf9.batchnorm input=tdnnf9.relu input-dim=1024 output-dim=1024
component-node name=tdnnf9.dropout component=tdnnf9.dropout input=tdnnf9.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf9.noop component=tdnnf9.noop input=Sum(Scale(0.66, tdnnf8.noop), tdnnf9.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf10.linear component=tdnnf10.linear input=tdnnf9.noop input-dim=1024 output-dim=128
component-node name=tdnnf10.affine component=tdnnf10.affine input=tdnnf10.linear input-dim=128 output-dim=1024
component-node name=tdnnf10.relu component=tdnnf10.relu input=tdnnf10.affine input-dim=1024 output-dim=1024
component-node name=tdnnf10.batchnorm component=tdnnf10.batchnorm input=tdnnf10.relu input-dim=1024 output-dim=1024
component-node name=tdnnf10.dropout component=tdnnf10.dropout input=tdnnf10.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf10.noop component=tdnnf10.noop input=Sum(Scale(0.66, tdnnf9.noop), tdnnf10.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf11.linear component=tdnnf11.linear input=tdnnf10.noop input-dim=1024 output-dim=128
component-node name=tdnnf11.affine component=tdnnf11.affine input=tdnnf11.linear input-dim=128 output-dim=1024
component-node name=tdnnf11.relu component=tdnnf11.relu input=tdnnf11.affine input-dim=1024 output-dim=1024
component-node name=tdnnf11.batchnorm component=tdnnf11.batchnorm input=tdnnf11.relu input-dim=1024 output-dim=1024
component-node name=tdnnf11.dropout component=tdnnf11.dropout input=tdnnf11.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf11.noop component=tdnnf11.noop input=Sum(Scale(0.66, tdnnf10.noop), tdnnf11.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf12.linear component=tdnnf12.linear input=tdnnf11.noop input-dim=1024 output-dim=128
component-node name=tdnnf12.affine component=tdnnf12.affine input=tdnnf12.linear input-dim=128 output-dim=1024
component-node name=tdnnf12.relu component=tdnnf12.relu input=tdnnf12.affine input-dim=1024 output-dim=1024
component-node name=tdnnf12.batchnorm component=tdnnf12.batchnorm input=tdnnf12.relu input-dim=1024 output-dim=1024
component-node name=tdnnf12.dropout component=tdnnf12.dropout input=tdnnf12.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf12.noop component=tdnnf12.noop input=Sum(Scale(0.66, tdnnf11.noop), tdnnf12.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf13.linear component=tdnnf13.linear input=tdnnf12.noop input-dim=1024 output-dim=128
component-node name=tdnnf13.affine component=tdnnf13.affine input=tdnnf13.linear input-dim=128 output-dim=1024
component-node name=tdnnf13.relu component=tdnnf13.relu input=tdnnf13.affine input-dim=1024 output-dim=1024
component-node name=tdnnf13.batchnorm component=tdnnf13.batchnorm input=tdnnf13.relu input-dim=1024 output-dim=1024
component-node name=tdnnf13.dropout component=tdnnf13.dropout input=tdnnf13.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf13.noop component=tdnnf13.noop input=Sum(Scale(0.66, tdnnf12.noop), tdnnf13.dropout) input-dim=1024 output-dim=1024
component-node name=prefinal-l component=prefinal-l input=tdnnf13.noop input-dim=1024 output-dim=256
component-node name=prefinal-chain.affine component=prefinal-chain.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-chain.relu component=prefinal-chain.relu input=prefinal-chain.affine input-dim=1024 output-dim=1024
component-node name=prefinal-chain.batchnorm1 component=prefinal-chain.batchnorm1 input=prefinal-chain.relu input-dim=1024 output-dim=1024
component-node name=prefinal-chain.linear component=prefinal-chain.linear input=prefinal-chain.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-chain.batchnorm2 component=prefinal-chain.batchnorm2 input=prefinal-chain.linear input-dim=256 output-dim=256
component-node name=output.affine component=output.affine input=prefinal-chain.batchnorm2 input-dim=256 output-dim=2824
output-node name=output input=output.affine dim=2824 objective=linear
component-node name=prefinal-xent.affine component=prefinal-xent.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-xent.relu component=prefinal-xent.relu input=prefinal-xent.affine input-dim=1024 output-dim=1024
component-node name=prefinal-xent.batchnorm1 component=prefinal-xent.batchnorm1 input=prefinal-xent.relu input-dim=1024 output-dim=1024
component-node name=prefinal-xent.linear component=prefinal-xent.linear input=prefinal-xent.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-xent.batchnorm2 component=prefinal-xent.batchnorm2 input=prefinal-xent.linear input-dim=256 output-dim=256
component-node name=output-xent.affine component=output-xent.affine input=prefinal-xent.batchnorm2 input-dim=256 output-dim=2824
component-node name=output-xent.log-softmax component=output-xent.log-softmax input=output-xent.affine input-dim=2824 output-dim=2824
output-node name=output-xent input=output-xent.log-softmax dim=2824 objective=linear
component name=lda type=FixedAffineComponent, input-dim=220, output-dim=220, linear-params-rms=0.00576, bias-{mean,stddev}=-0.0009624,0.01288
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=220, output-dim=1024, learning-rate=0.00119488, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.0201, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.07,0.07,0.09 0.12,0.18,0.28,0.36,0.42 0.47,0.52,0.53,0.67), mean=0.277, stddev=0.11], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.38,0.41,0.42,0.44 0.46,0.50,0.60,0.72,0.84 0.96,1.0,1.0,1.1), mean=0.626, stddev=0.148], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.22,0.23,0.25,0.27 0.30,0.36,0.55,0.81,0.96 1.1,1.2,1.2,1.3), mean=0.593, stddev=0.248], bias-{mean,stddev}=0.000564,0.01481, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=1.59e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-5.5,-3.4,-2.8,-1.9 -1.2,-0.58,0.0001,0.76,1.4 2.0,2.6,2.9,4.7), mean=0.0478, stddev=1.15], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-64,-46,-34,-25 -17,-10,0.22,10,16 23,31,43,82), mean=-0.0824, stddev=14.9]
component name=tdnn1.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=-214.715, test-mode=false
component name=tdnn1.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf2.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.00119488, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.0108, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.43,0.44,0.44,0.45 0.46,0.47,0.49,0.51,0.52 0.53,0.54,0.54,0.56), mean=0.488, stddev=0.0244], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.03,0.03,0.04 0.05,0.08,0.12,0.15,0.17 0.18,0.20,0.21,0.24), mean=0.114, stddev=0.0429], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.14,0.15,0.16 0.19,0.24,0.43,0.64,0.73 0.77,0.80,0.84,0.86), mean=0.445, stddev=0.201], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.00119488, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.01103, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.13,0.13,0.14 0.15,0.16,0.17,0.19,0.21 0.22,0.23,0.24,0.27), mean=0.175, stddev=0.0233], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.31,0.32,0.32,0.33 0.33,0.34,0.35,0.37,0.38 0.38,0.39,0.39,0.39), mean=0.353, stddev=0.0158], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.06,0.06,0.07 0.08,0.11,0.24,0.49,0.59 0.67,0.73,0.75,0.78), mean=0.294, stddev=0.195], bias-{mean,stddev}=-0.0002933,0.01739, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.02,0.03,0.04 0.05,0.06,0.07,0.11), mean=0.0173, stddev=0.0179], oderiv-count=66048
component name=tdnnf2.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=-214.715, test-mode=false
component name=tdnnf2.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf2.noop type=NoOpComponent, dim=1024
component name=tdnnf3.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.00119488, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.008347, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.32,0.33,0.33,0.35 0.36,0.36,0.38,0.39,0.40 0.40,0.41,0.41,0.43), mean=0.377, stddev=0.0171], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.07,0.07,0.08 0.08,0.08,0.09,0.10,0.11 0.11,0.12,0.12,0.14), mean=0.0937, stddev=0.0118], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.13,0.13,0.15 0.16,0.20,0.34,0.49,0.55 0.58,0.61,0.62,0.65), mean=0.348, stddev=0.146], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.00119488, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.009362, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.12,0.12,0.12 0.13,0.13,0.15,0.16,0.17 0.18,0.19,0.19,0.21), mean=0.149, stddev=0.0164], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.26,0.26,0.27,0.28 0.28,0.29,0.30,0.31,0.32 0.32,0.32,0.33,0.33), mean=0.299, stddev=0.0138], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.07,0.07,0.08 0.09,0.11,0.21,0.41,0.49 0.56,0.60,0.62,0.65), mean=0.257, stddev=0.154], bias-{mean,stddev}=0.0004314,0.01186, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.02,0.03,0.04 0.05,0.07,0.09,0.13), mean=0.0204, stddev=0.0185], oderiv-count=41664
component name=tdnnf3.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=-214.715, test-mode=false
component name=tdnnf3.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf3.noop type=NoOpComponent, dim=1024
component name=tdnnf4.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.00119488, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.008032, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.32,0.33,0.33,0.34 0.34,0.35,0.36,0.38,0.38 0.39,0.40,0.40,0.42), mean=0.363, stddev=0.0178], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.07,0.07,0.07 0.08,0.08,0.09,0.10,0.10 0.11,0.11,0.12,0.13), mean=0.0903, stddev=0.01], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.13,0.13,0.14 0.15,0.18,0.33,0.48,0.53 0.56,0.58,0.59,0.60), mean=0.334, stddev=0.142], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.00119488, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.009145, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.11,0.11,0.12 0.12,0.13,0.14,0.16,0.17 0.18,0.19,0.19,0.21), mean=0.145, stddev=0.0175], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.25,0.26,0.26,0.27 0.27,0.28,0.29,0.31,0.31 0.32,0.32,0.33,0.35), mean=0.292, stddev=0.0151], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.08,0.08,0.09 0.10,0.12,0.21,0.39,0.48 0.55,0.59,0.62,0.65), mean=0.254, stddev=0.146], bias-{mean,stddev}=0.0004844,0.01036, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=6.08e+03, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-4.5,-2.9,-2.6,-2.0 -1.4,-0.77,0.34,1.4,2.0 2.5,3.1,3.4,5.4), mean=0.334, stddev=1.36], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-12,-7.2,-6.1,-4.7 -3.6,-2.1,0.60,3.3,4.8 5.9,6.9,7.9,12), mean=0.569, stddev=3.26]
component name=tdnnf4.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=-71.5717, test-mode=false
component name=tdnnf4.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf4.noop type=NoOpComponent, dim=1024
component name=tdnnf5.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.00119488, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=0, linear-params-rms=0.008878, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.26,0.26,0.26,0.26 0.27,0.27,0.28,0.29,0.30 0.31,0.31,0.31,0.32), mean=0.284, stddev=0.0139], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.08,0.08,0.08 0.09,0.09,0.10,0.11,0.11 0.12,0.12,0.12,0.13), mean=0.0999, stddev=0.0101], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.11,0.11,0.12 0.13,0.15,0.24,0.37,0.42 0.45,0.47,0.48,0.48), mean=0.262, stddev=0.109], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.00119488, l2-regularize=0.008, max-change=0.75, time-offsets=0, linear-params-rms=0.009868, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.08,0.08,0.09 0.09,0.10,0.11,0.12,0.13 0.14,0.14,0.15,0.18), mean=0.111, stddev=0.0146], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.28,0.28,0.29 0.29,0.30,0.32,0.33,0.33 0.34,0.35,0.36,0.36), mean=0.315, stddev=0.0163], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.14,0.14,0.15 0.16,0.18,0.26,0.41,0.47 0.50,0.53,0.54,0.56), mean=0.294, stddev=0.116], bias-{mean,stddev}=3.002e-05,0.01481, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=5.86e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.36,-0.23,-0.18,-0.09 -0.05,0.01,0.12,0.22,0.28 0.33,0.39,0.44,0.55), mean=0.116, stddev=0.132], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.6,-1.0,-0.70,-0.43 -0.19,0.05,0.50,0.93,1.1 1.4,1.7,1.8,2.5), mean=0.487, stddev=0.56], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.01,0.02,0.03 0.04,0.04,0.05,0.20), mean=0.0127, stddev=0.0148], oderiv-count=77312
component name=tdnnf5.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=-71.5717, test-mode=false
component name=tdnnf5.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf5.noop type=NoOpComponent, dim=1024
component name=tdnnf6.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.00119488, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.007075, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.29,0.29,0.30 0.30,0.31,0.32,0.33,0.34 0.35,0.35,0.35,0.36), mean=0.32, stddev=0.0154], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.06,0.06,0.07 0.07,0.07,0.08,0.09,0.09 0.09,0.10,0.10,0.11), mean=0.0796, stddev=0.00836], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.10,0.11,0.12 0.13,0.15,0.29,0.42,0.47 0.49,0.51,0.52,0.54), mean=0.293, stddev=0.129], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.00119488, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.008187, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.10,0.10,0.11 0.11,0.12,0.13,0.14,0.15 0.15,0.16,0.17,0.20), mean=0.13, stddev=0.015], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.22,0.23,0.24,0.24 0.25,0.25,0.26,0.27,0.28 0.28,0.29,0.30,0.32), mean=0.262, stddev=0.0137], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.07,0.07,0.08 0.09,0.11,0.19,0.35,0.43 0.48,0.51,0.54,0.58), mean=0.228, stddev=0.13], bias-{mean,stddev}=0.0002559,0.008017, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05
component name=tdnnf6.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=-71.5717, test-mode=false
component name=tdnnf6.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf6.noop type=NoOpComponent, dim=1024
component name=tdnnf7.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.00119488, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.006506, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.25,0.26,0.26,0.27 0.28,0.28,0.29,0.30,0.31 0.32,0.32,0.32,0.34), mean=0.294, stddev=0.0135], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.06,0.06,0.06 0.06,0.07,0.07,0.08,0.08 0.09,0.09,0.09,0.10), mean=0.0732, stddev=0.00753], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.10,0.11,0.11 0.13,0.15,0.28,0.38,0.41 0.43,0.45,0.46,0.47), mean=0.274, stddev=0.109], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.00119488, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.007796, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.10,0.10,0.10 0.11,0.11,0.12,0.14,0.14 0.15,0.15,0.15,0.17), mean=0.124, stddev=0.0133], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.20,0.22,0.22,0.23 0.23,0.24,0.25,0.26,0.27 0.27,0.27,0.28,0.29), mean=0.249, stddev=0.0135], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.07,0.07,0.08 0.09,0.11,0.18,0.33,0.40 0.45,0.49,0.50,0.53), mean=0.219, stddev=0.12], bias-{mean,stddev}=0.000952,0.008187, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.5e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.10,-0.01,0.01,0.03 0.06,0.09,0.15,0.21,0.24 0.27,0.30,0.32,0.39), mean=0.15, stddev=0.0711], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.26,-0.03,0.04,0.14 0.23,0.31,0.49,0.65,0.74 0.82,0.90,0.97,1.1), mean=0.482, stddev=0.208]
component name=tdnnf7.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=-71.5717, test-mode=false
component name=tdnnf7.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf7.noop type=NoOpComponent, dim=1024
component name=tdnnf8.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.00119488, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.006517, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.26,0.26,0.27,0.28 0.28,0.28,0.29,0.30,0.31 0.32,0.32,0.32,0.33), mean=0.295, stddev=0.0121], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.06,0.06,0.06 0.06,0.07,0.07,0.08,0.08 0.09,0.09,0.09,0.10), mean=0.0734, stddev=0.00727], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.11,0.11,0.12 0.13,0.16,0.28,0.38,0.41 0.43,0.44,0.45,0.47), mean=0.276, stddev=0.103], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.00119488, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.007648, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.10,0.10,0.10 0.11,0.11,0.12,0.13,0.14 0.15,0.15,0.15,0.17), mean=0.122, stddev=0.0133], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.22,0.22,0.22,0.23 0.23,0.24,0.24,0.25,0.26 0.26,0.27,0.27,0.27), mean=0.244, stddev=0.0108], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.08,0.08,0.08 0.09,0.11,0.19,0.32,0.39 0.43,0.47,0.48,0.51), mean=0.217, stddev=0.112], bias-{mean,stddev}=0.0003546,0.008273, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.02,0.03 0.03,0.03,0.04,0.06), mean=0.00828, stddev=0.0111], oderiv-count=23488
component name=tdnnf8.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=-71.5717, test-mode=false
component name=tdnnf8.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf8.noop type=NoOpComponent, dim=1024
component name=tdnnf9.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.00119488, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.006431, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.26,0.27,0.27,0.27 0.27,0.28,0.29,0.30,0.31 0.31,0.31,0.32,0.32), mean=0.291, stddev=0.0114], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.06,0.06,0.06 0.06,0.07,0.07,0.08,0.08 0.08,0.09,0.09,0.10), mean=0.0724, stddev=0.0073], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.11,0.11,0.12 0.13,0.16,0.28,0.37,0.40 0.42,0.43,0.44,0.46), mean=0.274, stddev=0.0987], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.00119488, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.007441, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.09,0.10,0.10 0.10,0.11,0.12,0.13,0.14 0.14,0.15,0.15,0.16), mean=0.118, stddev=0.0127], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.21,0.21,0.22,0.22 0.23,0.23,0.24,0.25,0.25 0.26,0.26,0.26,0.27), mean=0.238, stddev=0.011], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.07,0.08,0.08 0.09,0.11,0.19,0.32,0.38 0.42,0.45,0.47,0.49), mean=0.212, stddev=0.107], bias-{mean,stddev}=0.0004356,0.008162, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.007,0.02,0.02 0.03,0.03,0.03,0.05), mean=0.00898, stddev=0.00956], oderiv-count=38272
component name=tdnnf9.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=-71.5717, test-mode=false
component name=tdnnf9.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf9.noop type=NoOpComponent, dim=1024
component name=tdnnf10.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.00119488, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.006321, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.26,0.26,0.26,0.27 0.27,0.28,0.28,0.30,0.30 0.31,0.31,0.31,0.31), mean=0.286, stddev=0.0112], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.06,0.06,0.06 0.06,0.07,0.07,0.08,0.08 0.08,0.09,0.09,0.10), mean=0.0712, stddev=0.00697], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.11,0.11,0.12 0.14,0.17,0.28,0.36,0.39 0.41,0.43,0.43,0.45), mean=0.27, stddev=0.0951], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.00119488, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.007283, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.09,0.09,0.10 0.10,0.11,0.12,0.13,0.13 0.14,0.15,0.15,0.17), mean=0.116, stddev=0.0127], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.20,0.21,0.21,0.22 0.22,0.22,0.23,0.24,0.25 0.25,0.25,0.25,0.26), mean=0.233, stddev=0.0106], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.07,0.08,0.08 0.09,0.11,0.18,0.31,0.37 0.41,0.44,0.46,0.49), mean=0.208, stddev=0.106], bias-{mean,stddev}=0.0007496,0.007651, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=5.93e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.21,-0.13,-0.10,-0.04 0.005,0.06,0.14,0.23,0.28 0.32,0.37,0.41,0.56), mean=0.144, stddev=0.109], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.67,-0.34,-0.16,-0.01 0.11,0.27,0.50,0.75,0.89 1.0,1.1,1.2,1.7), mean=0.501, stddev=0.312], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.12,0.15 0.18,0.22,0.24,0.32), mean=0.0547, stddev=0.0688], oderiv-count=576
component name=tdnnf10.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=-71.5717, test-mode=false
component name=tdnnf10.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf10.noop type=NoOpComponent, dim=1024
component name=tdnnf11.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.00119488, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.006132, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.25,0.25,0.25,0.26 0.26,0.27,0.28,0.29,0.29 0.30,0.30,0.30,0.31), mean=0.277, stddev=0.0126], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.05,0.06,0.06 0.06,0.06,0.07,0.08,0.08 0.08,0.09,0.09,0.09), mean=0.069, stddev=0.00725], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.10,0.10,0.11 0.13,0.15,0.27,0.35,0.38 0.40,0.42,0.42,0.44), mean=0.261, stddev=0.0952], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.00119488, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.007228, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.08,0.08,0.09 0.10,0.10,0.12,0.13,0.13 0.14,0.14,0.15,0.16), mean=0.115, stddev=0.0141], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.20,0.21,0.21,0.21 0.22,0.22,0.23,0.24,0.25 0.25,0.26,0.26,0.27), mean=0.231, stddev=0.0111], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.07,0.07,0.08 0.09,0.10,0.17,0.30,0.37 0.41,0.45,0.46,0.51), mean=0.204, stddev=0.109], bias-{mean,stddev}=0.0007222,0.007474, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.28e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.16,-0.03,-0.005,0.03 0.06,0.09,0.15,0.21,0.25 0.27,0.31,0.33,0.40), mean=0.152, stddev=0.0747], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.22,0.05,0.08,0.16 0.24,0.33,0.48,0.62,0.71 0.80,0.85,0.92,1.0), mean=0.476, stddev=0.186], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.007,0.02,0.03 0.03,0.03,0.03,0.04), mean=0.00983, stddev=0.0106], oderiv-count=22400
component name=tdnnf11.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=-71.5717, test-mode=false
component name=tdnnf11.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf11.noop type=NoOpComponent, dim=1024
component name=tdnnf12.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.00119488, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.005994, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.25,0.25,0.25,0.25 0.26,0.26,0.27,0.28,0.28 0.29,0.29,0.29,0.29), mean=0.271, stddev=0.00997], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.05,0.05,0.05 0.06,0.06,0.07,0.07,0.08 0.08,0.08,0.09,0.09), mean=0.0673, stddev=0.00794], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.09,0.10,0.11 0.12,0.16,0.27,0.34,0.37 0.39,0.40,0.41,0.42), mean=0.256, stddev=0.091], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.00119488, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.007518, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.08,0.08,0.09 0.10,0.11,0.12,0.13,0.14 0.14,0.15,0.15,0.17), mean=0.119, stddev=0.0163], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.21,0.21,0.22,0.22 0.23,0.23,0.24,0.25,0.25 0.26,0.26,0.26,0.27), mean=0.24, stddev=0.0106], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.07,0.07,0.07 0.09,0.10,0.18,0.32,0.39 0.43,0.48,0.49,0.52), mean=0.211, stddev=0.116], bias-{mean,stddev}=0.001206,0.007449, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.02,0.03 0.03,0.04,0.04,0.06), mean=0.0079, stddev=0.0113], oderiv-count=14528
component name=tdnnf12.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=-71.5717, test-mode=false
component name=tdnnf12.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf12.noop type=NoOpComponent, dim=1024
component name=tdnnf13.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.00119488, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.005992, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.25,0.25,0.25,0.26 0.26,0.26,0.27,0.28,0.28 0.29,0.30,0.30,0.30), mean=0.271, stddev=0.0101], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.04,0.05,0.05 0.05,0.06,0.07,0.07,0.08 0.08,0.08,0.09,0.10), mean=0.0672, stddev=0.00912], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.11,0.11,0.12 0.14,0.17,0.26,0.34,0.37 0.38,0.40,0.40,0.41), mean=0.258, stddev=0.0827], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.00119488, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.008084, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.08,0.09,0.10 0.11,0.11,0.13,0.14,0.15 0.16,0.17,0.17,0.18), mean=0.128, stddev=0.0184], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.23,0.23,0.24,0.24 0.24,0.25,0.26,0.27,0.27 0.28,0.28,0.29,0.29), mean=0.258, stddev=0.0114], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.07,0.08,0.08 0.09,0.11,0.19,0.34,0.42 0.47,0.49,0.52,0.54), mean=0.228, stddev=0.122], bias-{mean,stddev}=0.0008473,0.007636, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05
component name=tdnnf13.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=-71.5717, test-mode=false
component name=tdnnf13.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf13.noop type=NoOpComponent, dim=1024
component name=prefinal-l type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.00119488, l2-regularize=0.008, max-change=0.75, params-rms=0.008332, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.24,0.24,0.25,0.25 0.25,0.26,0.27,0.28,0.28 0.28,0.29,0.29,0.30), mean=0.266, stddev=0.0105], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.10,0.10,0.11 0.11,0.12,0.13,0.15,0.15 0.16,0.17,0.17,0.19), mean=0.132, stddev=0.0158], params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.07,0.07,0.08 0.09,0.12,0.22,0.36,0.42 0.45,0.48,0.50,0.51), mean=0.238, stddev=0.121], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=0.00119488, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.009122, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.06,0.07,0.08 0.09,0.10,0.14,0.18,0.19 0.20,0.21,0.22,0.24), mean=0.14, stddev=0.0415], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.26,0.26,0.27,0.27 0.27,0.28,0.29,0.30,0.31 0.31,0.32,0.33,0.33), mean=0.292, stddev=0.0134], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.09,0.09,0.10 0.11,0.13,0.22,0.39,0.47 0.52,0.55,0.57,0.60), mean=0.259, stddev=0.135], bias-{mean,stddev}=0.0005199,0.01085, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05
component name=prefinal-chain.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=-71.5717, test-mode=false
component name=prefinal-chain.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.00119488, l2-regularize=0.008, max-change=0.75, params-rms=0.007938, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.21,0.22,0.22,0.23 0.24,0.24,0.25,0.27,0.27 0.28,0.28,0.29,0.29), mean=0.254, stddev=0.0141], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.06,0.06,0.07 0.08,0.09,0.12,0.16,0.17 0.17,0.18,0.18,0.25), mean=0.122, stddev=0.0348], params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.06,0.07,0.08 0.09,0.11,0.20,0.34,0.40 0.44,0.47,0.48,0.51), mean=0.224, stddev=0.119], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=-71.5717, test-mode=false
component name=output.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=2824, learning-rate=0.00119488, l2-regularize=0.002, max-change=1.5, linear-params-rms=0.008465, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(9e-05,0.004,0.01,0.03 0.05,0.07,0.12,0.17,0.20 0.22,0.24,0.26,0.51), mean=0.122, stddev=0.058], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.37,0.37,0.38,0.39 0.40,0.42,0.45,0.47,0.50 0.51,0.52,0.54,0.55), mean=0.449, stddev=0.0344], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.12,0.13,0.13 0.15,0.18,0.29,0.61,0.75 0.85,0.91,0.95,1.1), mean=0.384, stddev=0.235], bias-{mean,stddev}=-1.559e-05,0.01285, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=0.00119488, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.004871, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.03,0.03,0.04 0.05,0.06,0.08,0.09,0.10 0.11,0.11,0.11,0.14), mean=0.0754, stddev=0.0199], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.14,0.15,0.15 0.15,0.15,0.16,0.16,0.16 0.16,0.17,0.17,0.17), mean=0.156, stddev=0.00526], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.06,0.06,0.06 0.07,0.09,0.13,0.20,0.23 0.25,0.27,0.28,0.31), mean=0.144, stddev=0.0602], bias-{mean,stddev}=0.0009381,0.007286, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.01,0.03 0.04,0.05,0.07,0.10), mean=0.00697, stddev=0.0151], oderiv-count=4160
component name=prefinal-xent.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=-71.5717, test-mode=false
component name=prefinal-xent.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.00119488, l2-regularize=0.008, max-change=0.75, params-rms=0.003418, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.10,0.10,0.10 0.10,0.11,0.11,0.11,0.12 0.12,0.12,0.12,0.12), mean=0.109, stddev=0.00519], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.03,0.03,0.03 0.04,0.05,0.06,0.06,0.07 0.07,0.07,0.07,0.08), mean=0.0537, stddev=0.0105], params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.03,0.03,0.03 0.04,0.05,0.09,0.15,0.17 0.18,0.19,0.20,0.21), mean=0.0972, stddev=0.0502], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=-71.5717, test-mode=false
component name=output-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=2824, learning-rate=0.00597442, l2-regularize=0.002, learning-rate-factor=5, max-change=1.5, linear-params-rms=0.006061, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.009,0.02 0.03,0.05,0.09,0.12,0.14 0.15,0.17,0.18,0.25), mean=0.0881, stddev=0.0405], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.27,0.28,0.28,0.29 0.30,0.30,0.32,0.34,0.35 0.36,0.36,0.37,0.38), mean=0.321, stddev=0.0207], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.05,0.05,0.06 0.07,0.09,0.22,0.44,0.54 0.60,0.65,0.67,0.70), mean=0.267, stddev=0.18], bias-{mean,stddev}=-7.946e-11,0.007465, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-xent.log-softmax type=LogSoftmaxComponent, dim=2824

LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:9.55062 tdnnf2.linear:5.53063 tdnnf2.affine:5.67374 tdnnf3.linear:4.2737 tdnnf3.affine:4.80847 tdnnf4.linear:4.11217 tdnnf4.affine:4.69395 tdnnf5.linear:3.21412 tdnnf5.affine:3.60391 tdnnf6.linear:3.62239 tdnnf6.affine:4.19951 tdnnf7.linear:3.33085 tdnnf7.affine:4.00023 tdnnf8.linear:3.33672 tdnnf8.affine:3.92476 tdnnf9.linear:3.29259 tdnnf9.affine:3.81852 tdnnf10.linear:3.23653 tdnnf10.affine:3.73678 tdnnf11.linear:3.13941 tdnnf11.affine:3.70866 tdnnf12.linear:3.06887 tdnnf12.affine:3.85664 tdnnf13.linear:3.06805 tdnnf13.affine:4.1462 prefinal-l:4.26606 prefinal-chain.affine:4.68346 prefinal-chain.linear:4.06415 output.affine:7.23017 prefinal-xent.affine:2.50517 prefinal-xent.linear:1.74994 output-xent.affine:5.16883 ]
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:13.6367 tdnnf2.linear:10.0499 tdnnf2.affine:8.20801 tdnnf3.linear:7.50296 tdnnf3.affine:6.72577 tdnnf4.linear:7.02092 tdnnf4.affine:6.25522 tdnnf5.linear:5.03357 tdnnf5.affine:4.85069 tdnnf6.linear:6.57527 tdnnf6.affine:6.00997 tdnnf7.linear:6.11532 tdnnf7.affine:5.96604 tdnnf8.linear:6.19656 tdnnf8.affine:6.00282 tdnnf9.linear:6.35232 tdnnf9.affine:5.99073 tdnnf10.linear:6.40914 tdnnf10.affine:6.02753 tdnnf11.linear:6.63972 tdnnf11.affine:6.21569 tdnnf12.linear:6.7549 tdnnf12.affine:6.54832 tdnnf13.linear:6.35035 tdnnf13.affine:6.66578 prefinal-l:10.9398 prefinal-chain.affine:7.27521 prefinal-chain.linear:10.0759 output.affine:23.1252 prefinal-xent.affine:5.67205 prefinal-xent.linear:6.14421 output-xent.affine:28.64 ]
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.709439 tdnnf2.linear:0.551075 tdnnf2.affine:0.690641 tdnnf3.linear:0.567057 tdnnf3.affine:0.715527 tdnnf4.linear:0.584113 tdnnf4.affine:0.750159 tdnnf5.linear:0.632324 tdnnf5.affine:0.740597 tdnnf6.linear:0.555589 tdnnf6.affine:0.702367 tdnnf7.linear:0.548121 tdnnf7.affine:0.672703 tdnnf8.linear:0.541299 tdnnf8.affine:0.65631 tdnnf9.linear:0.521881 tdnnf9.affine:0.639128 tdnnf10.linear:0.507618 tdnnf10.affine:0.62207 tdnnf11.linear:0.476856 tdnnf11.affine:0.599957 tdnnf12.linear:0.455598 tdnnf12.affine:0.589928 tdnnf13.linear:0.481066 tdnnf13.affine:0.617655 prefinal-l:0.393594 prefinal-chain.affine:0.645663 prefinal-chain.linear:0.402832 output.affine:0.314667 prefinal-xent.affine:0.442104 prefinal-xent.linear:0.283962 output-xent.affine:0.180265 ]
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:PrintProfile():cu-device.cc:563) -----
[cudevice profile]
Total GPU time:	0s (may involve some double-counting)
-----
# Accounting: time=21 threads=1
# Ended (code 0) at Tue Jul 19 20:25:29 EDT 2022, elapsed time 21 seconds
