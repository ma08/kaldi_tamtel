# nnet3-am-info telugu_exp/chain_cleaned_1d/tdnn1d_sp/5.mdl && nnet3-show-progress --use-gpu=no telugu_exp/chain_cleaned_1d/tdnn1d_sp/4.mdl telugu_exp/chain_cleaned_1d/tdnn1d_sp/5.mdl 
# Started at Thu Jul 21 11:11:07 EDT 2022
#
nnet3-am-info telugu_exp/chain_cleaned_1d/tdnn1d_sp/5.mdl 
input-dim: 40
ivector-dim: 100
num-pdfs: 2824
prior-dimension: 0
# Nnet info follows.
left-context: 28
right-context: 28
num-parameters: 9032208
modulus: 1
input-node name=ivector dim=100
input-node name=input dim=40
component-node name=lda component=lda input=Append(Offset(input, -1), input, Offset(input, 1), ReplaceIndex(ivector, t, 0)) input-dim=220 output-dim=220
component-node name=tdnn1.affine component=tdnn1.affine input=lda input-dim=220 output-dim=1024
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=1024 output-dim=1024
component-node name=tdnn1.batchnorm component=tdnn1.batchnorm input=tdnn1.relu input-dim=1024 output-dim=1024
component-node name=tdnn1.dropout component=tdnn1.dropout input=tdnn1.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.linear component=tdnnf2.linear input=tdnn1.dropout input-dim=1024 output-dim=128
component-node name=tdnnf2.affine component=tdnnf2.affine input=tdnnf2.linear input-dim=128 output-dim=1024
component-node name=tdnnf2.relu component=tdnnf2.relu input=tdnnf2.affine input-dim=1024 output-dim=1024
component-node name=tdnnf2.batchnorm component=tdnnf2.batchnorm input=tdnnf2.relu input-dim=1024 output-dim=1024
component-node name=tdnnf2.dropout component=tdnnf2.dropout input=tdnnf2.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.noop component=tdnnf2.noop input=Sum(Scale(0.66, tdnn1.dropout), tdnnf2.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf3.linear component=tdnnf3.linear input=tdnnf2.noop input-dim=1024 output-dim=128
component-node name=tdnnf3.affine component=tdnnf3.affine input=tdnnf3.linear input-dim=128 output-dim=1024
component-node name=tdnnf3.relu component=tdnnf3.relu input=tdnnf3.affine input-dim=1024 output-dim=1024
component-node name=tdnnf3.batchnorm component=tdnnf3.batchnorm input=tdnnf3.relu input-dim=1024 output-dim=1024
component-node name=tdnnf3.dropout component=tdnnf3.dropout input=tdnnf3.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf3.noop component=tdnnf3.noop input=Sum(Scale(0.66, tdnnf2.noop), tdnnf3.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf4.linear component=tdnnf4.linear input=tdnnf3.noop input-dim=1024 output-dim=128
component-node name=tdnnf4.affine component=tdnnf4.affine input=tdnnf4.linear input-dim=128 output-dim=1024
component-node name=tdnnf4.relu component=tdnnf4.relu input=tdnnf4.affine input-dim=1024 output-dim=1024
component-node name=tdnnf4.batchnorm component=tdnnf4.batchnorm input=tdnnf4.relu input-dim=1024 output-dim=1024
component-node name=tdnnf4.dropout component=tdnnf4.dropout input=tdnnf4.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf4.noop component=tdnnf4.noop input=Sum(Scale(0.66, tdnnf3.noop), tdnnf4.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf5.linear component=tdnnf5.linear input=tdnnf4.noop input-dim=1024 output-dim=128
component-node name=tdnnf5.affine component=tdnnf5.affine input=tdnnf5.linear input-dim=128 output-dim=1024
component-node name=tdnnf5.relu component=tdnnf5.relu input=tdnnf5.affine input-dim=1024 output-dim=1024
component-node name=tdnnf5.batchnorm component=tdnnf5.batchnorm input=tdnnf5.relu input-dim=1024 output-dim=1024
component-node name=tdnnf5.dropout component=tdnnf5.dropout input=tdnnf5.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf5.noop component=tdnnf5.noop input=Sum(Scale(0.66, tdnnf4.noop), tdnnf5.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf6.linear component=tdnnf6.linear input=tdnnf5.noop input-dim=1024 output-dim=128
component-node name=tdnnf6.affine component=tdnnf6.affine input=tdnnf6.linear input-dim=128 output-dim=1024
component-node name=tdnnf6.relu component=tdnnf6.relu input=tdnnf6.affine input-dim=1024 output-dim=1024
component-node name=tdnnf6.batchnorm component=tdnnf6.batchnorm input=tdnnf6.relu input-dim=1024 output-dim=1024
component-node name=tdnnf6.dropout component=tdnnf6.dropout input=tdnnf6.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf6.noop component=tdnnf6.noop input=Sum(Scale(0.66, tdnnf5.noop), tdnnf6.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf7.linear component=tdnnf7.linear input=tdnnf6.noop input-dim=1024 output-dim=128
component-node name=tdnnf7.affine component=tdnnf7.affine input=tdnnf7.linear input-dim=128 output-dim=1024
component-node name=tdnnf7.relu component=tdnnf7.relu input=tdnnf7.affine input-dim=1024 output-dim=1024
component-node name=tdnnf7.batchnorm component=tdnnf7.batchnorm input=tdnnf7.relu input-dim=1024 output-dim=1024
component-node name=tdnnf7.dropout component=tdnnf7.dropout input=tdnnf7.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf7.noop component=tdnnf7.noop input=Sum(Scale(0.66, tdnnf6.noop), tdnnf7.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf8.linear component=tdnnf8.linear input=tdnnf7.noop input-dim=1024 output-dim=128
component-node name=tdnnf8.affine component=tdnnf8.affine input=tdnnf8.linear input-dim=128 output-dim=1024
component-node name=tdnnf8.relu component=tdnnf8.relu input=tdnnf8.affine input-dim=1024 output-dim=1024
component-node name=tdnnf8.batchnorm component=tdnnf8.batchnorm input=tdnnf8.relu input-dim=1024 output-dim=1024
component-node name=tdnnf8.dropout component=tdnnf8.dropout input=tdnnf8.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf8.noop component=tdnnf8.noop input=Sum(Scale(0.66, tdnnf7.noop), tdnnf8.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf9.linear component=tdnnf9.linear input=tdnnf8.noop input-dim=1024 output-dim=128
component-node name=tdnnf9.affine component=tdnnf9.affine input=tdnnf9.linear input-dim=128 output-dim=1024
component-node name=tdnnf9.relu component=tdnnf9.relu input=tdnnf9.affine input-dim=1024 output-dim=1024
component-node name=tdnnf9.batchnorm component=tdnnf9.batchnorm input=tdnnf9.relu input-dim=1024 output-dim=1024
component-node name=tdnnf9.dropout component=tdnnf9.dropout input=tdnnf9.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf9.noop component=tdnnf9.noop input=Sum(Scale(0.66, tdnnf8.noop), tdnnf9.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf10.linear component=tdnnf10.linear input=tdnnf9.noop input-dim=1024 output-dim=128
component-node name=tdnnf10.affine component=tdnnf10.affine input=tdnnf10.linear input-dim=128 output-dim=1024
component-node name=tdnnf10.relu component=tdnnf10.relu input=tdnnf10.affine input-dim=1024 output-dim=1024
component-node name=tdnnf10.batchnorm component=tdnnf10.batchnorm input=tdnnf10.relu input-dim=1024 output-dim=1024
component-node name=tdnnf10.dropout component=tdnnf10.dropout input=tdnnf10.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf10.noop component=tdnnf10.noop input=Sum(Scale(0.66, tdnnf9.noop), tdnnf10.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf11.linear component=tdnnf11.linear input=tdnnf10.noop input-dim=1024 output-dim=128
component-node name=tdnnf11.affine component=tdnnf11.affine input=tdnnf11.linear input-dim=128 output-dim=1024
component-node name=tdnnf11.relu component=tdnnf11.relu input=tdnnf11.affine input-dim=1024 output-dim=1024
component-node name=tdnnf11.batchnorm component=tdnnf11.batchnorm input=tdnnf11.relu input-dim=1024 output-dim=1024
component-node name=tdnnf11.dropout component=tdnnf11.dropout input=tdnnf11.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf11.noop component=tdnnf11.noop input=Sum(Scale(0.66, tdnnf10.noop), tdnnf11.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf12.linear component=tdnnf12.linear input=tdnnf11.noop input-dim=1024 output-dim=128
component-node name=tdnnf12.affine component=tdnnf12.affine input=tdnnf12.linear input-dim=128 output-dim=1024
component-node name=tdnnf12.relu component=tdnnf12.relu input=tdnnf12.affine input-dim=1024 output-dim=1024
component-node name=tdnnf12.batchnorm component=tdnnf12.batchnorm input=tdnnf12.relu input-dim=1024 output-dim=1024
component-node name=tdnnf12.dropout component=tdnnf12.dropout input=tdnnf12.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf12.noop component=tdnnf12.noop input=Sum(Scale(0.66, tdnnf11.noop), tdnnf12.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf13.linear component=tdnnf13.linear input=tdnnf12.noop input-dim=1024 output-dim=128
component-node name=tdnnf13.affine component=tdnnf13.affine input=tdnnf13.linear input-dim=128 output-dim=1024
component-node name=tdnnf13.relu component=tdnnf13.relu input=tdnnf13.affine input-dim=1024 output-dim=1024
component-node name=tdnnf13.batchnorm component=tdnnf13.batchnorm input=tdnnf13.relu input-dim=1024 output-dim=1024
component-node name=tdnnf13.dropout component=tdnnf13.dropout input=tdnnf13.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf13.noop component=tdnnf13.noop input=Sum(Scale(0.66, tdnnf12.noop), tdnnf13.dropout) input-dim=1024 output-dim=1024
component-node name=prefinal-l component=prefinal-l input=tdnnf13.noop input-dim=1024 output-dim=256
component-node name=prefinal-chain.affine component=prefinal-chain.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-chain.relu component=prefinal-chain.relu input=prefinal-chain.affine input-dim=1024 output-dim=1024
component-node name=prefinal-chain.batchnorm1 component=prefinal-chain.batchnorm1 input=prefinal-chain.relu input-dim=1024 output-dim=1024
component-node name=prefinal-chain.linear component=prefinal-chain.linear input=prefinal-chain.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-chain.batchnorm2 component=prefinal-chain.batchnorm2 input=prefinal-chain.linear input-dim=256 output-dim=256
component-node name=output.affine component=output.affine input=prefinal-chain.batchnorm2 input-dim=256 output-dim=2824
output-node name=output input=output.affine dim=2824 objective=linear
component-node name=prefinal-xent.affine component=prefinal-xent.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-xent.relu component=prefinal-xent.relu input=prefinal-xent.affine input-dim=1024 output-dim=1024
component-node name=prefinal-xent.batchnorm1 component=prefinal-xent.batchnorm1 input=prefinal-xent.relu input-dim=1024 output-dim=1024
component-node name=prefinal-xent.linear component=prefinal-xent.linear input=prefinal-xent.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-xent.batchnorm2 component=prefinal-xent.batchnorm2 input=prefinal-xent.linear input-dim=256 output-dim=256
component-node name=output-xent.affine component=output-xent.affine input=prefinal-xent.batchnorm2 input-dim=256 output-dim=2824
component-node name=output-xent.log-softmax component=output-xent.log-softmax input=output-xent.affine input-dim=2824 output-dim=2824
output-node name=output-xent input=output-xent.log-softmax dim=2824 objective=linear
component name=lda type=FixedAffineComponent, input-dim=220, output-dim=220, linear-params-rms=0.005747, bias-{mean,stddev}=-0.001007,0.01284
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=220, output-dim=1024, learning-rate=0.000233513, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.03568, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.32,0.46,0.47,0.48 0.49,0.50,0.53,0.55,0.57 0.59,0.61,0.62,0.71), mean=0.528, stddev=0.0347], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.1,1.1,1.1,1.1 1.1,1.1,1.1,1.2,1.2 1.3,1.3,1.3,1.5), mean=1.14, stddev=0.0612], bias-{mean,stddev}=-0.008958,0.4988, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=3.06e+06, self-repaired-proportion=0.818118, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.03,0.45,0.69 0.89,1.1,1.2,1.9), mean=0.212, stddev=0.313], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.46,1.0,1.0 1.0,1.0,1.0,1.0), mean=0.488, stddev=0.467], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.04,0.04,0.05 0.06,0.07,0.11,0.12,0.14 0.17,0.19,0.21,0.48), mean=0.103, stddev=0.036], oderiv-count=4.75174e+06
component name=tdnn1.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=47221.7, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.03,0.42,0.64 0.83,1.0,1.1,1.8), mean=0.198, stddev=0.292], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.04,0.08,0.09 0.09,0.11,0.11,0.16), mean=0.0382, stddev=0.0368]
component name=tdnn1.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf2.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000233513, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.01712, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.77,0.77,0.77,0.77 0.77,0.77,0.77,0.78,0.78 0.78,0.78,0.78,0.78), mean=0.775, stddev=0.00124], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.14,0.15,0.15 0.16,0.17,0.19,0.21,0.23 0.24,0.26,0.27,0.31), mean=0.192, stddev=0.0283], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000233513, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.03295, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.42,0.46,0.47,0.48 0.49,0.50,0.53,0.55,0.56 0.57,0.59,0.60,0.62), mean=0.526, stddev=0.0287], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.99,0.99,1.0,1.0 1.0,1.0,1.1,1.1,1.1 1.1,1.1,1.1,1.1), mean=1.05, stddev=0.024], bias-{mean,stddev}=6.121e-05,0.4803, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=3.11e+06, self-repaired-proportion=0.134915, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(9e-06,0.0001,0.0002,0.001 0.02,0.05,0.20,0.50,0.68 0.82,1.0,1.3,2.0), mean=0.288, stddev=0.282], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.0009,0.002,0.009 0.08,0.16,0.49,0.83,0.92 0.95,0.99,0.99,1.0), mean=0.496, stddev=0.31], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.004,0.005,0.005 0.006,0.007,0.01,0.02,0.03 0.06,0.07,0.07,0.08), mean=0.0168, stddev=0.0159], oderiv-count=4.69952e+06
component name=tdnnf2.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=46709.7, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-05,0.0001,0.0002,0.001 0.02,0.05,0.19,0.47,0.63 0.76,0.92,1.2,1.9), mean=0.269, stddev=0.261], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.004,0.006,0.02 0.11,0.16,0.28,0.38,0.42 0.46,0.49,0.52,0.60), mean=0.269, stddev=0.125]
component name=tdnnf2.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf2.noop type=NoOpComponent, dim=1024
component name=tdnnf3.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000233513, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.01526, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.69,0.69,0.69,0.69 0.69,0.69,0.69,0.69,0.69 0.69,0.69,0.69,0.69), mean=0.691, stddev=0.000791], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.14,0.14,0.15 0.15,0.16,0.17,0.18,0.20 0.20,0.21,0.22,0.25), mean=0.172, stddev=0.0181], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000233513, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.03267, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.46,0.47,0.47,0.48 0.49,0.50,0.52,0.54,0.55 0.56,0.58,0.58,0.61), mean=0.522, stddev=0.025], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.97,0.99,0.99,1.0 1.0,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.1), mean=1.05, stddev=0.0247], bias-{mean,stddev}=-0.004513,0.4932, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=2.85e+06, self-repaired-proportion=0.0437492, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(8e-06,0.007,0.02,0.03 0.06,0.09,0.26,0.54,0.75 0.88,1.0,1.1,1.9), mean=0.331, stddev=0.274], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(6e-05,0.02,0.04,0.08 0.13,0.21,0.50,0.77,0.87 0.92,0.95,0.96,1.0), mean=0.496, stddev=0.268], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.003,0.004 0.004,0.005,0.006,0.01,0.01 0.02,0.02,0.03,0.07), mean=0.00832, stddev=0.00672], oderiv-count=4.45363e+06
component name=tdnnf3.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=46197.7, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(6e-07,0.006,0.02,0.03 0.05,0.09,0.24,0.50,0.70 0.83,0.98,1.0,1.7), mean=0.309, stddev=0.257], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.06,0.11,0.15 0.19,0.24,0.37,0.48,0.53 0.56,0.61,0.64,0.74), mean=0.36, stddev=0.133]
component name=tdnnf3.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf3.noop type=NoOpComponent, dim=1024
component name=tdnnf4.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000233513, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.01435, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.65,0.65,0.65 0.65,0.65,0.65,0.65,0.65 0.65,0.65,0.65,0.65), mean=0.65, stddev=-nan], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.13,0.14,0.14 0.15,0.15,0.16,0.17,0.18 0.18,0.19,0.20,0.23), mean=0.162, stddev=0.0134], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000233513, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.03251, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.45,0.46,0.47,0.48 0.49,0.50,0.52,0.54,0.55 0.56,0.57,0.58,0.61), mean=0.52, stddev=0.0242], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.97,0.99,1.0 1.0,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.1), mean=1.04, stddev=0.0233], bias-{mean,stddev}=0.006832,0.542, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=1.05e+06, self-repaired-proportion=0.0455016, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-05,0.02,0.03,0.04 0.07,0.11,0.29,0.57,0.79 1.0,1.1,1.3,2.1), mean=0.371, stddev=0.306], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.03,0.05,0.08 0.14,0.23,0.50,0.77,0.87 0.92,0.95,0.97,1.0), mean=0.501, stddev=0.264], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.005,0.005,0.006 0.006,0.007,0.009,0.01,0.02 0.02,0.03,0.03,0.14), mean=0.0113, stddev=0.00887], oderiv-count=1.50707e+06
component name=tdnnf4.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=15399.2, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(5e-06,0.02,0.02,0.04 0.06,0.10,0.27,0.54,0.73 0.96,1.1,1.2,2.0), mean=0.346, stddev=0.287], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0006,0.11,0.15,0.19 0.23,0.28,0.41,0.53,0.58 0.63,0.67,0.69,0.79), mean=0.408, stddev=0.137]
component name=tdnnf4.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf4.noop type=NoOpComponent, dim=1024
component name=tdnnf5.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000233513, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=0, linear-params-rms=0.01824, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.58,0.58,0.58,0.58 0.58,0.58,0.58,0.58,0.58 0.58,0.58,0.58,0.59), mean=0.584, stddev=0.000423], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.17,0.18,0.18 0.19,0.19,0.21,0.22,0.22 0.23,0.23,0.24,0.26), mean=0.206, stddev=0.0137], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000233513, l2-regularize=0.008, max-change=0.75, time-offsets=0, linear-params-rms=0.04581, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.40,0.43,0.44,0.46 0.48,0.49,0.52,0.55,0.56 0.58,0.59,0.59,0.62), mean=0.517, stddev=0.0344], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.4,1.4 1.4,1.4,1.5,1.5,1.5 1.5,1.5,1.5,1.5), mean=1.47, stddev=0.0325], bias-{mean,stddev}=-0.0006997,0.5175, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.28e+05, self-repaired-proportion=0.0585152, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-05,0.01,0.02,0.04 0.06,0.10,0.25,0.56,0.73 0.96,1.2,1.3,1.8), mean=0.343, stddev=0.298], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.03,0.04,0.08 0.13,0.21,0.48,0.78,0.87 0.93,0.97,0.98,1.0), mean=0.493, stddev=0.272], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.005,0.005,0.006 0.006,0.007,0.01,0.01,0.02 0.02,0.03,0.05,0.11), mean=0.0119, stddev=0.00972], oderiv-count=1.47482e+06
component name=tdnnf5.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=15399.2, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(7e-06,0.01,0.02,0.03 0.05,0.09,0.23,0.52,0.68 0.91,1.1,1.2,1.7), mean=0.319, stddev=0.28], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0009,0.07,0.10,0.15 0.19,0.25,0.37,0.50,0.55 0.60,0.66,0.67,0.78), mean=0.374, stddev=0.14]
component name=tdnnf5.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf5.noop type=NoOpComponent, dim=1024
component name=tdnnf6.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000233513, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01377, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.62,0.62,0.62 0.62,0.62,0.62,0.62,0.62 0.62,0.62,0.62,0.62), mean=0.623, stddev=0.000173], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.13,0.13,0.14 0.14,0.15,0.16,0.16,0.17 0.17,0.18,0.18,0.20), mean=0.155, stddev=0.0114], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000233513, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.03255, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.44,0.46,0.47,0.48 0.49,0.50,0.52,0.54,0.55 0.56,0.57,0.58,0.59), mean=0.52, stddev=0.0232], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.99,1.0,1.0,1.0 1.0,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.1), mean=1.04, stddev=0.0222], bias-{mean,stddev}=-0.01574,0.4926, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.18e+05, self-repaired-proportion=0.0208534, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.02,0.04,0.06 0.09,0.14,0.31,0.57,0.73 0.87,1.0,1.1,2.0), mean=0.367, stddev=0.271], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0007,0.04,0.06,0.11 0.17,0.25,0.48,0.72,0.81 0.87,0.91,0.94,1.0), mean=0.488, stddev=0.238], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.004,0.005 0.005,0.006,0.008,0.01,0.01 0.02,0.02,0.03,0.09), mean=0.00911, stddev=0.0053], oderiv-count=1.42694e+06
component name=tdnnf6.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=14887.2, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.02,0.03,0.05 0.08,0.13,0.28,0.53,0.68 0.82,0.97,1.1,1.8), mean=0.342, stddev=0.255], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.007,0.14,0.17,0.21 0.27,0.32,0.45,0.56,0.61 0.66,0.71,0.75,0.87), mean=0.443, stddev=0.138]
component name=tdnnf6.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf6.noop type=NoOpComponent, dim=1024
component name=tdnnf7.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000233513, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01383, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.62,0.62,0.63 0.63,0.63,0.63,0.63,0.63 0.63,0.63,0.63,0.63), mean=0.626, stddev=0.000457], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.13,0.13,0.14 0.14,0.15,0.16,0.17,0.17 0.18,0.18,0.19,0.20), mean=0.156, stddev=0.012], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000233513, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.03264, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.43,0.47,0.47,0.48 0.49,0.50,0.52,0.54,0.55 0.56,0.57,0.58,0.60), mean=0.522, stddev=0.0238], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.97,0.99,1.0,1.0 1.0,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.1), mean=1.04, stddev=0.0228], bias-{mean,stddev}=0.008125,0.5252, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=1.01e+06, self-repaired-proportion=0.0230834, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.03,0.04,0.06 0.08,0.14,0.30,0.60,0.80 0.97,1.2,1.3,1.9), mean=0.388, stddev=0.3], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.06,0.08,0.12 0.16,0.25,0.49,0.75,0.83 0.89,0.95,0.96,0.99), mean=0.498, stddev=0.248], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.004,0.004,0.005 0.005,0.006,0.008,0.01,0.01 0.02,0.02,0.02,0.04), mean=0.00892, stddev=0.00439], oderiv-count=1.41056e+06
component name=tdnnf7.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=14375.2, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.007,0.03,0.04,0.05 0.08,0.12,0.28,0.56,0.75 0.91,1.1,1.3,1.8), mean=0.363, stddev=0.283], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.14,0.17,0.21 0.25,0.32,0.45,0.57,0.63 0.67,0.72,0.75,0.89), mean=0.445, stddev=0.143]
component name=tdnnf7.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf7.noop type=NoOpComponent, dim=1024
component name=tdnnf8.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000233513, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.0138, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.62,0.62,0.62 0.62,0.62,0.62,0.62,0.62 0.62,0.62,0.62,0.63), mean=0.624, stddev=0.000299], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.13,0.13,0.14 0.14,0.15,0.16,0.16,0.17 0.18,0.18,0.19,0.21), mean=0.156, stddev=0.0122], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000233513, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.03261, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.44,0.47,0.47,0.49 0.49,0.50,0.52,0.54,0.55 0.56,0.57,0.58,0.60), mean=0.521, stddev=0.0237], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.99,1.0,1.0,1.0 1.0,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.1), mean=1.04, stddev=0.0229], bias-{mean,stddev}=-0.01429,0.5337, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.05e+05, self-repaired-proportion=0.0338355, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-05,0.02,0.03,0.05 0.08,0.13,0.31,0.58,0.79 0.97,1.2,1.3,1.7), mean=0.377, stddev=0.296], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.04,0.06,0.09 0.15,0.24,0.48,0.73,0.84 0.89,0.94,0.96,1.0), mean=0.489, stddev=0.249], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.004,0.005 0.005,0.006,0.007,0.01,0.01 0.02,0.02,0.03,0.09), mean=0.00923, stddev=0.00657], oderiv-count=1.33024e+06
component name=tdnnf8.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=13863.2, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-05,0.02,0.03,0.04 0.07,0.12,0.28,0.54,0.74 0.90,1.1,1.3,1.6), mean=0.351, stddev=0.278], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.12,0.15,0.20 0.24,0.30,0.44,0.57,0.62 0.66,0.72,0.75,0.83), mean=0.435, stddev=0.148]
component name=tdnnf8.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf8.noop type=NoOpComponent, dim=1024
component name=tdnnf9.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000233513, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01372, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.62,0.62,0.62 0.62,0.62,0.62,0.62,0.62 0.62,0.62,0.62,0.62), mean=0.621, stddev=0.000345], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.13,0.13,0.14 0.14,0.15,0.15,0.16,0.17 0.18,0.18,0.19,0.22), mean=0.155, stddev=0.0122], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000233513, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.03267, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.44,0.47,0.47,0.48 0.49,0.50,0.52,0.54,0.55 0.56,0.57,0.58,0.70), mean=0.522, stddev=0.0246], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.98,0.99,0.99,1.0 1.0,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.3), mean=1.04, stddev=0.0277], bias-{mean,stddev}=-0.006514,0.5222, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.82e+05, self-repaired-proportion=0.024946, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-05,0.02,0.03,0.05 0.08,0.13,0.31,0.58,0.78 0.92,1.2,1.3,1.9), mean=0.379, stddev=0.288], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0003,0.04,0.06,0.10 0.15,0.25,0.49,0.73,0.83 0.89,0.94,0.95,0.99), mean=0.491, stddev=0.246], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.004,0.004 0.005,0.005,0.007,0.01,0.01 0.02,0.02,0.03,0.10), mean=0.00871, stddev=0.00565], oderiv-count=1.32058e+06
component name=tdnnf9.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=13351.2, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-05,0.02,0.03,0.04 0.07,0.12,0.29,0.54,0.73 0.85,1.1,1.2,1.8), mean=0.351, stddev=0.27], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.12,0.14,0.19 0.23,0.30,0.44,0.56,0.62 0.65,0.70,0.72,0.79), mean=0.431, stddev=0.145]
component name=tdnnf9.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf9.noop type=NoOpComponent, dim=1024
component name=tdnnf10.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000233513, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01359, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.61,0.61,0.61,0.61 0.61,0.61,0.62,0.62,0.62 0.62,0.62,0.62,0.62), mean=0.615, stddev=0.000423], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.12,0.13,0.13 0.14,0.14,0.15,0.16,0.17 0.17,0.18,0.19,0.20), mean=0.153, stddev=0.0124], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000233513, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.03259, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.45,0.47,0.48,0.49 0.49,0.50,0.52,0.54,0.55 0.56,0.57,0.58,0.60), mean=0.521, stddev=0.0231], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.99,0.99,1.0 1.0,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.1), mean=1.04, stddev=0.0242], bias-{mean,stddev}=0.03475,0.524, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.82e+05, self-repaired-proportion=0.0326685, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.03,0.04,0.06 0.08,0.14,0.31,0.64,0.82 0.97,1.2,1.3,1.8), mean=0.397, stddev=0.303], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0009,0.06,0.08,0.11 0.17,0.25,0.51,0.77,0.85 0.90,0.95,0.96,1.0), mean=0.511, stddev=0.25], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.004,0.004 0.004,0.005,0.007,0.01,0.01 0.02,0.02,0.02,0.11), mean=0.00825, stddev=0.00542], oderiv-count=1.28269e+06
component name=tdnnf10.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=12839.2, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0004,0.02,0.03,0.05 0.08,0.12,0.29,0.59,0.77 0.91,1.1,1.2,1.6), mean=0.37, stddev=0.285], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.13,0.15,0.20 0.24,0.29,0.44,0.56,0.62 0.66,0.72,0.75,0.92), mean=0.435, stddev=0.147]
component name=tdnnf10.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf10.noop type=NoOpComponent, dim=1024
component name=tdnnf11.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000233513, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01347, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.61,0.61,0.61,0.61 0.61,0.61,0.61,0.61,0.61 0.61,0.61,0.61,0.61), mean=0.61, stddev=0.00081], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.12,0.13,0.13 0.14,0.14,0.15,0.16,0.17 0.17,0.18,0.18,0.23), mean=0.152, stddev=0.0122], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000233513, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.03255, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.44,0.47,0.47,0.48 0.49,0.50,0.52,0.54,0.55 0.56,0.57,0.57,0.60), mean=0.52, stddev=0.0239], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.98,0.99,0.99,1.0 1.0,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.1), mean=1.04, stddev=0.0228], bias-{mean,stddev}=-0.02762,0.5372, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.44e+05, self-repaired-proportion=0.024936, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0004,0.02,0.03,0.05 0.08,0.12,0.30,0.60,0.77 0.95,1.1,1.2,1.7), mean=0.371, stddev=0.291], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.04,0.06,0.11 0.15,0.22,0.49,0.74,0.84 0.89,0.93,0.95,1.0), mean=0.486, stddev=0.253], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.004,0.004 0.005,0.005,0.007,0.01,0.01 0.02,0.02,0.03,0.08), mean=0.00834, stddev=0.00541], oderiv-count=1.18989e+06
component name=tdnnf11.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=12327.2, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0003,0.02,0.02,0.05 0.07,0.11,0.27,0.55,0.72 0.89,1.0,1.1,1.6), mean=0.345, stddev=0.273], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.12,0.13,0.20 0.23,0.29,0.42,0.56,0.61 0.66,0.69,0.71,0.83), mean=0.42, stddev=0.145]
component name=tdnnf11.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf11.noop type=NoOpComponent, dim=1024
component name=tdnnf12.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000233513, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01352, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.61,0.61,0.61,0.61 0.61,0.61,0.61,0.61,0.61 0.61,0.61,0.61,0.61), mean=0.612, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.13,0.13,0.13 0.14,0.14,0.15,0.16,0.17 0.17,0.18,0.18,0.21), mean=0.152, stddev=0.0122], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000233513, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.03251, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.45,0.47,0.47,0.48 0.49,0.50,0.52,0.54,0.55 0.56,0.57,0.58,0.61), mean=0.52, stddev=0.0234], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.97,0.99,1.0,1.0 1.0,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.1), mean=1.04, stddev=0.0224], bias-{mean,stddev}=-0.01407,0.5226, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.6e+05, self-repaired-proportion=0.0238811, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(9e-05,0.02,0.04,0.06 0.08,0.13,0.29,0.58,0.78 0.97,1.2,1.3,1.8), mean=0.371, stddev=0.292], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0008,0.06,0.07,0.11 0.15,0.25,0.48,0.72,0.84 0.90,0.94,0.96,0.99), mean=0.49, stddev=0.247], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.004,0.004 0.004,0.005,0.007,0.01,0.01 0.01,0.02,0.02,0.08), mean=0.00768, stddev=0.00452], oderiv-count=1.1545e+06
component name=tdnnf12.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11815.2, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.02,0.03,0.05 0.07,0.12,0.27,0.54,0.73 0.91,1.1,1.2,1.6), mean=0.344, stddev=0.274], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.13,0.15,0.19 0.24,0.29,0.41,0.54,0.60 0.64,0.68,0.69,0.79), mean=0.414, stddev=0.137]
component name=tdnnf12.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf12.noop type=NoOpComponent, dim=1024
component name=tdnnf13.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000233513, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01346, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.61,0.61,0.61,0.61 0.61,0.61,0.61,0.61,0.61 0.61,0.61,0.61,0.61), mean=0.609, stddev=0.000457], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.13,0.13,0.13 0.14,0.14,0.15,0.16,0.17 0.17,0.18,0.18,0.22), mean=0.152, stddev=0.0121], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000233513, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.03251, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.45,0.47,0.47,0.48 0.49,0.50,0.52,0.54,0.55 0.56,0.57,0.57,0.60), mean=0.52, stddev=0.024], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.98,0.99,0.99,1.0 1.0,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.1), mean=1.04, stddev=0.0241], bias-{mean,stddev}=-0.006048,0.5181, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.48e+05, self-repaired-proportion=0.0131379, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(8e-05,0.03,0.04,0.07 0.09,0.14,0.31,0.61,0.80 0.95,1.1,1.3,1.6), mean=0.383, stddev=0.286], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0005,0.06,0.09,0.13 0.17,0.26,0.49,0.74,0.83 0.88,0.93,0.94,0.99), mean=0.494, stddev=0.241], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.003,0.003,0.004 0.004,0.005,0.006,0.009,0.01 0.01,0.01,0.02,0.07), mean=0.00685, stddev=0.00362], oderiv-count=1.08192e+06
component name=tdnnf13.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11303.2, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.03,0.04,0.06 0.08,0.13,0.28,0.56,0.74 0.89,1.1,1.2,1.5), mean=0.354, stddev=0.268], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.008,0.15,0.17,0.21 0.25,0.30,0.42,0.55,0.61 0.65,0.71,0.73,0.86), mean=0.427, stddev=0.139]
component name=tdnnf13.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf13.noop type=NoOpComponent, dim=1024
component name=prefinal-l type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000233513, l2-regularize=0.008, max-change=0.75, params-rms=0.01759, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.56,0.56,0.56,0.56 0.56,0.56,0.56,0.56,0.56 0.56,0.56,0.56,0.56), mean=0.563, stddev=0.000573], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.23,0.24,0.25,0.26 0.26,0.27,0.28,0.29,0.30 0.31,0.31,0.32,0.34), mean=0.281, stddev=0.0163], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=0.000233513, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.03251, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.45,0.47,0.47,0.48 0.49,0.50,0.52,0.54,0.55 0.56,0.57,0.57,0.58), mean=0.52, stddev=0.0228], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.98,0.98,0.99,1.0 1.0,1.0,1.0,1.1,1.1 1.1,1.1,1.1,1.1), mean=1.04, stddev=0.0218], bias-{mean,stddev}=-0.004589,0.5265, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.59e+05, self-repaired-proportion=0.0547328, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-06,0.005,0.02,0.04 0.06,0.10,0.25,0.55,0.75 0.94,1.2,1.3,1.7), mean=0.342, stddev=0.3], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-05,0.02,0.05,0.09 0.14,0.23,0.48,0.78,0.87 0.94,0.97,0.98,1.0), mean=0.494, stddev=0.273], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.004,0.004 0.005,0.005,0.007,0.01,0.01 0.02,0.02,0.04,0.07), mean=0.00882, stddev=0.00675], oderiv-count=1.1049e+06
component name=prefinal-chain.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11303.2, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-09,0.005,0.02,0.03 0.05,0.09,0.23,0.51,0.70 0.88,1.1,1.3,1.6), mean=0.317, stddev=0.281], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-05,0.05,0.10,0.14 0.19,0.23,0.35,0.47,0.52 0.56,0.61,0.63,0.78), mean=0.353, stddev=0.132]
component name=prefinal-chain.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000233513, l2-regularize=0.008, max-change=0.75, params-rms=0.01748, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.56,0.56,0.56,0.56 0.56,0.56,0.56,0.56,0.56 0.56,0.56,0.56,0.56), mean=0.559, stddev=0.000244], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.21,0.23,0.24,0.25 0.25,0.26,0.28,0.29,0.30 0.31,0.32,0.32,0.35), mean=0.279, stddev=0.0193], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=11303.2, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-7e-08,-5e-08,-5e-08,-5e-08 -3e-08,-2e-08,3e-09,2e-08,4e-08 5e-08,5e-08,6e-08,7e-08), mean=2.24e-09, stddev=2.7e-08], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.57,0.57,0.58,0.60 0.61,0.62,0.65,0.67,0.68 0.71,0.72,0.73,0.75), mean=0.646, stddev=0.0317]
component name=output.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=2824, learning-rate=0.000233513, l2-regularize=0.002, max-change=1.5, linear-params-rms=0.01377, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.005,0.02,0.05 0.08,0.13,0.21,0.27,0.30 0.33,0.36,0.38,0.85), mean=0.203, stddev=0.0845], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.60,0.62,0.63,0.65 0.67,0.70,0.73,0.77,0.78 0.80,0.80,0.83,0.88), mean=0.73, stddev=0.0447], bias-{mean,stddev}=4.953e-05,0.0402, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=0.000233513, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.03185, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.43,0.45,0.46,0.47 0.48,0.49,0.51,0.53,0.54 0.55,0.56,0.57,0.59), mean=0.509, stddev=0.0247], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.96,0.97,0.98 0.99,1.0,1.0,1.0,1.0 1.1,1.1,1.1,1.1), mean=1.02, stddev=0.0227], bias-{mean,stddev}=0.001724,0.5097, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=6.97e+05, self-repaired-proportion=0.0582422, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.02,0.03,0.05 0.07,0.11,0.25,0.53,0.75 0.91,1.1,1.3,1.9), mean=0.336, stddev=0.284], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.03,0.06,0.11 0.14,0.24,0.47,0.78,0.89 0.94,0.97,0.98,1.0), mean=0.5, stddev=0.268], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.001,0.002 0.002,0.002,0.003,0.003,0.004 0.005,0.006,0.007,0.02), mean=0.0029, stddev=0.00183], oderiv-count=1.08659e+06
component name=prefinal-xent.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11303.2, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.02,0.03,0.04 0.06,0.10,0.23,0.50,0.70 0.85,1.1,1.2,1.8), mean=0.312, stddev=0.267], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0.11,0.14,0.17 0.20,0.24,0.34,0.46,0.50 0.54,0.58,0.60,0.71), mean=0.348, stddev=0.118]
component name=prefinal-xent.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000233513, l2-regularize=0.008, max-change=0.75, params-rms=0.01485, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.48,0.48,0.48,0.48 0.48,0.48,0.48,0.48,0.48 0.48,0.48,0.48,0.48), mean=0.475, stddev=0], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.18,0.19,0.20 0.21,0.22,0.24,0.26,0.26 0.27,0.27,0.28,0.29), mean=0.237, stddev=0.0206], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=11303.2, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-7e-08,-6e-08,-4e-08,-4e-08 -3e-08,-2e-08,-3e-09,1e-08,3e-08 4e-08,5e-08,5e-08,6e-08), mean=-2.45e-09, stddev=2.22e-08], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.42,0.45,0.45,0.47 0.48,0.50,0.53,0.56,0.58 0.59,0.60,0.61,0.61), mean=0.529, stddev=0.0381]
component name=output-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=2824, learning-rate=0.00116756, l2-regularize=0.002, learning-rate-factor=5, max-change=1.5, linear-params-rms=0.03031, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.02,0.02,0.03 0.05,0.11,0.44,0.65,0.75 0.82,0.88,0.91,1.2), mean=0.408, stddev=0.262], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.2,1.2,1.3,1.3 1.3,1.4,1.6,1.8,1.8 1.8,1.9,1.9,2.0), mean=1.6, stddev=0.174], bias-{mean,stddev}=1.152e-08,0.07387, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-xent.log-softmax type=LogSoftmaxComponent, dim=2824, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,3e-07,4e-05,0.0001 0.0002,0.0003,0.0007,0.001,0.002 0.003,0.004,0.004,0.04), mean=0.000963, stddev=0.00118], oderiv-count=1.1287e+06
nnet3-show-progress --use-gpu=no telugu_exp/chain_cleaned_1d/tdnn1d_sp/4.mdl telugu_exp/chain_cleaned_1d/tdnn1d_sp/5.mdl 
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:SelectGpuId():cu-device.cc:168) Manually selected to compute on CPU.
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:4.0864 tdnnf2.linear:2.54343 tdnnf2.affine:3.69103 tdnnf3.linear:2.30195 tdnnf3.affine:3.43473 tdnnf4.linear:2.11275 tdnnf4.affine:3.47629 tdnnf5.linear:1.7103 tdnnf5.affine:3.28505 tdnnf6.linear:1.98673 tdnnf6.affine:3.28001 tdnnf7.linear:1.93683 tdnnf7.affine:3.35846 tdnnf8.linear:1.87871 tdnnf8.affine:3.36957 tdnnf9.linear:1.81877 tdnnf9.affine:3.38513 tdnnf10.linear:1.74098 tdnnf10.affine:3.31314 tdnnf11.linear:1.67841 tdnnf11.affine:3.33653 tdnnf12.linear:1.64814 tdnnf12.affine:3.27827 tdnnf13.linear:1.57265 tdnnf13.affine:3.25463 prefinal-l:1.71339 prefinal-chain.affine:3.2876 prefinal-chain.linear:1.44053 output.affine:2.04246 prefinal-xent.affine:3.19864 prefinal-xent.linear:1.2547 output-xent.affine:2.77824 ]
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:23.2727 tdnnf2.linear:8.7656 tdnnf2.affine:22.8194 tdnnf3.linear:7.81464 tdnnf3.affine:22.9966 tdnnf4.linear:7.3495 tdnnf4.affine:24.039 tdnnf5.linear:6.60388 tdnnf5.affine:23.4369 tdnnf6.linear:7.05108 tdnnf6.affine:22.9466 tdnnf7.linear:7.07962 tdnnf7.affine:23.7036 tdnnf8.linear:7.06355 tdnnf8.affine:23.8879 tdnnf9.linear:7.02607 tdnnf9.affine:23.6428 tdnnf10.linear:6.95803 tdnnf10.affine:23.6841 tdnnf11.linear:6.8959 tdnnf11.affine:23.9607 tdnnf12.linear:6.92282 tdnnf12.affine:23.5983 tdnnf13.linear:6.89228 tdnnf13.affine:23.4955 prefinal-l:9.0066 prefinal-chain.affine:23.6831 prefinal-chain.linear:8.95064 output.affine:11.9025 prefinal-xent.affine:23.0649 prefinal-xent.linear:7.60482 output-xent.affine:26.0649 ]
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.155339 tdnnf2.linear:0.280212 tdnnf2.affine:0.142295 tdnnf3.linear:0.280655 tdnnf3.affine:0.131692 tdnnf4.linear:0.270043 tdnnf4.affine:0.127595 tdnnf5.linear:0.238512 tdnnf5.affine:0.123517 tdnnf6.linear:0.263068 tdnnf6.affine:0.126197 tdnnf7.linear:0.256171 tdnnf7.affine:0.125111 tdnnf8.linear:0.249134 tdnnf8.affine:0.124533 tdnnf9.linear:0.242587 tdnnf9.affine:0.126518 tdnnf10.linear:0.234319 tdnnf10.affine:0.123489 tdnnf11.linear:0.227378 tdnnf11.affine:0.122949 tdnnf12.linear:0.223072 tdnnf12.affine:0.122658 tdnnf13.linear:0.214126 tdnnf13.affine:0.122306 prefinal-l:0.176576 prefinal-chain.affine:0.122511 prefinal-chain.linear:0.146872 output.affine:0.180079 prefinal-xent.affine:0.122063 prefinal-xent.linear:0.146215 output-xent.affine:0.110045 ]
# Accounting: time=0 threads=1
# Ended (code 0) at Thu Jul 21 11:11:08 EDT 2022, elapsed time 0 seconds
