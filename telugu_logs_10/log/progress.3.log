# nnet3-am-info telugu_exp/chain_cleaned_1d/tdnn1d_sp/3.mdl && nnet3-show-progress --use-gpu=no telugu_exp/chain_cleaned_1d/tdnn1d_sp/2.mdl telugu_exp/chain_cleaned_1d/tdnn1d_sp/3.mdl 
# Started at Wed Jul 20 21:54:37 EDT 2022
#
nnet3-am-info telugu_exp/chain_cleaned_1d/tdnn1d_sp/3.mdl 
input-dim: 40
ivector-dim: 100
num-pdfs: 2824
prior-dimension: 0
# Nnet info follows.
left-context: 28
right-context: 28
num-parameters: 9032208
modulus: 1
input-node name=ivector dim=100
input-node name=input dim=40
component-node name=lda component=lda input=Append(Offset(input, -1), input, Offset(input, 1), ReplaceIndex(ivector, t, 0)) input-dim=220 output-dim=220
component-node name=tdnn1.affine component=tdnn1.affine input=lda input-dim=220 output-dim=1024
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=1024 output-dim=1024
component-node name=tdnn1.batchnorm component=tdnn1.batchnorm input=tdnn1.relu input-dim=1024 output-dim=1024
component-node name=tdnn1.dropout component=tdnn1.dropout input=tdnn1.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.linear component=tdnnf2.linear input=tdnn1.dropout input-dim=1024 output-dim=128
component-node name=tdnnf2.affine component=tdnnf2.affine input=tdnnf2.linear input-dim=128 output-dim=1024
component-node name=tdnnf2.relu component=tdnnf2.relu input=tdnnf2.affine input-dim=1024 output-dim=1024
component-node name=tdnnf2.batchnorm component=tdnnf2.batchnorm input=tdnnf2.relu input-dim=1024 output-dim=1024
component-node name=tdnnf2.dropout component=tdnnf2.dropout input=tdnnf2.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.noop component=tdnnf2.noop input=Sum(Scale(0.66, tdnn1.dropout), tdnnf2.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf3.linear component=tdnnf3.linear input=tdnnf2.noop input-dim=1024 output-dim=128
component-node name=tdnnf3.affine component=tdnnf3.affine input=tdnnf3.linear input-dim=128 output-dim=1024
component-node name=tdnnf3.relu component=tdnnf3.relu input=tdnnf3.affine input-dim=1024 output-dim=1024
component-node name=tdnnf3.batchnorm component=tdnnf3.batchnorm input=tdnnf3.relu input-dim=1024 output-dim=1024
component-node name=tdnnf3.dropout component=tdnnf3.dropout input=tdnnf3.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf3.noop component=tdnnf3.noop input=Sum(Scale(0.66, tdnnf2.noop), tdnnf3.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf4.linear component=tdnnf4.linear input=tdnnf3.noop input-dim=1024 output-dim=128
component-node name=tdnnf4.affine component=tdnnf4.affine input=tdnnf4.linear input-dim=128 output-dim=1024
component-node name=tdnnf4.relu component=tdnnf4.relu input=tdnnf4.affine input-dim=1024 output-dim=1024
component-node name=tdnnf4.batchnorm component=tdnnf4.batchnorm input=tdnnf4.relu input-dim=1024 output-dim=1024
component-node name=tdnnf4.dropout component=tdnnf4.dropout input=tdnnf4.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf4.noop component=tdnnf4.noop input=Sum(Scale(0.66, tdnnf3.noop), tdnnf4.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf5.linear component=tdnnf5.linear input=tdnnf4.noop input-dim=1024 output-dim=128
component-node name=tdnnf5.affine component=tdnnf5.affine input=tdnnf5.linear input-dim=128 output-dim=1024
component-node name=tdnnf5.relu component=tdnnf5.relu input=tdnnf5.affine input-dim=1024 output-dim=1024
component-node name=tdnnf5.batchnorm component=tdnnf5.batchnorm input=tdnnf5.relu input-dim=1024 output-dim=1024
component-node name=tdnnf5.dropout component=tdnnf5.dropout input=tdnnf5.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf5.noop component=tdnnf5.noop input=Sum(Scale(0.66, tdnnf4.noop), tdnnf5.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf6.linear component=tdnnf6.linear input=tdnnf5.noop input-dim=1024 output-dim=128
component-node name=tdnnf6.affine component=tdnnf6.affine input=tdnnf6.linear input-dim=128 output-dim=1024
component-node name=tdnnf6.relu component=tdnnf6.relu input=tdnnf6.affine input-dim=1024 output-dim=1024
component-node name=tdnnf6.batchnorm component=tdnnf6.batchnorm input=tdnnf6.relu input-dim=1024 output-dim=1024
component-node name=tdnnf6.dropout component=tdnnf6.dropout input=tdnnf6.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf6.noop component=tdnnf6.noop input=Sum(Scale(0.66, tdnnf5.noop), tdnnf6.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf7.linear component=tdnnf7.linear input=tdnnf6.noop input-dim=1024 output-dim=128
component-node name=tdnnf7.affine component=tdnnf7.affine input=tdnnf7.linear input-dim=128 output-dim=1024
component-node name=tdnnf7.relu component=tdnnf7.relu input=tdnnf7.affine input-dim=1024 output-dim=1024
component-node name=tdnnf7.batchnorm component=tdnnf7.batchnorm input=tdnnf7.relu input-dim=1024 output-dim=1024
component-node name=tdnnf7.dropout component=tdnnf7.dropout input=tdnnf7.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf7.noop component=tdnnf7.noop input=Sum(Scale(0.66, tdnnf6.noop), tdnnf7.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf8.linear component=tdnnf8.linear input=tdnnf7.noop input-dim=1024 output-dim=128
component-node name=tdnnf8.affine component=tdnnf8.affine input=tdnnf8.linear input-dim=128 output-dim=1024
component-node name=tdnnf8.relu component=tdnnf8.relu input=tdnnf8.affine input-dim=1024 output-dim=1024
component-node name=tdnnf8.batchnorm component=tdnnf8.batchnorm input=tdnnf8.relu input-dim=1024 output-dim=1024
component-node name=tdnnf8.dropout component=tdnnf8.dropout input=tdnnf8.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf8.noop component=tdnnf8.noop input=Sum(Scale(0.66, tdnnf7.noop), tdnnf8.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf9.linear component=tdnnf9.linear input=tdnnf8.noop input-dim=1024 output-dim=128
component-node name=tdnnf9.affine component=tdnnf9.affine input=tdnnf9.linear input-dim=128 output-dim=1024
component-node name=tdnnf9.relu component=tdnnf9.relu input=tdnnf9.affine input-dim=1024 output-dim=1024
component-node name=tdnnf9.batchnorm component=tdnnf9.batchnorm input=tdnnf9.relu input-dim=1024 output-dim=1024
component-node name=tdnnf9.dropout component=tdnnf9.dropout input=tdnnf9.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf9.noop component=tdnnf9.noop input=Sum(Scale(0.66, tdnnf8.noop), tdnnf9.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf10.linear component=tdnnf10.linear input=tdnnf9.noop input-dim=1024 output-dim=128
component-node name=tdnnf10.affine component=tdnnf10.affine input=tdnnf10.linear input-dim=128 output-dim=1024
component-node name=tdnnf10.relu component=tdnnf10.relu input=tdnnf10.affine input-dim=1024 output-dim=1024
component-node name=tdnnf10.batchnorm component=tdnnf10.batchnorm input=tdnnf10.relu input-dim=1024 output-dim=1024
component-node name=tdnnf10.dropout component=tdnnf10.dropout input=tdnnf10.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf10.noop component=tdnnf10.noop input=Sum(Scale(0.66, tdnnf9.noop), tdnnf10.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf11.linear component=tdnnf11.linear input=tdnnf10.noop input-dim=1024 output-dim=128
component-node name=tdnnf11.affine component=tdnnf11.affine input=tdnnf11.linear input-dim=128 output-dim=1024
component-node name=tdnnf11.relu component=tdnnf11.relu input=tdnnf11.affine input-dim=1024 output-dim=1024
component-node name=tdnnf11.batchnorm component=tdnnf11.batchnorm input=tdnnf11.relu input-dim=1024 output-dim=1024
component-node name=tdnnf11.dropout component=tdnnf11.dropout input=tdnnf11.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf11.noop component=tdnnf11.noop input=Sum(Scale(0.66, tdnnf10.noop), tdnnf11.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf12.linear component=tdnnf12.linear input=tdnnf11.noop input-dim=1024 output-dim=128
component-node name=tdnnf12.affine component=tdnnf12.affine input=tdnnf12.linear input-dim=128 output-dim=1024
component-node name=tdnnf12.relu component=tdnnf12.relu input=tdnnf12.affine input-dim=1024 output-dim=1024
component-node name=tdnnf12.batchnorm component=tdnnf12.batchnorm input=tdnnf12.relu input-dim=1024 output-dim=1024
component-node name=tdnnf12.dropout component=tdnnf12.dropout input=tdnnf12.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf12.noop component=tdnnf12.noop input=Sum(Scale(0.66, tdnnf11.noop), tdnnf12.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf13.linear component=tdnnf13.linear input=tdnnf12.noop input-dim=1024 output-dim=128
component-node name=tdnnf13.affine component=tdnnf13.affine input=tdnnf13.linear input-dim=128 output-dim=1024
component-node name=tdnnf13.relu component=tdnnf13.relu input=tdnnf13.affine input-dim=1024 output-dim=1024
component-node name=tdnnf13.batchnorm component=tdnnf13.batchnorm input=tdnnf13.relu input-dim=1024 output-dim=1024
component-node name=tdnnf13.dropout component=tdnnf13.dropout input=tdnnf13.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf13.noop component=tdnnf13.noop input=Sum(Scale(0.66, tdnnf12.noop), tdnnf13.dropout) input-dim=1024 output-dim=1024
component-node name=prefinal-l component=prefinal-l input=tdnnf13.noop input-dim=1024 output-dim=256
component-node name=prefinal-chain.affine component=prefinal-chain.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-chain.relu component=prefinal-chain.relu input=prefinal-chain.affine input-dim=1024 output-dim=1024
component-node name=prefinal-chain.batchnorm1 component=prefinal-chain.batchnorm1 input=prefinal-chain.relu input-dim=1024 output-dim=1024
component-node name=prefinal-chain.linear component=prefinal-chain.linear input=prefinal-chain.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-chain.batchnorm2 component=prefinal-chain.batchnorm2 input=prefinal-chain.linear input-dim=256 output-dim=256
component-node name=output.affine component=output.affine input=prefinal-chain.batchnorm2 input-dim=256 output-dim=2824
output-node name=output input=output.affine dim=2824 objective=linear
component-node name=prefinal-xent.affine component=prefinal-xent.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-xent.relu component=prefinal-xent.relu input=prefinal-xent.affine input-dim=1024 output-dim=1024
component-node name=prefinal-xent.batchnorm1 component=prefinal-xent.batchnorm1 input=prefinal-xent.relu input-dim=1024 output-dim=1024
component-node name=prefinal-xent.linear component=prefinal-xent.linear input=prefinal-xent.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-xent.batchnorm2 component=prefinal-xent.batchnorm2 input=prefinal-xent.linear input-dim=256 output-dim=256
component-node name=output-xent.affine component=output-xent.affine input=prefinal-xent.batchnorm2 input-dim=256 output-dim=2824
component-node name=output-xent.log-softmax component=output-xent.log-softmax input=output-xent.affine input-dim=2824 output-dim=2824
output-node name=output-xent input=output-xent.log-softmax dim=2824 objective=linear
component name=lda type=FixedAffineComponent, input-dim=220, output-dim=220, linear-params-rms=0.005747, bias-{mean,stddev}=-0.001006,0.01285
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=220, output-dim=1024, learning-rate=0.000918254, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.04792, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.49,0.60,0.62,0.63 0.64,0.66,0.70,0.74,0.78 0.82,0.92,0.96,1.2), mean=0.708, stddev=0.0683], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.4,1.4 1.4,1.4,1.5,1.6,1.7 1.8,1.9,1.9,2.2), mean=1.53, stddev=0.126], bias-{mean,stddev}=-0.0119,0.6305, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=3.1e+06, self-repaired-proportion=0.806747, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.05,0.57,0.87 1.1,1.4,1.6,2.4), mean=0.27, stddev=0.399], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.47,1.0,1.0 1.0,1.0,1.0,1.0), mean=0.488, stddev=0.464], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.03,0.03,0.03 0.04,0.05,0.08,0.09,0.11 0.12,0.14,0.16,0.23), mean=0.0749, stddev=0.0288], oderiv-count=4.58466e+06
component name=tdnn1.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=46698.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.05,0.52,0.81 1.1,1.3,1.4,2.3), mean=0.249, stddev=0.37], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.06,0.10,0.12 0.13,0.14,0.15,0.22), mean=0.0536, stddev=0.0503]
component name=tdnn1.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf2.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000918254, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.02559, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.1,1.2,1.2,1.2 1.2,1.2,1.2,1.2,1.2 1.2,1.2,1.2,1.2), mean=1.16, stddev=0.00289], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.21,0.22,0.23 0.24,0.25,0.28,0.32,0.34 0.37,0.39,0.41,0.48), mean=0.286, stddev=0.0428], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000918254, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.04327, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.55,0.59,0.61,0.63 0.64,0.66,0.69,0.72,0.74 0.76,0.78,0.80,0.90), mean=0.691, stddev=0.0413], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.3,1.3,1.3,1.3 1.3,1.4,1.4,1.4,1.4 1.4,1.4,1.5,1.5), mean=1.38, stddev=0.0318], bias-{mean,stddev}=-0.003951,0.6473, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=3e+06, self-repaired-proportion=0.0159496, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.04,0.06,0.10 0.15,0.21,0.45,0.80,1.0 1.2,1.4,1.6,2.6), mean=0.521, stddev=0.356], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.07,0.09,0.15 0.19,0.27,0.50,0.72,0.80 0.87,0.92,0.94,0.99), mean=0.497, stddev=0.225], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.003,0.004,0.006,0.008 0.01,0.01,0.01,0.05), mean=0.00485, stddev=0.00342], oderiv-count=4.5583e+06
component name=tdnnf2.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=46186.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.05,0.07,0.12 0.16,0.23,0.46,0.78,0.98 1.1,1.3,1.5,2.4), mean=0.52, stddev=0.33], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.22,0.27,0.37 0.45,0.53,0.68,0.82,0.90 0.97,1.0,1.1,1.3), mean=0.676, stddev=0.183]
component name=tdnnf2.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf2.noop type=NoOpComponent, dim=1024
component name=tdnnf3.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000918254, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.022, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.99,0.99,0.99,0.99 0.99,0.99,1.0,1.0,1.0 1.0,1.0,1.0,1.0), mean=0.995, stddev=0.00224], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.18,0.20,0.21,0.21 0.22,0.23,0.25,0.27,0.28 0.29,0.31,0.31,0.34), mean=0.248, stddev=0.0238], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000918254, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.04271, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.59,0.61,0.62,0.63 0.64,0.65,0.68,0.71,0.72 0.74,0.75,0.76,0.80), mean=0.683, stddev=0.0331], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.3,1.3,1.3,1.3 1.3,1.3,1.4,1.4,1.4 1.4,1.4,1.4,1.5), mean=1.37, stddev=0.0338], bias-{mean,stddev}=-0.007508,0.6529, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=3.14e+06, self-repaired-proportion=0.00193517, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.10,0.12,0.17 0.22,0.30,0.55,0.88,1.1 1.3,1.5,1.6,2.4), mean=0.611, stddev=0.349], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.11,0.14,0.19 0.23,0.31,0.50,0.67,0.76 0.82,0.85,0.89,0.96), mean=0.495, stddev=0.193], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.002,0.002 0.002,0.002,0.003,0.004,0.004 0.005,0.006,0.007,0.02), mean=0.00288, stddev=0.00111], oderiv-count=4.42517e+06
component name=tdnnf3.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=45674.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.11,0.14,0.19 0.23,0.31,0.55,0.86,1.1 1.2,1.4,1.5,2.3), mean=0.602, stddev=0.326], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.31,0.42,0.46,0.52 0.59,0.67,0.84,1.0,1.1 1.1,1.2,1.2,1.5), mean=0.837, stddev=0.187]
component name=tdnnf3.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf3.noop type=NoOpComponent, dim=1024
component name=tdnnf4.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000918254, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.02055, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.92,0.92,0.93,0.93 0.93,0.93,0.93,0.93,0.93 0.93,0.93,0.93,0.93), mean=0.93, stddev=0.00207], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.17,0.19,0.20,0.20 0.21,0.22,0.23,0.25,0.25 0.26,0.27,0.28,0.34), mean=0.232, stddev=0.0189], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000918254, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.04247, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.56,0.60,0.61,0.63 0.64,0.65,0.68,0.71,0.72 0.73,0.74,0.76,0.79), mean=0.679, stddev=0.0326], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.2,1.3,1.3,1.3 1.3,1.3,1.4,1.4,1.4 1.4,1.4,1.4,1.4), mean=1.36, stddev=0.0319], bias-{mean,stddev}=0.007546,0.7093, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=1.01e+06, self-repaired-proportion=0.00497471, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.10,0.13,0.19 0.26,0.35,0.61,0.94,1.2 1.4,1.6,1.8,2.8), mean=0.677, stddev=0.386], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.12,0.13,0.18 0.24,0.32,0.50,0.68,0.76 0.82,0.86,0.89,0.97), mean=0.497, stddev=0.192], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.003 0.003,0.003,0.004,0.005,0.006 0.007,0.008,0.009,0.04), mean=0.00424, stddev=0.00172], oderiv-count=1.47525e+06
component name=tdnnf4.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=15225, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.10,0.14,0.20 0.27,0.36,0.59,0.90,1.2 1.4,1.5,1.7,2.6), mean=0.662, stddev=0.359], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.19,0.45,0.49,0.59 0.66,0.75,0.92,1.1,1.2 1.3,1.3,1.4,1.5), mean=0.926, stddev=0.206]
component name=tdnnf4.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf4.noop type=NoOpComponent, dim=1024
component name=tdnnf5.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000918254, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=0, linear-params-rms=0.02597, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.83,0.83,0.83,0.83 0.83,0.83,0.83,0.83,0.83 0.83,0.83,0.84,0.84), mean=0.831, stddev=0.00191], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.21,0.25,0.25,0.26 0.27,0.28,0.29,0.31,0.32 0.33,0.33,0.34,0.36), mean=0.293, stddev=0.0201], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000918254, l2-regularize=0.008, max-change=0.75, time-offsets=0, linear-params-rms=0.05953, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.52,0.57,0.58,0.60 0.62,0.63,0.67,0.71,0.74 0.75,0.77,0.77,0.81), mean=0.672, stddev=0.0455], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.8,1.8,1.8,1.8 1.8,1.9,1.9,1.9,2.0 2.0,2.0,2.0,2.0), mean=1.9, stddev=0.0425], bias-{mean,stddev}=-0.0008366,0.6771, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=1.02e+06, self-repaired-proportion=0.0120691, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.06,0.10,0.15 0.20,0.28,0.51,0.89,1.1 1.3,1.6,1.7,2.3), mean=0.598, stddev=0.378], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0008,0.09,0.12,0.16 0.22,0.30,0.48,0.69,0.77 0.83,0.89,0.92,0.99), mean=0.492, stddev=0.207], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.003 0.003,0.003,0.004,0.006,0.007 0.008,0.01,0.01,0.09), mean=0.00476, stddev=0.00366], oderiv-count=1.57142e+06
component name=tdnnf5.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=15225, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(8e-05,0.07,0.10,0.15 0.19,0.28,0.50,0.85,1.0 1.3,1.5,1.6,2.2), mean=0.579, stddev=0.354], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.30,0.35,0.45 0.52,0.60,0.79,0.98,1.1 1.1,1.2,1.3,1.5), mean=0.79, stddev=0.216]
component name=tdnnf5.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf5.noop type=NoOpComponent, dim=1024
component name=tdnnf6.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000918254, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01948, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.88,0.88,0.88,0.88 0.88,0.88,0.88,0.88,0.88 0.88,0.88,0.88,0.89), mean=0.881, stddev=0.00179], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.17,0.18,0.19,0.19 0.20,0.21,0.22,0.23,0.24 0.25,0.25,0.26,0.29), mean=0.22, stddev=0.0161], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000918254, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.04246, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.58,0.60,0.61,0.63 0.64,0.65,0.68,0.70,0.72 0.73,0.74,0.75,0.77), mean=0.679, stddev=0.0308], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.3,1.3,1.3,1.3 1.3,1.3,1.4,1.4,1.4 1.4,1.4,1.4,1.5), mean=1.36, stddev=0.0293], bias-{mean,stddev}=-0.02131,0.644, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.6e+05, self-repaired-proportion=0.00100255, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.13,0.16,0.22 0.29,0.39,0.64,0.96,1.1 1.3,1.5,1.6,2.6), mean=0.683, stddev=0.349], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.13,0.15,0.20 0.26,0.33,0.49,0.65,0.72 0.77,0.81,0.83,0.95), mean=0.487, stddev=0.172], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.003,0.003,0.004,0.005 0.006,0.007,0.008,0.01), mean=0.00354, stddev=0.00116], oderiv-count=1.4891e+06
component name=tdnnf6.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=14713, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.14,0.16,0.22 0.29,0.39,0.62,0.92,1.1 1.2,1.4,1.5,2.4), mean=0.666, stddev=0.327], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.31,0.48,0.52,0.62 0.70,0.80,0.97,1.1,1.2 1.3,1.4,1.4,1.7), mean=0.968, stddev=0.209]
component name=tdnnf6.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf6.noop type=NoOpComponent, dim=1024
component name=tdnnf7.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000918254, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01949, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.88,0.88,0.88,0.88 0.88,0.88,0.88,0.88,0.88 0.88,0.88,0.88,0.88), mean=0.882, stddev=0.0015], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.17,0.18,0.19,0.19 0.20,0.21,0.22,0.23,0.24 0.25,0.25,0.26,0.31), mean=0.22, stddev=0.0163], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000918254, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.04256, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.56,0.61,0.62,0.63 0.64,0.65,0.68,0.71,0.72 0.73,0.75,0.75,0.78), mean=0.68, stddev=0.0314], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.3,1.3,1.3,1.3 1.3,1.3,1.4,1.4,1.4 1.4,1.4,1.4,1.4), mean=1.36, stddev=0.03], bias-{mean,stddev}=0.009939,0.6871, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.5e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.14,0.17,0.22 0.27,0.38,0.63,0.99,1.2 1.4,1.7,1.9,2.5), mean=0.706, stddev=0.382], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.14,0.16,0.21 0.25,0.32,0.49,0.66,0.73 0.79,0.85,0.89,0.93), mean=0.494, stddev=0.182], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.003,0.003,0.004,0.005 0.006,0.007,0.007,0.01), mean=0.00351, stddev=0.00119], oderiv-count=1.41718e+06
component name=tdnnf7.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=14201, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.14,0.18,0.23 0.27,0.38,0.62,0.95,1.2 1.4,1.6,1.8,2.4), mean=0.687, stddev=0.359], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.46,0.50,0.54,0.61 0.69,0.79,0.97,1.1,1.2 1.3,1.4,1.4,1.6), mean=0.971, stddev=0.212]
component name=tdnnf7.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf7.noop type=NoOpComponent, dim=1024
component name=tdnnf8.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000918254, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01948, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.88,0.88,0.88,0.88 0.88,0.88,0.88,0.88,0.88 0.88,0.88,0.88,0.88), mean=0.882, stddev=0.00146], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.18,0.18,0.19 0.20,0.21,0.22,0.23,0.24 0.25,0.26,0.26,0.32), mean=0.22, stddev=0.0175], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000918254, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.04252, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.57,0.61,0.62,0.63 0.64,0.65,0.68,0.71,0.72 0.73,0.75,0.75,0.80), mean=0.68, stddev=0.0313], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.3,1.3,1.3,1.3 1.3,1.3,1.4,1.4,1.4 1.4,1.4,1.4,1.5), mean=1.36, stddev=0.0306], bias-{mean,stddev}=-0.01939,0.6984, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.85e+05, self-repaired-proportion=0.000398394, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.13,0.16,0.20 0.27,0.37,0.64,0.97,1.2 1.4,1.7,1.9,2.3), mean=0.696, stddev=0.377], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.13,0.15,0.19 0.24,0.32,0.49,0.65,0.72 0.78,0.85,0.88,0.93), mean=0.488, stddev=0.181], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.003,0.003,0.004,0.005 0.006,0.007,0.007,0.01), mean=0.00352, stddev=0.00122], oderiv-count=1.39016e+06
component name=tdnnf8.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=13689, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.14,0.16,0.21 0.27,0.36,0.63,0.93,1.1 1.3,1.6,1.8,2.2), mean=0.676, stddev=0.353], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.47,0.52,0.59 0.67,0.77,0.96,1.2,1.3 1.3,1.4,1.4,1.6), mean=0.96, stddev=0.221]
component name=tdnnf8.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf8.noop type=NoOpComponent, dim=1024
component name=tdnnf9.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000918254, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01958, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.88,0.88,0.88,0.88 0.88,0.89,0.89,0.89,0.89 0.89,0.89,0.89,0.89), mean=0.886, stddev=0.0014], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.18,0.19,0.19 0.20,0.21,0.22,0.24,0.24 0.25,0.26,0.27,0.31), mean=0.221, stddev=0.0178], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000918254, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.04258, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.58,0.60,0.62,0.63 0.64,0.66,0.68,0.71,0.72 0.73,0.74,0.75,0.79), mean=0.681, stddev=0.0306], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.3,1.3,1.3,1.3 1.3,1.3,1.4,1.4,1.4 1.4,1.4,1.4,1.5), mean=1.36, stddev=0.0324], bias-{mean,stddev}=-0.009255,0.6823, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.05e+05, self-repaired-proportion=0.000823607, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.13,0.16,0.20 0.28,0.38,0.64,0.98,1.2 1.4,1.7,1.7,2.5), mean=0.699, stddev=0.367], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.13,0.16,0.19 0.25,0.32,0.49,0.65,0.73 0.78,0.83,0.86,0.93), mean=0.489, stddev=0.178], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.003,0.003,0.004,0.005 0.006,0.007,0.008,0.01), mean=0.00346, stddev=0.00127], oderiv-count=1.3276e+06
component name=tdnnf9.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=13177, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.13,0.16,0.21 0.28,0.39,0.63,0.94,1.1 1.3,1.6,1.6,2.4), mean=0.68, stddev=0.345], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.29,0.46,0.51,0.59 0.68,0.78,0.96,1.2,1.2 1.3,1.4,1.5,1.7), mean=0.963, stddev=0.217]
component name=tdnnf9.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf9.noop type=NoOpComponent, dim=1024
component name=tdnnf10.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000918254, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01965, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.89,0.89,0.89,0.89 0.89,0.89,0.89,0.89,0.89 0.89,0.89,0.89,0.89), mean=0.889, stddev=0.00127], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.18,0.19,0.19 0.20,0.21,0.22,0.24,0.24 0.25,0.26,0.27,0.30), mean=0.222, stddev=0.0181], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000918254, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.04262, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.59,0.61,0.62,0.63 0.64,0.66,0.68,0.71,0.72 0.73,0.75,0.76,0.81), mean=0.681, stddev=0.0308], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.2,1.3,1.3,1.3 1.3,1.3,1.4,1.4,1.4 1.4,1.4,1.4,1.5), mean=1.36, stddev=0.0329], bias-{mean,stddev}=0.04468,0.6856, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.67e+05, self-repaired-proportion=0.000737347, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.15,0.18,0.22 0.29,0.39,0.66,1.0,1.2 1.4,1.6,1.9,2.4), mean=0.726, stddev=0.384], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.14,0.17,0.21 0.27,0.33,0.50,0.68,0.74 0.79,0.84,0.88,0.95), mean=0.503, stddev=0.181], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.002,0.002,0.002 0.002,0.002,0.003,0.004,0.005 0.005,0.006,0.007,0.01), mean=0.00336, stddev=0.00113], oderiv-count=1.24683e+06
component name=tdnnf10.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=12665, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.16,0.18,0.23 0.30,0.39,0.64,0.99,1.2 1.4,1.6,1.8,2.2), mean=0.706, stddev=0.36], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.33,0.52,0.54,0.61 0.69,0.78,0.97,1.2,1.2 1.3,1.4,1.5,1.6), mean=0.971, stddev=0.216]
component name=tdnnf10.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf10.noop type=NoOpComponent, dim=1024
component name=tdnnf11.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000918254, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01965, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.89,0.89,0.89,0.89 0.89,0.89,0.89,0.89,0.89 0.89,0.89,0.89,0.89), mean=0.889, stddev=0.00136], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.18,0.19,0.19 0.20,0.21,0.22,0.24,0.24 0.25,0.26,0.27,0.31), mean=0.222, stddev=0.018], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000918254, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.04257, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.57,0.61,0.61,0.63 0.64,0.65,0.68,0.71,0.72 0.73,0.74,0.75,0.80), mean=0.68, stddev=0.0317], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.3,1.3,1.3,1.3 1.3,1.3,1.4,1.4,1.4 1.4,1.4,1.4,1.4), mean=1.36, stddev=0.0321], bias-{mean,stddev}=-0.03682,0.7025, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.35e+05, self-repaired-proportion=0.00155993, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.14,0.16,0.21 0.27,0.36,0.63,1.0,1.2 1.4,1.6,1.7,2.3), mean=0.691, stddev=0.371], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.14,0.16,0.21 0.24,0.31,0.49,0.65,0.74 0.79,0.82,0.84,0.96), mean=0.484, stddev=0.182], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.003,0.003,0.004,0.005 0.006,0.006,0.007,0.01), mean=0.00343, stddev=0.00109], oderiv-count=1.21582e+06
component name=tdnnf11.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=12153, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.15,0.16,0.22 0.28,0.36,0.62,0.96,1.2 1.3,1.5,1.6,2.1), mean=0.673, stddev=0.348], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.37,0.47,0.49,0.59 0.67,0.76,0.95,1.1,1.2 1.3,1.4,1.4,1.6), mean=0.946, stddev=0.215]
component name=tdnnf11.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf11.noop type=NoOpComponent, dim=1024
component name=tdnnf12.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000918254, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01993, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.90,0.90,0.90,0.90 0.90,0.90,0.90,0.90,0.90 0.90,0.90,0.90,0.91), mean=0.902, stddev=0.00127], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.19,0.19,0.20 0.20,0.21,0.22,0.24,0.25 0.25,0.26,0.27,0.32), mean=0.225, stddev=0.018], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000918254, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.04263, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.58,0.62,0.62,0.63 0.64,0.66,0.68,0.71,0.72 0.73,0.74,0.75,0.78), mean=0.681, stddev=0.0299], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.3,1.3,1.3,1.3 1.3,1.3,1.4,1.4,1.4 1.4,1.4,1.4,1.5), mean=1.36, stddev=0.0329], bias-{mean,stddev}=-0.01849,0.6831, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.89e+05, self-repaired-proportion=0.000926528, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.13,0.17,0.23 0.30,0.38,0.63,0.98,1.2 1.4,1.6,1.8,2.4), mean=0.701, stddev=0.369], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.14,0.16,0.21 0.26,0.33,0.48,0.65,0.73 0.78,0.83,0.87,0.94), mean=0.488, stddev=0.176], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.002,0.002,0.002 0.002,0.003,0.003,0.004,0.004 0.005,0.006,0.007,0.01), mean=0.00332, stddev=0.000989], oderiv-count=1.17403e+06
component name=tdnnf12.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11641, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.14,0.18,0.24 0.31,0.39,0.62,0.95,1.1 1.3,1.6,1.7,2.2), mean=0.685, stddev=0.345], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.39,0.49,0.54,0.63 0.69,0.79,0.95,1.1,1.2 1.3,1.4,1.4,1.6), mean=0.954, stddev=0.203]
component name=tdnnf12.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf12.noop type=NoOpComponent, dim=1024
component name=tdnnf13.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000918254, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.02019, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.91,0.91,0.91,0.91 0.91,0.91,0.91,0.91,0.91 0.92,0.92,0.92,0.92), mean=0.913, stddev=0.00112], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.17,0.19,0.19,0.20 0.20,0.21,0.23,0.24,0.25 0.26,0.27,0.27,0.30), mean=0.228, stddev=0.0181], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000918254, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.04267, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.54,0.61,0.62,0.63 0.64,0.66,0.68,0.71,0.72 0.73,0.74,0.76,0.80), mean=0.682, stddev=0.0314], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.3,1.3,1.3,1.3 1.3,1.3,1.4,1.4,1.4 1.4,1.4,1.4,1.5), mean=1.36, stddev=0.0336], bias-{mean,stddev}=-0.00901,0.6775, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.29e+05, self-repaired-proportion=0.00195312, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.17,0.21,0.25 0.31,0.41,0.66,1.0,1.2 1.4,1.6,1.8,2.2), mean=0.726, stddev=0.363], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0009,0.16,0.18,0.22 0.26,0.33,0.48,0.65,0.72 0.77,0.82,0.85,0.90), mean=0.49, stddev=0.169], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.002,0.002,0.002 0.002,0.002,0.003,0.004,0.004 0.005,0.005,0.006,0.07), mean=0.00323, stddev=0.00291], oderiv-count=1.12082e+06
component name=tdnnf13.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11129, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0005,0.18,0.22,0.26 0.32,0.42,0.66,0.99,1.2 1.4,1.5,1.7,2.1), mean=0.712, stddev=0.339], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.53,0.59,0.66 0.73,0.82,0.99,1.2,1.3 1.3,1.4,1.5,1.7), mean=0.991, stddev=0.208]
component name=tdnnf13.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf13.noop type=NoOpComponent, dim=1024
component name=prefinal-l type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000918254, l2-regularize=0.008, max-change=0.75, params-rms=0.02701, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.86,0.86,0.86,0.86 0.86,0.86,0.86,0.87,0.87 0.87,0.87,0.87,0.87), mean=0.864, stddev=0.00136], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.36,0.38,0.38,0.39 0.40,0.41,0.43,0.45,0.46 0.47,0.48,0.49,0.51), mean=0.432, stddev=0.0242], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=0.000918254, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.04281, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.58,0.62,0.62,0.64 0.64,0.66,0.68,0.71,0.72 0.73,0.75,0.75,0.77), mean=0.684, stddev=0.03], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.3,1.3,1.3,1.3 1.3,1.3,1.4,1.4,1.4 1.4,1.4,1.4,1.5), mean=1.37, stddev=0.0297], bias-{mean,stddev}=-0.007861,0.6892, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.62e+05, self-repaired-proportion=0.00873058, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.07,0.11,0.16 0.23,0.32,0.54,0.91,1.1 1.3,1.7,1.8,2.3), mean=0.63, stddev=0.379], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.10,0.13,0.17 0.23,0.31,0.48,0.67,0.74 0.81,0.87,0.91,0.97), mean=0.485, stddev=0.196], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.002,0.002,0.002 0.003,0.003,0.004,0.005,0.006 0.007,0.008,0.01,0.07), mean=0.00444, stddev=0.00366], oderiv-count=1.11061e+06
component name=prefinal-chain.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11129, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.08,0.12,0.17 0.25,0.33,0.54,0.89,1.1 1.3,1.6,1.7,2.1), mean=0.622, stddev=0.354], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.37,0.43,0.52 0.61,0.68,0.86,1.0,1.1 1.2,1.3,1.3,1.7), mean=0.856, stddev=0.207]
component name=prefinal-chain.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000918254, l2-regularize=0.008, max-change=0.75, params-rms=0.02626, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.84,0.84,0.84,0.84 0.84,0.84,0.84,0.84,0.84 0.84,0.84,0.84,0.84), mean=0.84, stddev=0.00122], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.32,0.36,0.36,0.37 0.38,0.40,0.42,0.44,0.45 0.47,0.48,0.48,0.52), mean=0.419, stddev=0.0277], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=11129, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-5e-08,-5e-08,-5e-08,-3e-08 -3e-08,-2e-08,-3e-09,2e-08,3e-08 3e-08,4e-08,4e-08,7e-08), mean=-1.39e-09, stddev=2.13e-08], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.0,1.1,1.1,1.1 1.1,1.1,1.1,1.2,1.2 1.2,1.2,1.2,1.3), mean=1.15, stddev=0.0445]
component name=output.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=2824, learning-rate=0.000918254, l2-regularize=0.002, max-change=1.5, linear-params-rms=0.01866, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0007,0.009,0.03,0.09 0.15,0.21,0.29,0.36,0.39 0.43,0.46,0.48,1.2), mean=0.282, stddev=0.0987], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.84,0.86,0.87,0.88 0.91,0.94,0.99,1.0,1.1 1.1,1.1,1.1,1.2), mean=0.989, stddev=0.0623], bias-{mean,stddev}=0.0001083,0.05684, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=0.000918254, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.04147, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.56,0.59,0.60,0.61 0.62,0.64,0.66,0.69,0.70 0.71,0.73,0.74,0.77), mean=0.663, stddev=0.0318], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.2,1.2,1.3,1.3 1.3,1.3,1.3,1.3,1.4 1.4,1.4,1.4,1.5), mean=1.33, stddev=0.0309], bias-{mean,stddev}=0.001333,0.6677, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.68e+05, self-repaired-proportion=0.00844633, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-05,0.10,0.12,0.16 0.22,0.30,0.51,0.85,1.1 1.3,1.5,1.7,2.5), mean=0.593, stddev=0.356], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.11,0.13,0.18 0.24,0.31,0.48,0.68,0.78 0.84,0.90,0.93,1.0), mean=0.497, stddev=0.203], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0007,0.0009,0.001,0.001 0.001,0.001,0.002,0.002,0.002 0.002,0.003,0.003,0.03), mean=0.00174, stddev=0.00188], oderiv-count=1.13014e+06
component name=prefinal-xent.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11129, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-05,0.10,0.12,0.17 0.22,0.30,0.50,0.82,1.0 1.2,1.4,1.6,2.3), mean=0.575, stddev=0.333], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.36,0.42,0.49 0.52,0.61,0.75,0.90,0.98 1.1,1.1,1.2,1.5), mean=0.754, stddev=0.181]
component name=prefinal-xent.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000918254, l2-regularize=0.008, max-change=0.75, params-rms=0.02082, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.67,0.67,0.67,0.67 0.67,0.67,0.67,0.67,0.67 0.67,0.67,0.67,0.67), mean=0.666, stddev=0.000386], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.23,0.26,0.28,0.29 0.30,0.31,0.33,0.35,0.36 0.37,0.38,0.39,0.40), mean=0.332, stddev=0.0262], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=11129, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-5e-08,-4e-08,-3e-08,-3e-08 -2e-08,-1e-08,9e-10,2e-08,2e-08 3e-08,3e-08,4e-08,5e-08), mean=4.8e-10, stddev=1.7e-08], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.61,0.62,0.63,0.66 0.67,0.70,0.75,0.81,0.83 0.85,0.87,0.89,0.91), mean=0.752, stddev=0.061]
component name=output-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=2824, learning-rate=0.00459127, l2-regularize=0.002, learning-rate-factor=5, max-change=1.5, linear-params-rms=0.0401, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.04,0.04,0.06 0.13,0.27,0.63,0.82,0.92 1.0,1.1,1.1,1.4), mean=0.575, stddev=0.285], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.6,1.8,1.8,1.8 1.9,2.0,2.1,2.3,2.4 2.4,2.4,2.5,2.6), mean=2.12, stddev=0.165], bias-{mean,stddev}=1.82e-08,0.1082, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-xent.log-softmax type=LogSoftmaxComponent, dim=2824, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,2e-05,6e-05,0.0001 0.0002,0.0003,0.0007,0.001,0.002 0.003,0.004,0.004,0.04), mean=0.000982, stddev=0.00118], oderiv-count=1.1136e+06
nnet3-show-progress --use-gpu=no telugu_exp/chain_cleaned_1d/tdnn1d_sp/2.mdl telugu_exp/chain_cleaned_1d/tdnn1d_sp/3.mdl 
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:SelectGpuId():cu-device.cc:168) Manually selected to compute on CPU.
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:6.0117 tdnnf2.linear:3.13854 tdnnf2.affine:4.87621 tdnnf3.linear:2.88684 tdnnf3.affine:4.51902 tdnnf4.linear:2.62233 tdnnf4.affine:4.59862 tdnnf5.linear:2.18697 tdnnf5.affine:4.3131 tdnnf6.linear:2.48038 tdnnf6.affine:4.33303 tdnnf7.linear:2.45389 tdnnf7.affine:4.41882 tdnnf8.linear:2.40376 tdnnf8.affine:4.44214 tdnnf9.linear:2.37738 tdnnf9.affine:4.39473 tdnnf10.linear:2.3527 tdnnf10.affine:4.39288 tdnnf11.linear:2.33123 tdnnf11.affine:4.43449 tdnnf12.linear:2.35 tdnnf12.affine:4.36768 tdnnf13.linear:2.38207 tdnnf13.affine:4.3522 prefinal-l:2.59105 prefinal-chain.affine:4.36223 prefinal-chain.linear:2.07653 output.affine:4.40916 prefinal-xent.affine:4.26166 prefinal-xent.linear:1.86319 output-xent.affine:7.27057 ]
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:30.4075 tdnnf2.linear:13.1023 tdnnf2.affine:30.3306 tdnnf3.linear:11.2628 tdnnf3.affine:30.2445 tdnnf4.linear:10.5213 tdnnf4.affine:31.4343 tdnnf5.linear:9.40215 tdnnf5.affine:30.56 tdnnf6.linear:9.97214 tdnnf6.affine:29.9617 tdnnf7.linear:9.9771 tdnnf7.affine:30.9571 tdnnf8.linear:9.97374 tdnnf8.affine:31.2046 tdnnf9.linear:10.0271 tdnnf9.affine:30.8582 tdnnf10.linear:10.0633 tdnnf10.affine:30.9776 tdnnf11.linear:10.0608 tdnnf11.affine:31.3319 tdnnf12.linear:10.2061 tdnnf12.affine:30.8944 tdnnf13.linear:10.3351 tdnnf13.affine:30.7799 prefinal-l:13.8301 prefinal-chain.affine:31.0948 prefinal-chain.linear:13.4439 output.affine:16.148 prefinal-xent.affine:30.1228 prefinal-xent.linear:10.6597 output-xent.affine:34.5754 ]
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.175833 tdnnf2.linear:0.249232 tdnnf2.affine:0.142881 tdnnf3.linear:0.259085 tdnnf3.affine:0.13243 tdnnf4.linear:0.246467 tdnnf4.affine:0.129482 tdnnf5.linear:0.224087 tdnnf5.affine:0.124583 tdnnf6.linear:0.242886 tdnnf6.affine:0.128049 tdnnf7.linear:0.241302 tdnnf7.affine:0.126429 tdnnf8.linear:0.237108 tdnnf8.affine:0.126085 tdnnf9.linear:0.234869 tdnnf9.affine:0.126174 tdnnf10.linear:0.232687 tdnnf10.affine:0.125686 tdnnf11.linear:0.231429 tdnnf11.affine:0.125482 tdnnf12.linear:0.231733 tdnnf12.affine:0.125435 tdnnf13.linear:0.2344 tdnnf13.affine:0.125457 prefinal-l:0.190466 prefinal-chain.affine:0.124523 prefinal-chain.linear:0.15289 output.affine:0.310194 prefinal-xent.affine:0.124893 prefinal-xent.linear:0.162946 output-xent.affine:0.236846 ]
# Accounting: time=0 threads=1
# Ended (code 0) at Wed Jul 20 21:54:37 EDT 2022, elapsed time 0 seconds
