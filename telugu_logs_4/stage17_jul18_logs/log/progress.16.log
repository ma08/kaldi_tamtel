# nnet3-am-info telugu_exp/chain_cleaned_1d/tdnn1d_sp/16.mdl && nnet3-show-progress --use-gpu=no telugu_exp/chain_cleaned_1d/tdnn1d_sp/15.mdl telugu_exp/chain_cleaned_1d/tdnn1d_sp/16.mdl 
# Started at Mon Jul 18 19:39:43 EDT 2022
#
nnet3-am-info telugu_exp/chain_cleaned_1d/tdnn1d_sp/16.mdl 
input-dim: 40
ivector-dim: 100
num-pdfs: 2824
prior-dimension: 0
# Nnet info follows.
left-context: 28
right-context: 28
num-parameters: 9032208
modulus: 1
input-node name=ivector dim=100
input-node name=input dim=40
component-node name=lda component=lda input=Append(Offset(input, -1), input, Offset(input, 1), ReplaceIndex(ivector, t, 0)) input-dim=220 output-dim=220
component-node name=tdnn1.affine component=tdnn1.affine input=lda input-dim=220 output-dim=1024
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=1024 output-dim=1024
component-node name=tdnn1.batchnorm component=tdnn1.batchnorm input=tdnn1.relu input-dim=1024 output-dim=1024
component-node name=tdnn1.dropout component=tdnn1.dropout input=tdnn1.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.linear component=tdnnf2.linear input=tdnn1.dropout input-dim=1024 output-dim=128
component-node name=tdnnf2.affine component=tdnnf2.affine input=tdnnf2.linear input-dim=128 output-dim=1024
component-node name=tdnnf2.relu component=tdnnf2.relu input=tdnnf2.affine input-dim=1024 output-dim=1024
component-node name=tdnnf2.batchnorm component=tdnnf2.batchnorm input=tdnnf2.relu input-dim=1024 output-dim=1024
component-node name=tdnnf2.dropout component=tdnnf2.dropout input=tdnnf2.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.noop component=tdnnf2.noop input=Sum(Scale(0.66, tdnn1.dropout), tdnnf2.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf3.linear component=tdnnf3.linear input=tdnnf2.noop input-dim=1024 output-dim=128
component-node name=tdnnf3.affine component=tdnnf3.affine input=tdnnf3.linear input-dim=128 output-dim=1024
component-node name=tdnnf3.relu component=tdnnf3.relu input=tdnnf3.affine input-dim=1024 output-dim=1024
component-node name=tdnnf3.batchnorm component=tdnnf3.batchnorm input=tdnnf3.relu input-dim=1024 output-dim=1024
component-node name=tdnnf3.dropout component=tdnnf3.dropout input=tdnnf3.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf3.noop component=tdnnf3.noop input=Sum(Scale(0.66, tdnnf2.noop), tdnnf3.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf4.linear component=tdnnf4.linear input=tdnnf3.noop input-dim=1024 output-dim=128
component-node name=tdnnf4.affine component=tdnnf4.affine input=tdnnf4.linear input-dim=128 output-dim=1024
component-node name=tdnnf4.relu component=tdnnf4.relu input=tdnnf4.affine input-dim=1024 output-dim=1024
component-node name=tdnnf4.batchnorm component=tdnnf4.batchnorm input=tdnnf4.relu input-dim=1024 output-dim=1024
component-node name=tdnnf4.dropout component=tdnnf4.dropout input=tdnnf4.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf4.noop component=tdnnf4.noop input=Sum(Scale(0.66, tdnnf3.noop), tdnnf4.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf5.linear component=tdnnf5.linear input=tdnnf4.noop input-dim=1024 output-dim=128
component-node name=tdnnf5.affine component=tdnnf5.affine input=tdnnf5.linear input-dim=128 output-dim=1024
component-node name=tdnnf5.relu component=tdnnf5.relu input=tdnnf5.affine input-dim=1024 output-dim=1024
component-node name=tdnnf5.batchnorm component=tdnnf5.batchnorm input=tdnnf5.relu input-dim=1024 output-dim=1024
component-node name=tdnnf5.dropout component=tdnnf5.dropout input=tdnnf5.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf5.noop component=tdnnf5.noop input=Sum(Scale(0.66, tdnnf4.noop), tdnnf5.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf6.linear component=tdnnf6.linear input=tdnnf5.noop input-dim=1024 output-dim=128
component-node name=tdnnf6.affine component=tdnnf6.affine input=tdnnf6.linear input-dim=128 output-dim=1024
component-node name=tdnnf6.relu component=tdnnf6.relu input=tdnnf6.affine input-dim=1024 output-dim=1024
component-node name=tdnnf6.batchnorm component=tdnnf6.batchnorm input=tdnnf6.relu input-dim=1024 output-dim=1024
component-node name=tdnnf6.dropout component=tdnnf6.dropout input=tdnnf6.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf6.noop component=tdnnf6.noop input=Sum(Scale(0.66, tdnnf5.noop), tdnnf6.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf7.linear component=tdnnf7.linear input=tdnnf6.noop input-dim=1024 output-dim=128
component-node name=tdnnf7.affine component=tdnnf7.affine input=tdnnf7.linear input-dim=128 output-dim=1024
component-node name=tdnnf7.relu component=tdnnf7.relu input=tdnnf7.affine input-dim=1024 output-dim=1024
component-node name=tdnnf7.batchnorm component=tdnnf7.batchnorm input=tdnnf7.relu input-dim=1024 output-dim=1024
component-node name=tdnnf7.dropout component=tdnnf7.dropout input=tdnnf7.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf7.noop component=tdnnf7.noop input=Sum(Scale(0.66, tdnnf6.noop), tdnnf7.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf8.linear component=tdnnf8.linear input=tdnnf7.noop input-dim=1024 output-dim=128
component-node name=tdnnf8.affine component=tdnnf8.affine input=tdnnf8.linear input-dim=128 output-dim=1024
component-node name=tdnnf8.relu component=tdnnf8.relu input=tdnnf8.affine input-dim=1024 output-dim=1024
component-node name=tdnnf8.batchnorm component=tdnnf8.batchnorm input=tdnnf8.relu input-dim=1024 output-dim=1024
component-node name=tdnnf8.dropout component=tdnnf8.dropout input=tdnnf8.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf8.noop component=tdnnf8.noop input=Sum(Scale(0.66, tdnnf7.noop), tdnnf8.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf9.linear component=tdnnf9.linear input=tdnnf8.noop input-dim=1024 output-dim=128
component-node name=tdnnf9.affine component=tdnnf9.affine input=tdnnf9.linear input-dim=128 output-dim=1024
component-node name=tdnnf9.relu component=tdnnf9.relu input=tdnnf9.affine input-dim=1024 output-dim=1024
component-node name=tdnnf9.batchnorm component=tdnnf9.batchnorm input=tdnnf9.relu input-dim=1024 output-dim=1024
component-node name=tdnnf9.dropout component=tdnnf9.dropout input=tdnnf9.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf9.noop component=tdnnf9.noop input=Sum(Scale(0.66, tdnnf8.noop), tdnnf9.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf10.linear component=tdnnf10.linear input=tdnnf9.noop input-dim=1024 output-dim=128
component-node name=tdnnf10.affine component=tdnnf10.affine input=tdnnf10.linear input-dim=128 output-dim=1024
component-node name=tdnnf10.relu component=tdnnf10.relu input=tdnnf10.affine input-dim=1024 output-dim=1024
component-node name=tdnnf10.batchnorm component=tdnnf10.batchnorm input=tdnnf10.relu input-dim=1024 output-dim=1024
component-node name=tdnnf10.dropout component=tdnnf10.dropout input=tdnnf10.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf10.noop component=tdnnf10.noop input=Sum(Scale(0.66, tdnnf9.noop), tdnnf10.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf11.linear component=tdnnf11.linear input=tdnnf10.noop input-dim=1024 output-dim=128
component-node name=tdnnf11.affine component=tdnnf11.affine input=tdnnf11.linear input-dim=128 output-dim=1024
component-node name=tdnnf11.relu component=tdnnf11.relu input=tdnnf11.affine input-dim=1024 output-dim=1024
component-node name=tdnnf11.batchnorm component=tdnnf11.batchnorm input=tdnnf11.relu input-dim=1024 output-dim=1024
component-node name=tdnnf11.dropout component=tdnnf11.dropout input=tdnnf11.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf11.noop component=tdnnf11.noop input=Sum(Scale(0.66, tdnnf10.noop), tdnnf11.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf12.linear component=tdnnf12.linear input=tdnnf11.noop input-dim=1024 output-dim=128
component-node name=tdnnf12.affine component=tdnnf12.affine input=tdnnf12.linear input-dim=128 output-dim=1024
component-node name=tdnnf12.relu component=tdnnf12.relu input=tdnnf12.affine input-dim=1024 output-dim=1024
component-node name=tdnnf12.batchnorm component=tdnnf12.batchnorm input=tdnnf12.relu input-dim=1024 output-dim=1024
component-node name=tdnnf12.dropout component=tdnnf12.dropout input=tdnnf12.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf12.noop component=tdnnf12.noop input=Sum(Scale(0.66, tdnnf11.noop), tdnnf12.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf13.linear component=tdnnf13.linear input=tdnnf12.noop input-dim=1024 output-dim=128
component-node name=tdnnf13.affine component=tdnnf13.affine input=tdnnf13.linear input-dim=128 output-dim=1024
component-node name=tdnnf13.relu component=tdnnf13.relu input=tdnnf13.affine input-dim=1024 output-dim=1024
component-node name=tdnnf13.batchnorm component=tdnnf13.batchnorm input=tdnnf13.relu input-dim=1024 output-dim=1024
component-node name=tdnnf13.dropout component=tdnnf13.dropout input=tdnnf13.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf13.noop component=tdnnf13.noop input=Sum(Scale(0.66, tdnnf12.noop), tdnnf13.dropout) input-dim=1024 output-dim=1024
component-node name=prefinal-l component=prefinal-l input=tdnnf13.noop input-dim=1024 output-dim=256
component-node name=prefinal-chain.affine component=prefinal-chain.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-chain.relu component=prefinal-chain.relu input=prefinal-chain.affine input-dim=1024 output-dim=1024
component-node name=prefinal-chain.batchnorm1 component=prefinal-chain.batchnorm1 input=prefinal-chain.relu input-dim=1024 output-dim=1024
component-node name=prefinal-chain.linear component=prefinal-chain.linear input=prefinal-chain.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-chain.batchnorm2 component=prefinal-chain.batchnorm2 input=prefinal-chain.linear input-dim=256 output-dim=256
component-node name=output.affine component=output.affine input=prefinal-chain.batchnorm2 input-dim=256 output-dim=2824
output-node name=output input=output.affine dim=2824 objective=linear
component-node name=prefinal-xent.affine component=prefinal-xent.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-xent.relu component=prefinal-xent.relu input=prefinal-xent.affine input-dim=1024 output-dim=1024
component-node name=prefinal-xent.batchnorm1 component=prefinal-xent.batchnorm1 input=prefinal-xent.relu input-dim=1024 output-dim=1024
component-node name=prefinal-xent.linear component=prefinal-xent.linear input=prefinal-xent.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-xent.batchnorm2 component=prefinal-xent.batchnorm2 input=prefinal-xent.linear input-dim=256 output-dim=256
component-node name=output-xent.affine component=output-xent.affine input=prefinal-xent.batchnorm2 input-dim=256 output-dim=2824
component-node name=output-xent.log-softmax component=output-xent.log-softmax input=output-xent.affine input-dim=2824 output-dim=2824
output-node name=output-xent input=output-xent.log-softmax dim=2824 objective=linear
component name=lda type=FixedAffineComponent, input-dim=220, output-dim=220, linear-params-rms=0.005757, bias-{mean,stddev}=-0.001083,0.01285
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=220, output-dim=1024, learning-rate=1.31875e-05, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.05702, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.69,0.76,0.77,0.78 0.79,0.81,0.84,0.88,0.90 0.91,0.93,0.95,0.98), mean=0.845, stddev=0.041], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.7,1.7,1.7,1.8 1.8,1.8,1.8,1.9,1.9 1.9,1.9,1.9,2.0), mean=1.82, stddev=0.0442], bias-{mean,stddev}=-0.0171,0.8369, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=2.95e+06, self-repaired-proportion=0.847257, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.04,0.71,1.1 1.4,1.7,1.9,2.9), mean=0.334, stddev=0.489], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.43,1.0,1.0 1.0,1.0,1.0,1.0), mean=0.489, stddev=0.47], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.05,0.05,0.06 0.07,0.09,0.15,0.30,0.31 0.32,0.33,0.34,0.38), mean=0.188, stddev=0.099], oderiv-count=4.35059e+06
component name=tdnn1.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=46539.5, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.04,0.71,1.1 1.4,1.7,1.9,2.9), mean=0.332, stddev=0.487], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.06,0.10,0.12 0.14,0.16,0.17,0.24), mean=0.0539, stddev=0.0532]
component name=tdnn1.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.12963, continuous=true
component name=tdnnf2.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=1.31875e-05, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.01879, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.85,0.85,0.85,0.85 0.85,0.85,0.85,0.85,0.85 0.85,0.85,0.85,0.85), mean=0.85, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.17,0.18,0.19 0.19,0.20,0.21,0.22,0.23 0.24,0.24,0.25,0.30), mean=0.212, stddev=0.0157], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=1.31875e-05, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.05321, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.73,0.76,0.77,0.79 0.80,0.82,0.85,0.88,0.90 0.92,0.93,0.94,0.98), mean=0.85, stddev=0.0387], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.6,1.6,1.6,1.6 1.7,1.7,1.7,1.7,1.7 1.8,1.8,1.8,1.8), mean=1.7, stddev=0.0362], bias-{mean,stddev}=0.006728,0.8246, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=3.05e+06, self-repaired-proportion=0.284045, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-08,6e-06,2e-05,9e-05 0.003,0.03,0.24,0.73,1.0 1.3,1.7,2.1,3.3), mean=0.407, stddev=0.465], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(7e-07,6e-05,0.0002,0.0009 0.02,0.10,0.51,0.90,0.97 0.99,1.0,1.0,1.0), mean=0.501, stddev=0.352], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.006,0.007,0.008 0.009,0.01,0.02,0.04,0.10 0.15,0.17,0.17,0.19), mean=0.0343, stddev=0.0432], oderiv-count=4.29408e+06
component name=tdnnf2.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=46027.5, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-20,3e-06,2e-05,0.0001 0.003,0.03,0.24,0.73,1.0 1.3,1.7,2.0,3.3), mean=0.406, stddev=0.464], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-11,0.0008,0.001,0.005 0.03,0.13,0.33,0.48,0.56 0.64,0.73,0.78,1.1), mean=0.321, stddev=0.195]
component name=tdnnf2.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.12963, continuous=true
component name=tdnnf2.noop type=NoOpComponent, dim=1024
component name=tdnnf3.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=1.31875e-05, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.01868, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.85,0.85,0.85,0.85 0.85,0.85,0.85,0.85,0.85 0.85,0.85,0.85,0.85), mean=0.845, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.17,0.18,0.19 0.19,0.20,0.21,0.22,0.23 0.24,0.25,0.25,0.28), mean=0.211, stddev=0.0157], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=1.31875e-05, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.05312, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.74,0.77,0.77,0.79 0.80,0.81,0.85,0.88,0.90 0.91,0.93,0.94,0.98), mean=0.849, stddev=0.0388], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.6,1.6,1.6,1.6 1.7,1.7,1.7,1.7,1.8 1.8,1.8,1.8,1.8), mean=1.7, stddev=0.0395], bias-{mean,stddev}=-0.00529,0.8191, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=3.13e+06, self-repaired-proportion=0.0864059, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-05,0.0002,0.009,0.03 0.06,0.11,0.36,0.80,1.1 1.3,1.6,1.8,3.0), mean=0.488, stddev=0.435], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(6e-05,0.001,0.02,0.06 0.11,0.19,0.50,0.79,0.89 0.94,0.98,0.99,1.0), mean=0.498, stddev=0.286], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.004,0.005 0.005,0.006,0.008,0.01,0.02 0.02,0.05,0.12,0.14), mean=0.0116, stddev=0.0158], oderiv-count=4.59034e+06
component name=tdnnf3.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=45515.5, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-05,0.0002,0.009,0.03 0.06,0.11,0.36,0.80,1.1 1.3,1.6,1.8,3.0), mean=0.486, stddev=0.433], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.009,0.09,0.18 0.24,0.33,0.54,0.73,0.83 0.89,0.97,1.1,1.4), mean=0.538, stddev=0.229]
component name=tdnnf3.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.12963, continuous=true
component name=tdnnf3.noop type=NoOpComponent, dim=1024
component name=tdnnf4.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=1.31875e-05, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.01866, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.84,0.84,0.84,0.84 0.84,0.84,0.84,0.84,0.84 0.84,0.84,0.84,0.84), mean=0.844, stddev=0.000244], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.17,0.18,0.19 0.19,0.20,0.21,0.22,0.23 0.24,0.24,0.25,0.32), mean=0.211, stddev=0.0155], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=1.31875e-05, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.05299, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.74,0.76,0.77,0.78 0.80,0.81,0.85,0.88,0.90 0.91,0.93,0.94,0.99), mean=0.847, stddev=0.0385], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.6,1.6,1.6,1.6 1.7,1.7,1.7,1.7,1.7 1.8,1.8,1.8,1.8), mean=1.7, stddev=0.0372], bias-{mean,stddev}=0.01156,0.891, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=1.03e+06, self-repaired-proportion=0.0683166, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-05,0.02,0.03,0.05 0.09,0.16,0.44,0.88,1.2 1.6,1.8,2.1,3.3), mean=0.56, stddev=0.479], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.02,0.04,0.07 0.12,0.22,0.50,0.78,0.88 0.93,0.96,0.97,1.0), mean=0.502, stddev=0.273], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.005,0.006,0.006 0.007,0.008,0.01,0.02,0.02 0.03,0.04,0.05,0.23), mean=0.0135, stddev=0.0177], oderiv-count=1.55885e+06
component name=tdnnf4.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=15171.8, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-05,0.02,0.03,0.05 0.09,0.15,0.44,0.88,1.2 1.6,1.8,2.0,3.3), mean=0.557, stddev=0.478], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.14,0.19,0.25 0.33,0.43,0.65,0.86,0.96 1.0,1.1,1.3,1.7), mean=0.653, stddev=0.246]
component name=tdnnf4.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.12963, continuous=true
component name=tdnnf4.noop type=NoOpComponent, dim=1024
component name=tdnnf5.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=1.31875e-05, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=0, linear-params-rms=0.02612, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.84,0.84,0.84,0.84 0.84,0.84,0.84,0.84,0.84 0.84,0.84,0.84,0.84), mean=0.836, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.22,0.24,0.25,0.26 0.27,0.28,0.30,0.31,0.32 0.33,0.34,0.35,0.36), mean=0.295, stddev=0.0209], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=1.31875e-05, l2-regularize=0.008, max-change=0.75, time-offsets=0, linear-params-rms=0.07501, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.67,0.72,0.73,0.76 0.78,0.80,0.84,0.89,0.92 0.94,0.97,0.97,1.0), mean=0.847, stddev=0.0553], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2.3,2.3,2.3,2.3 2.3,2.4,2.4,2.4,2.5 2.5,2.5,2.5,2.5), mean=2.4, stddev=0.0527], bias-{mean,stddev}=-0.0003319,0.853, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=1.02e+06, self-repaired-proportion=0.0544701, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(8e-05,0.02,0.03,0.07 0.10,0.18,0.42,0.89,1.2 1.5,1.9,2.0,2.8), mean=0.557, stddev=0.463], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0003,0.03,0.04,0.09 0.14,0.23,0.48,0.76,0.86 0.92,0.96,0.98,1.0), mean=0.495, stddev=0.264], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.004,0.005,0.005 0.006,0.006,0.009,0.01,0.02 0.02,0.03,0.04,0.20), mean=0.0115, stddev=0.0146], oderiv-count=1.52461e+06
component name=tdnnf5.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=15171.8, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(7e-05,0.02,0.03,0.07 0.10,0.17,0.42,0.89,1.2 1.5,1.8,2.0,2.8), mean=0.554, stddev=0.461], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.12,0.19,0.29 0.36,0.47,0.67,0.91,1.0 1.1,1.2,1.3,1.5), mean=0.687, stddev=0.258]
component name=tdnnf5.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.12963, continuous=true
component name=tdnnf5.noop type=NoOpComponent, dim=1024
component name=tdnnf6.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=1.31875e-05, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01852, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.84,0.84,0.84,0.84 0.84,0.84,0.84,0.84,0.84 0.84,0.84,0.84,0.84), mean=0.838, stddev=-nan], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.17,0.18,0.19 0.19,0.20,0.21,0.22,0.23 0.23,0.24,0.25,0.28), mean=0.209, stddev=0.0151], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=1.31875e-05, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.05306, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.72,0.75,0.77,0.78 0.80,0.82,0.85,0.88,0.89 0.91,0.93,0.94,0.96), mean=0.848, stddev=0.038], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.6,1.6,1.6,1.6 1.6,1.7,1.7,1.7,1.7 1.8,1.8,1.8,1.8), mean=1.7, stddev=0.0368], bias-{mean,stddev}=-0.0238,0.8082, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.43e+05, self-repaired-proportion=0.0302504, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.04,0.04,0.07 0.13,0.20,0.47,0.87,1.1 1.4,1.6,1.8,3.1), mean=0.556, stddev=0.422], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0006,0.03,0.05,0.10 0.16,0.25,0.48,0.73,0.83 0.89,0.93,0.95,0.99), mean=0.491, stddev=0.246], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.004,0.005 0.005,0.006,0.008,0.01,0.01 0.02,0.02,0.03,0.16), mean=0.00926, stddev=0.00803], oderiv-count=1.42022e+06
component name=tdnnf6.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=14659.8, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.04,0.04,0.07 0.13,0.20,0.47,0.87,1.1 1.4,1.6,1.8,3.1), mean=0.554, stddev=0.421], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.21,0.25,0.33 0.41,0.52,0.74,0.93,1.0 1.1,1.3,1.3,1.5), mean=0.733, stddev=0.244]
component name=tdnnf6.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.12963, continuous=true
component name=tdnnf6.noop type=NoOpComponent, dim=1024
component name=tdnnf7.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=1.31875e-05, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01851, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.84,0.84,0.84,0.84 0.84,0.84,0.84,0.84,0.84 0.84,0.84,0.84,0.84), mean=0.838, stddev=0.000244], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.17,0.17,0.18 0.19,0.20,0.21,0.22,0.23 0.23,0.24,0.25,0.27), mean=0.209, stddev=0.0154], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=1.31875e-05, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.05314, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.70,0.76,0.77,0.79 0.80,0.82,0.85,0.88,0.90 0.92,0.93,0.94,0.98), mean=0.849, stddev=0.0386], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.6,1.6,1.6,1.6 1.7,1.7,1.7,1.7,1.7 1.8,1.8,1.8,1.8), mean=1.7, stddev=0.0371], bias-{mean,stddev}=0.01562,0.8616, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.88e+05, self-repaired-proportion=0.04091, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0004,0.03,0.05,0.07 0.12,0.20,0.46,0.93,1.2 1.5,1.9,2.1,3.0), mean=0.591, stddev=0.469], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.04,0.06,0.10 0.15,0.24,0.50,0.76,0.84 0.91,0.96,0.97,0.99), mean=0.501, stddev=0.256], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.004,0.004 0.005,0.005,0.007,0.01,0.01 0.02,0.02,0.03,0.14), mean=0.00865, stddev=0.00694], oderiv-count=1.43117e+06
component name=tdnnf7.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=14147.8, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0004,0.03,0.05,0.07 0.12,0.20,0.46,0.92,1.2 1.5,1.9,2.1,3.0), mean=0.588, stddev=0.467], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.18,0.22,0.33 0.40,0.52,0.73,0.97,1.1 1.2,1.3,1.4,1.5), mean=0.743, stddev=0.257]
component name=tdnnf7.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.12963, continuous=true
component name=tdnnf7.noop type=NoOpComponent, dim=1024
component name=tdnnf8.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=1.31875e-05, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.0185, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.84,0.84,0.84,0.84 0.84,0.84,0.84,0.84,0.84 0.84,0.84,0.84,0.84), mean=0.837, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.16,0.18,0.19 0.19,0.20,0.21,0.22,0.23 0.23,0.24,0.25,0.28), mean=0.209, stddev=0.0155], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=1.31875e-05, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.05307, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.72,0.76,0.77,0.79 0.80,0.82,0.85,0.88,0.90 0.92,0.93,0.94,0.98), mean=0.848, stddev=0.0385], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.6,1.6,1.6,1.6 1.7,1.7,1.7,1.7,1.7 1.8,1.8,1.8,1.8), mean=1.7, stddev=0.0366], bias-{mean,stddev}=-0.02158,0.8762, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.89e+05, self-repaired-proportion=0.0455226, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(5e-05,0.03,0.04,0.07 0.12,0.20,0.47,0.88,1.2 1.5,1.9,2.1,2.7), mean=0.582, stddev=0.46], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0003,0.04,0.05,0.08 0.14,0.25,0.48,0.74,0.84 0.90,0.96,0.97,0.99), mean=0.49, stddev=0.254], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.003,0.004,0.004 0.004,0.005,0.007,0.01,0.01 0.02,0.02,0.03,0.16), mean=0.0086, stddev=0.0115], oderiv-count=1.33498e+06
component name=tdnnf8.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=13635.8, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(7e-05,0.03,0.04,0.07 0.12,0.20,0.47,0.88,1.2 1.5,1.9,2.1,2.7), mean=0.579, stddev=0.458], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.20,0.24,0.33 0.40,0.51,0.75,0.97,1.1 1.2,1.3,1.4,1.9), mean=0.75, stddev=0.272]
component name=tdnnf8.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.12963, continuous=true
component name=tdnnf8.noop type=NoOpComponent, dim=1024
component name=tdnnf9.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=1.31875e-05, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01844, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.83,0.83,0.83,0.83 0.83,0.83,0.83,0.83,0.83 0.83,0.83,0.83,0.83), mean=0.835, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.16,0.17,0.18 0.19,0.20,0.21,0.22,0.23 0.23,0.24,0.25,0.28), mean=0.208, stddev=0.0158], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=1.31875e-05, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.0531, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.70,0.76,0.77,0.78 0.80,0.82,0.85,0.88,0.90 0.91,0.92,0.94,0.97), mean=0.849, stddev=0.0383], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.6,1.6,1.6,1.6 1.6,1.7,1.7,1.7,1.7 1.8,1.8,1.8,1.9), mean=1.7, stddev=0.0381], bias-{mean,stddev}=-0.0091,0.8563, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9e+05, self-repaired-proportion=0.0310755, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.03,0.04,0.08 0.12,0.21,0.50,0.92,1.2 1.4,1.8,2.0,2.9), mean=0.595, stddev=0.445], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0005,0.04,0.05,0.10 0.15,0.26,0.50,0.74,0.83 0.89,0.94,0.95,0.99), mean=0.496, stddev=0.247], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.003,0.004 0.004,0.005,0.006,0.009,0.01 0.01,0.02,0.02,0.16), mean=0.00752, stddev=0.0084], oderiv-count=1.24346e+06
component name=tdnnf9.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=13123.8, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.03,0.05,0.08 0.12,0.21,0.50,0.92,1.2 1.4,1.8,2.0,2.9), mean=0.592, stddev=0.443], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.22,0.25,0.32 0.41,0.51,0.77,1.0,1.1 1.2,1.3,1.4,1.8), mean=0.765, stddev=0.272]
component name=tdnnf9.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.12963, continuous=true
component name=tdnnf9.noop type=NoOpComponent, dim=1024
component name=tdnnf10.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=1.31875e-05, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01837, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.83,0.83,0.83,0.83 0.83,0.83,0.83,0.83,0.83 0.83,0.83,0.83,0.83), mean=0.831, stddev=-nan], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.16,0.17,0.18 0.19,0.20,0.21,0.22,0.23 0.23,0.24,0.25,0.27), mean=0.207, stddev=0.0157], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=1.31875e-05, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.05307, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.74,0.77,0.78,0.79 0.80,0.81,0.85,0.88,0.90 0.91,0.93,0.94,0.98), mean=0.848, stddev=0.0376], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.6,1.6,1.6,1.6 1.7,1.7,1.7,1.7,1.7 1.8,1.8,1.8,1.8), mean=1.7, stddev=0.0374], bias-{mean,stddev}=0.05805,0.8604, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.37e+05, self-repaired-proportion=0.0322146, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(8e-05,0.03,0.05,0.09 0.13,0.22,0.50,0.99,1.3 1.5,1.9,2.1,2.7), mean=0.627, stddev=0.473], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0004,0.05,0.06,0.12 0.17,0.26,0.51,0.77,0.85 0.91,0.95,0.97,0.99), mean=0.513, stddev=0.251], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.003,0.003 0.004,0.004,0.005,0.008,0.01 0.01,0.02,0.02,0.14), mean=0.00681, stddev=0.00789], oderiv-count=1.20576e+06
component name=tdnnf10.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=12611.8, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(9e-05,0.03,0.05,0.09 0.13,0.22,0.50,0.99,1.3 1.5,1.9,2.1,2.7), mean=0.623, stddev=0.471], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.007,0.19,0.26,0.34 0.42,0.52,0.76,0.99,1.1 1.2,1.4,1.5,2.1), mean=0.77, stddev=0.283]
component name=tdnnf10.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.12963, continuous=true
component name=tdnnf10.noop type=NoOpComponent, dim=1024
component name=tdnnf11.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=1.31875e-05, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01839, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.83,0.83,0.83,0.83 0.83,0.83,0.83,0.83,0.83 0.83,0.83,0.83,0.83), mean=0.832, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.17,0.17,0.18 0.19,0.20,0.21,0.22,0.23 0.23,0.24,0.25,0.28), mean=0.207, stddev=0.0154], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=1.31875e-05, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.05297, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.73,0.76,0.77,0.78 0.80,0.81,0.85,0.88,0.90 0.91,0.92,0.93,0.98), mean=0.847, stddev=0.039], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.6,1.6,1.6,1.6 1.6,1.7,1.7,1.7,1.7 1.8,1.8,1.8,1.8), mean=1.69, stddev=0.0357], bias-{mean,stddev}=-0.04521,0.8819, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.07e+05, self-repaired-proportion=0.0242896, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.03,0.05,0.08 0.12,0.20,0.47,0.94,1.2 1.5,1.7,1.9,2.7), mean=0.591, stddev=0.453], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0007,0.04,0.07,0.10 0.15,0.23,0.48,0.73,0.83 0.88,0.93,0.95,1.0), mean=0.486, stddev=0.249], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.003,0.003 0.003,0.004,0.005,0.008,0.01 0.01,0.01,0.02,0.12), mean=0.00647, stddev=0.00819], oderiv-count=1.12288e+06
component name=tdnnf11.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=12099.8, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(8e-05,0.03,0.05,0.08 0.12,0.20,0.46,0.93,1.2 1.5,1.7,1.9,2.7), mean=0.588, stddev=0.452], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.21,0.25,0.32 0.40,0.50,0.76,0.98,1.1 1.2,1.3,1.4,2.0), mean=0.757, stddev=0.279]
component name=tdnnf11.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.12963, continuous=true
component name=tdnnf11.noop type=NoOpComponent, dim=1024
component name=tdnnf12.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=1.31875e-05, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01834, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.83,0.83,0.83,0.83 0.83,0.83,0.83,0.83,0.83 0.83,0.83,0.83,0.83), mean=0.83, stddev=-nan], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.17,0.17,0.18 0.19,0.19,0.21,0.22,0.23 0.23,0.24,0.25,0.28), mean=0.207, stddev=0.0157], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=1.31875e-05, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.05288, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.73,0.76,0.77,0.79 0.80,0.81,0.85,0.88,0.89 0.91,0.92,0.93,0.96), mean=0.845, stddev=0.0376], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.6,1.6,1.6,1.6 1.6,1.7,1.7,1.7,1.7 1.7,1.8,1.8,1.8), mean=1.69, stddev=0.0354], bias-{mean,stddev}=-0.02359,0.8575, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.05e+05, self-repaired-proportion=0.0222725, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.04,0.06,0.09 0.13,0.21,0.48,0.94,1.2 1.5,1.8,2.0,2.8), mean=0.6, stddev=0.454], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0008,0.05,0.07,0.10 0.16,0.25,0.48,0.72,0.83 0.90,0.94,0.95,0.99), mean=0.489, stddev=0.243], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.003 0.003,0.003,0.004,0.006,0.008 0.009,0.01,0.02,0.09), mean=0.00544, stddev=0.0061], oderiv-count=1.19693e+06
component name=tdnnf12.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11587.8, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.04,0.06,0.09 0.13,0.21,0.48,0.94,1.2 1.5,1.8,2.0,2.8), mean=0.597, stddev=0.452], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.21,0.27,0.34 0.42,0.52,0.76,0.99,1.1 1.2,1.3,1.4,1.7), mean=0.764, stddev=0.269]
component name=tdnnf12.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.12963, continuous=true
component name=tdnnf12.noop type=NoOpComponent, dim=1024
component name=tdnnf13.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=1.31875e-05, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01819, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.82,0.82,0.82,0.82 0.82,0.82,0.82,0.82,0.82 0.82,0.82,0.82,0.82), mean=0.823, stddev=0.000244], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.16,0.17,0.18 0.19,0.19,0.21,0.22,0.22 0.23,0.24,0.24,0.27), mean=0.205, stddev=0.0155], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=1.31875e-05, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.05292, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.72,0.76,0.77,0.78 0.80,0.81,0.85,0.88,0.90 0.91,0.92,0.94,0.98), mean=0.846, stddev=0.0392], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.6,1.6,1.6,1.6 1.6,1.7,1.7,1.7,1.7 1.8,1.8,1.8,1.8), mean=1.69, stddev=0.0376], bias-{mean,stddev}=-0.01182,0.8506, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.65e+05, self-repaired-proportion=0.0204692, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-05,0.05,0.06,0.09 0.15,0.23,0.50,0.97,1.3 1.5,1.8,2.0,2.5), mean=0.619, stddev=0.445], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.05,0.08,0.12 0.18,0.27,0.48,0.72,0.81 0.87,0.92,0.95,0.98), mean=0.492, stddev=0.233], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.003,0.003,0.004,0.006,0.007 0.008,0.01,0.01,0.08), mean=0.0046, stddev=0.00472], oderiv-count=1.0736e+06
component name=tdnnf13.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11075.8, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(5e-05,0.05,0.06,0.09 0.15,0.23,0.50,0.97,1.2 1.5,1.8,2.0,2.5), mean=0.615, stddev=0.444], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.24,0.28,0.35 0.43,0.53,0.77,1.0,1.1 1.2,1.4,1.5,1.8), mean=0.782, stddev=0.278]
component name=tdnnf13.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.12963, continuous=true
component name=tdnnf13.noop type=NoOpComponent, dim=1024
component name=prefinal-l type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=1.31875e-05, l2-regularize=0.008, max-change=0.75, params-rms=0.02514, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.80,0.80,0.80,0.80 0.80,0.80,0.80,0.80,0.80 0.80,0.80,0.80,0.80), mean=0.804, stddev=0.000244], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.33,0.34,0.35,0.36 0.37,0.38,0.40,0.42,0.43 0.44,0.45,0.46,0.47), mean=0.401, stddev=0.0249], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=1.31875e-05, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.05273, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.73,0.76,0.77,0.78 0.80,0.81,0.84,0.88,0.89 0.90,0.92,0.92,0.95), mean=0.843, stddev=0.0374], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.6,1.6,1.6,1.6 1.6,1.7,1.7,1.7,1.7 1.7,1.8,1.8,1.8), mean=1.69, stddev=0.0352], bias-{mean,stddev}=-0.00679,0.8671, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.84e+05, self-repaired-proportion=0.0376307, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-05,0.001,0.03,0.07 0.11,0.19,0.46,0.92,1.2 1.5,1.9,2.1,2.7), mean=0.585, stddev=0.465], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.006,0.06,0.11 0.16,0.27,0.49,0.74,0.84 0.91,0.95,0.97,1.0), mean=0.497, stddev=0.249], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.002,0.002 0.002,0.003,0.004,0.005,0.007 0.009,0.01,0.05,0.07), mean=0.00482, stddev=0.00645], oderiv-count=1.14227e+06
component name=prefinal-chain.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11075.8, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-05,0.0007,0.03,0.07 0.11,0.19,0.46,0.91,1.2 1.5,1.9,2.1,2.6), mean=0.582, stddev=0.463], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.02,0.19,0.27 0.35,0.46,0.69,0.90,1.0 1.2,1.3,1.4,1.7), mean=0.696, stddev=0.269]
component name=prefinal-chain.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=1.31875e-05, l2-regularize=0.008, max-change=0.75, params-rms=0.02594, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.83,0.83,0.83,0.83 0.83,0.83,0.83,0.83,0.83 0.83,0.83,0.83,0.83), mean=0.83, stddev=0], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.30,0.35,0.35,0.37 0.38,0.39,0.42,0.44,0.45 0.46,0.47,0.47,0.53), mean=0.414, stddev=0.0284], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=11075.8, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1e-07,-1e-07,-8e-08,-5e-08 -4e-08,-3e-08,7e-10,3e-08,5e-08 6e-08,8e-08,1e-07,1e-07), mean=2.83e-09, stddev=3.63e-08], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.67,0.70,0.71,0.73 0.75,0.78,0.82,0.90,0.92 0.97,1.0,1.1,1.2), mean=0.834, stddev=0.0783]
component name=output.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=2824, learning-rate=1.31875e-05, l2-regularize=0.002, max-change=1.5, linear-params-rms=0.008796, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.002,0.004,0.01 0.02,0.04,0.12,0.19,0.22 0.25,0.28,0.29,0.37), mean=0.119, stddev=0.0759], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.35,0.37,0.37,0.40 0.41,0.43,0.47,0.50,0.51 0.52,0.54,0.55,0.57), mean=0.466, stddev=0.0395], bias-{mean,stddev}=1.37e-05,0.02765, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=1.31875e-05, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.05258, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.73,0.75,0.76,0.78 0.79,0.81,0.84,0.87,0.89 0.90,0.92,0.93,0.97), mean=0.84, stddev=0.0387], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.6,1.6,1.6,1.6 1.6,1.7,1.7,1.7,1.7 1.7,1.8,1.8,1.8), mean=1.68, stddev=0.037], bias-{mean,stddev}=-0.001382,0.8428, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.42e+05, self-repaired-proportion=0.0321633, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(6e-06,0.03,0.05,0.09 0.13,0.22,0.47,0.90,1.2 1.5,1.8,2.0,3.0), mean=0.591, stddev=0.441], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(5e-05,0.04,0.06,0.11 0.17,0.27,0.49,0.72,0.83 0.90,0.94,0.96,0.99), mean=0.49, stddev=0.239], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0005,0.0006,0.0007,0.0007 0.0008,0.0009,0.001,0.002,0.002 0.003,0.004,0.004,0.03), mean=0.00159, stddev=0.00209], oderiv-count=1.07974e+06
component name=prefinal-xent.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11075.8, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(5e-08,0.03,0.05,0.09 0.13,0.22,0.47,0.90,1.2 1.5,1.8,2.0,3.0), mean=0.587, stddev=0.44], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.17,0.25,0.32 0.43,0.51,0.74,0.94,1.1 1.2,1.3,1.3,1.5), mean=0.733, stddev=0.25]
component name=prefinal-xent.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=1.31875e-05, l2-regularize=0.008, max-change=0.75, params-rms=0.02492, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.80,0.80,0.80,0.80 0.80,0.80,0.80,0.80,0.80 0.80,0.80,0.80,0.80), mean=0.797, stddev=0], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.31,0.33,0.34,0.35 0.36,0.37,0.40,0.42,0.43 0.44,0.46,0.46,0.47), mean=0.398, stddev=0.0286], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=11075.8, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1e-07,-1e-07,-8e-08,-6e-08 -4e-08,-3e-08,2e-09,3e-08,4e-08 5e-08,6e-08,7e-08,1e-07), mean=-7.38e-10, stddev=3.58e-08], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.72,0.74,0.75,0.76 0.77,0.80,0.85,0.89,0.94 0.97,1.0,1.0,1.3), mean=0.852, stddev=0.0697]
component name=output-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=2824, learning-rate=6.59375e-05, l2-regularize=0.002, learning-rate-factor=5, max-change=1.5, linear-params-rms=0.0218, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.02,0.02,0.02 0.02,0.03,0.12,0.51,0.66 0.74,0.82,0.85,1.1), mean=0.242, stddev=0.251], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.73,0.76,0.77,0.83 0.90,1.0,1.2,1.3,1.3 1.4,1.4,1.4,1.5), mean=1.15, stddev=0.166], bias-{mean,stddev}=1.612e-08,0.06692, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-xent.log-softmax type=LogSoftmaxComponent, dim=2824, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,1e-06,4e-05,9e-05 0.0001,0.0002,0.0006,0.001,0.002 0.003,0.004,0.004,0.04), mean=0.000891, stddev=0.00117], oderiv-count=1.14234e+06
nnet3-show-progress --use-gpu=no telugu_exp/chain_cleaned_1d/tdnn1d_sp/15.mdl telugu_exp/chain_cleaned_1d/tdnn1d_sp/16.mdl 
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:SelectGpuId():cu-device.cc:168) Manually selected to compute on CPU.
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:0.334794 tdnnf2.linear:0.387727 tdnnf2.affine:0.32579 tdnnf3.linear:0.288539 tdnnf3.affine:0.300813 tdnnf4.linear:0.243715 tdnnf4.affine:0.301598 tdnnf5.linear:0.175833 tdnnf5.affine:0.284622 tdnnf6.linear:0.219017 tdnnf6.affine:0.282993 tdnnf7.linear:0.213087 tdnnf7.affine:0.290079 tdnnf8.linear:0.203657 tdnnf8.affine:0.291032 tdnnf9.linear:0.19493 tdnnf9.affine:0.287127 tdnnf10.linear:0.187675 tdnnf10.affine:0.286943 tdnnf11.linear:0.175978 tdnnf11.affine:0.2895 tdnnf12.linear:0.172389 tdnnf12.affine:0.285337 tdnnf13.linear:0.164403 tdnnf13.affine:0.285082 prefinal-l:0.183846 prefinal-chain.affine:0.284902 prefinal-chain.linear:0.127535 output.affine:0.239586 prefinal-xent.affine:0.28724 prefinal-xent.linear:0.156429 output-xent.affine:0.56896 ]
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:38.0775 tdnnf2.linear:9.62203 tdnnf2.affine:37.9278 tdnnf3.linear:9.56385 tdnnf3.affine:37.7709 tdnnf4.linear:9.55332 tdnnf4.affine:39.3602 tdnnf5.linear:9.45503 tdnnf5.affine:38.5018 tdnnf6.linear:9.48091 tdnnf6.affine:37.5164 tdnnf7.linear:9.47797 tdnnf7.affine:38.7385 tdnnf8.linear:9.47311 tdnnf8.affine:39.0502 tdnnf9.linear:9.44225 tdnnf9.affine:38.6031 tdnnf10.linear:9.40308 tdnnf10.affine:38.7263 tdnnf11.linear:9.41419 tdnnf11.affine:39.1652 tdnnf12.linear:9.39156 tdnnf12.affine:38.5554 tdnnf13.linear:9.31104 tdnnf13.affine:38.4076 prefinal-l:12.8712 prefinal-chain.affine:38.717 prefinal-chain.linear:13.2807 output.affine:7.62178 prefinal-xent.affine:38.105 prefinal-xent.linear:12.7568 output-xent.affine:18.8719 ]
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.00872871 tdnnf2.linear:0.040019 tdnnf2.affine:0.00852584 tdnnf3.linear:0.0299497 tdnnf3.affine:0.00790615 tdnnf4.linear:0.0253203 tdnnf4.affine:0.00760752 tdnnf5.linear:0.0184486 tdnnf5.affine:0.00733958 tdnnf6.linear:0.0229233 tdnnf6.affine:0.00748939 tdnnf7.linear:0.0223114 tdnnf7.affine:0.00743476 tdnnf8.linear:0.0213351 tdnnf8.affine:0.00739963 tdnnf9.linear:0.0204876 tdnnf9.affine:0.0073849 tdnnf10.linear:0.0198052 tdnnf10.affine:0.00735666 tdnnf11.linear:0.0185496 tdnnf11.affine:0.00733902 tdnnf12.linear:0.0182129 tdnnf12.affine:0.0073478 tdnnf13.linear:0.01752 tdnnf13.affine:0.00736936 prefinal-l:0.0141579 prefinal-chain.affine:0.00730603 prefinal-chain.linear:0.00953387 output.affine:0.0319948 prefinal-xent.affine:0.00748293 prefinal-xent.linear:0.0121444 output-xent.affine:0.0308029 ]
# Accounting: time=0 threads=1
# Ended (code 0) at Mon Jul 18 19:39:43 EDT 2022, elapsed time 0 seconds
