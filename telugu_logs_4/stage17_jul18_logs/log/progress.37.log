# nnet3-am-info telugu_exp/chain_cleaned_1d/tdnn1d_sp/37.mdl && nnet3-show-progress --use-gpu=no telugu_exp/chain_cleaned_1d/tdnn1d_sp/36.mdl telugu_exp/chain_cleaned_1d/tdnn1d_sp/37.mdl 
# Started at Mon Jul 18 20:35:12 EDT 2022
#
nnet3-am-info telugu_exp/chain_cleaned_1d/tdnn1d_sp/37.mdl 
input-dim: 40
ivector-dim: 100
num-pdfs: 2824
prior-dimension: 0
# Nnet info follows.
left-context: 28
right-context: 28
num-parameters: 9032208
modulus: 1
input-node name=ivector dim=100
input-node name=input dim=40
component-node name=lda component=lda input=Append(Offset(input, -1), input, Offset(input, 1), ReplaceIndex(ivector, t, 0)) input-dim=220 output-dim=220
component-node name=tdnn1.affine component=tdnn1.affine input=lda input-dim=220 output-dim=1024
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=1024 output-dim=1024
component-node name=tdnn1.batchnorm component=tdnn1.batchnorm input=tdnn1.relu input-dim=1024 output-dim=1024
component-node name=tdnn1.dropout component=tdnn1.dropout input=tdnn1.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.linear component=tdnnf2.linear input=tdnn1.dropout input-dim=1024 output-dim=128
component-node name=tdnnf2.affine component=tdnnf2.affine input=tdnnf2.linear input-dim=128 output-dim=1024
component-node name=tdnnf2.relu component=tdnnf2.relu input=tdnnf2.affine input-dim=1024 output-dim=1024
component-node name=tdnnf2.batchnorm component=tdnnf2.batchnorm input=tdnnf2.relu input-dim=1024 output-dim=1024
component-node name=tdnnf2.dropout component=tdnnf2.dropout input=tdnnf2.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.noop component=tdnnf2.noop input=Sum(Scale(0.66, tdnn1.dropout), tdnnf2.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf3.linear component=tdnnf3.linear input=tdnnf2.noop input-dim=1024 output-dim=128
component-node name=tdnnf3.affine component=tdnnf3.affine input=tdnnf3.linear input-dim=128 output-dim=1024
component-node name=tdnnf3.relu component=tdnnf3.relu input=tdnnf3.affine input-dim=1024 output-dim=1024
component-node name=tdnnf3.batchnorm component=tdnnf3.batchnorm input=tdnnf3.relu input-dim=1024 output-dim=1024
component-node name=tdnnf3.dropout component=tdnnf3.dropout input=tdnnf3.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf3.noop component=tdnnf3.noop input=Sum(Scale(0.66, tdnnf2.noop), tdnnf3.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf4.linear component=tdnnf4.linear input=tdnnf3.noop input-dim=1024 output-dim=128
component-node name=tdnnf4.affine component=tdnnf4.affine input=tdnnf4.linear input-dim=128 output-dim=1024
component-node name=tdnnf4.relu component=tdnnf4.relu input=tdnnf4.affine input-dim=1024 output-dim=1024
component-node name=tdnnf4.batchnorm component=tdnnf4.batchnorm input=tdnnf4.relu input-dim=1024 output-dim=1024
component-node name=tdnnf4.dropout component=tdnnf4.dropout input=tdnnf4.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf4.noop component=tdnnf4.noop input=Sum(Scale(0.66, tdnnf3.noop), tdnnf4.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf5.linear component=tdnnf5.linear input=tdnnf4.noop input-dim=1024 output-dim=128
component-node name=tdnnf5.affine component=tdnnf5.affine input=tdnnf5.linear input-dim=128 output-dim=1024
component-node name=tdnnf5.relu component=tdnnf5.relu input=tdnnf5.affine input-dim=1024 output-dim=1024
component-node name=tdnnf5.batchnorm component=tdnnf5.batchnorm input=tdnnf5.relu input-dim=1024 output-dim=1024
component-node name=tdnnf5.dropout component=tdnnf5.dropout input=tdnnf5.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf5.noop component=tdnnf5.noop input=Sum(Scale(0.66, tdnnf4.noop), tdnnf5.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf6.linear component=tdnnf6.linear input=tdnnf5.noop input-dim=1024 output-dim=128
component-node name=tdnnf6.affine component=tdnnf6.affine input=tdnnf6.linear input-dim=128 output-dim=1024
component-node name=tdnnf6.relu component=tdnnf6.relu input=tdnnf6.affine input-dim=1024 output-dim=1024
component-node name=tdnnf6.batchnorm component=tdnnf6.batchnorm input=tdnnf6.relu input-dim=1024 output-dim=1024
component-node name=tdnnf6.dropout component=tdnnf6.dropout input=tdnnf6.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf6.noop component=tdnnf6.noop input=Sum(Scale(0.66, tdnnf5.noop), tdnnf6.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf7.linear component=tdnnf7.linear input=tdnnf6.noop input-dim=1024 output-dim=128
component-node name=tdnnf7.affine component=tdnnf7.affine input=tdnnf7.linear input-dim=128 output-dim=1024
component-node name=tdnnf7.relu component=tdnnf7.relu input=tdnnf7.affine input-dim=1024 output-dim=1024
component-node name=tdnnf7.batchnorm component=tdnnf7.batchnorm input=tdnnf7.relu input-dim=1024 output-dim=1024
component-node name=tdnnf7.dropout component=tdnnf7.dropout input=tdnnf7.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf7.noop component=tdnnf7.noop input=Sum(Scale(0.66, tdnnf6.noop), tdnnf7.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf8.linear component=tdnnf8.linear input=tdnnf7.noop input-dim=1024 output-dim=128
component-node name=tdnnf8.affine component=tdnnf8.affine input=tdnnf8.linear input-dim=128 output-dim=1024
component-node name=tdnnf8.relu component=tdnnf8.relu input=tdnnf8.affine input-dim=1024 output-dim=1024
component-node name=tdnnf8.batchnorm component=tdnnf8.batchnorm input=tdnnf8.relu input-dim=1024 output-dim=1024
component-node name=tdnnf8.dropout component=tdnnf8.dropout input=tdnnf8.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf8.noop component=tdnnf8.noop input=Sum(Scale(0.66, tdnnf7.noop), tdnnf8.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf9.linear component=tdnnf9.linear input=tdnnf8.noop input-dim=1024 output-dim=128
component-node name=tdnnf9.affine component=tdnnf9.affine input=tdnnf9.linear input-dim=128 output-dim=1024
component-node name=tdnnf9.relu component=tdnnf9.relu input=tdnnf9.affine input-dim=1024 output-dim=1024
component-node name=tdnnf9.batchnorm component=tdnnf9.batchnorm input=tdnnf9.relu input-dim=1024 output-dim=1024
component-node name=tdnnf9.dropout component=tdnnf9.dropout input=tdnnf9.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf9.noop component=tdnnf9.noop input=Sum(Scale(0.66, tdnnf8.noop), tdnnf9.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf10.linear component=tdnnf10.linear input=tdnnf9.noop input-dim=1024 output-dim=128
component-node name=tdnnf10.affine component=tdnnf10.affine input=tdnnf10.linear input-dim=128 output-dim=1024
component-node name=tdnnf10.relu component=tdnnf10.relu input=tdnnf10.affine input-dim=1024 output-dim=1024
component-node name=tdnnf10.batchnorm component=tdnnf10.batchnorm input=tdnnf10.relu input-dim=1024 output-dim=1024
component-node name=tdnnf10.dropout component=tdnnf10.dropout input=tdnnf10.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf10.noop component=tdnnf10.noop input=Sum(Scale(0.66, tdnnf9.noop), tdnnf10.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf11.linear component=tdnnf11.linear input=tdnnf10.noop input-dim=1024 output-dim=128
component-node name=tdnnf11.affine component=tdnnf11.affine input=tdnnf11.linear input-dim=128 output-dim=1024
component-node name=tdnnf11.relu component=tdnnf11.relu input=tdnnf11.affine input-dim=1024 output-dim=1024
component-node name=tdnnf11.batchnorm component=tdnnf11.batchnorm input=tdnnf11.relu input-dim=1024 output-dim=1024
component-node name=tdnnf11.dropout component=tdnnf11.dropout input=tdnnf11.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf11.noop component=tdnnf11.noop input=Sum(Scale(0.66, tdnnf10.noop), tdnnf11.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf12.linear component=tdnnf12.linear input=tdnnf11.noop input-dim=1024 output-dim=128
component-node name=tdnnf12.affine component=tdnnf12.affine input=tdnnf12.linear input-dim=128 output-dim=1024
component-node name=tdnnf12.relu component=tdnnf12.relu input=tdnnf12.affine input-dim=1024 output-dim=1024
component-node name=tdnnf12.batchnorm component=tdnnf12.batchnorm input=tdnnf12.relu input-dim=1024 output-dim=1024
component-node name=tdnnf12.dropout component=tdnnf12.dropout input=tdnnf12.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf12.noop component=tdnnf12.noop input=Sum(Scale(0.66, tdnnf11.noop), tdnnf12.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf13.linear component=tdnnf13.linear input=tdnnf12.noop input-dim=1024 output-dim=128
component-node name=tdnnf13.affine component=tdnnf13.affine input=tdnnf13.linear input-dim=128 output-dim=1024
component-node name=tdnnf13.relu component=tdnnf13.relu input=tdnnf13.affine input-dim=1024 output-dim=1024
component-node name=tdnnf13.batchnorm component=tdnnf13.batchnorm input=tdnnf13.relu input-dim=1024 output-dim=1024
component-node name=tdnnf13.dropout component=tdnnf13.dropout input=tdnnf13.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf13.noop component=tdnnf13.noop input=Sum(Scale(0.66, tdnnf12.noop), tdnnf13.dropout) input-dim=1024 output-dim=1024
component-node name=prefinal-l component=prefinal-l input=tdnnf13.noop input-dim=1024 output-dim=256
component-node name=prefinal-chain.affine component=prefinal-chain.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-chain.relu component=prefinal-chain.relu input=prefinal-chain.affine input-dim=1024 output-dim=1024
component-node name=prefinal-chain.batchnorm1 component=prefinal-chain.batchnorm1 input=prefinal-chain.relu input-dim=1024 output-dim=1024
component-node name=prefinal-chain.linear component=prefinal-chain.linear input=prefinal-chain.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-chain.batchnorm2 component=prefinal-chain.batchnorm2 input=prefinal-chain.linear input-dim=256 output-dim=256
component-node name=output.affine component=output.affine input=prefinal-chain.batchnorm2 input-dim=256 output-dim=2824
output-node name=output input=output.affine dim=2824 objective=linear
component-node name=prefinal-xent.affine component=prefinal-xent.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-xent.relu component=prefinal-xent.relu input=prefinal-xent.affine input-dim=1024 output-dim=1024
component-node name=prefinal-xent.batchnorm1 component=prefinal-xent.batchnorm1 input=prefinal-xent.relu input-dim=1024 output-dim=1024
component-node name=prefinal-xent.linear component=prefinal-xent.linear input=prefinal-xent.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-xent.batchnorm2 component=prefinal-xent.batchnorm2 input=prefinal-xent.linear input-dim=256 output-dim=256
component-node name=output-xent.affine component=output-xent.affine input=prefinal-xent.batchnorm2 input-dim=256 output-dim=2824
component-node name=output-xent.log-softmax component=output-xent.log-softmax input=output-xent.affine input-dim=2824 output-dim=2824
output-node name=output-xent input=output-xent.log-softmax dim=2824 objective=linear
component name=lda type=FixedAffineComponent, input-dim=220, output-dim=220, linear-params-rms=0.005757, bias-{mean,stddev}=-0.001083,0.01285
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=220, output-dim=1024, learning-rate=5.38609e-06, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.05163, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.59,0.68,0.69,0.70 0.71,0.73,0.77,0.80,0.81 0.83,0.84,0.86,0.89), mean=0.765, stddev=0.0387], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.6,1.6,1.6 1.6,1.6,1.7,1.7,1.7 1.7,1.7,1.7,1.9), mean=1.65, stddev=0.0437], bias-{mean,stddev}=-0.01566,0.7576, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=3.24e+06, self-repaired-proportion=0.849026, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.03,0.64,0.97 1.3,1.6,1.7,2.7), mean=0.301, stddev=0.442], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.43,1.0,1.0 1.0,1.0,1.0,1.0), mean=0.489, stddev=0.471], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.03,0.04,0.04 0.05,0.06,0.13,0.19,0.20 0.21,0.22,0.22,0.26), mean=0.129, stddev=0.0613], oderiv-count=4.84608e+06
component name=tdnn1.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=45879, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.03,0.64,0.97 1.3,1.6,1.7,2.7), mean=0.3, stddev=0.441], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.05,0.09,0.11 0.13,0.15,0.16,0.23), mean=0.046, stddev=0.0465]
component name=tdnn1.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.333333, continuous=true
component name=tdnnf2.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=5.38609e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.01674, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.76,0.76,0.76,0.76 0.76,0.76,0.76,0.76,0.76 0.76,0.76,0.76,0.76), mean=0.758, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.15,0.16,0.16 0.17,0.18,0.19,0.20,0.21 0.22,0.22,0.23,0.27), mean=0.189, stddev=0.0157], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=5.38609e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.04813, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.66,0.69,0.70,0.71 0.72,0.74,0.77,0.80,0.82 0.83,0.84,0.85,0.88), mean=0.769, stddev=0.0356], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.5,1.5,1.5 1.5,1.5,1.5,1.6,1.6 1.6,1.6,1.6,1.6), mean=1.54, stddev=0.033], bias-{mean,stddev}=0.003863,0.7428, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=3.18e+06, self-repaired-proportion=0.253131, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-06,2e-05,7e-05,0.0001 0.008,0.03,0.23,0.66,0.93 1.2,1.5,1.9,2.9), mean=0.371, stddev=0.416], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-05,0.0002,0.0005,0.001 0.03,0.10,0.50,0.89,0.96 0.99,1.0,1.0,1.0), mean=0.499, stddev=0.347], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.005,0.005,0.005 0.006,0.007,0.01,0.03,0.06 0.10,0.11,0.11,0.13), mean=0.023, stddev=0.0279], oderiv-count=4.69005e+06
component name=tdnnf2.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=45367, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-07,2e-05,6e-05,0.0001 0.007,0.03,0.22,0.67,0.93 1.2,1.5,1.8,2.9), mean=0.37, stddev=0.416], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.002,0.004,0.006 0.06,0.14,0.32,0.46,0.52 0.58,0.64,0.68,0.93), mean=0.305, stddev=0.175]
component name=tdnnf2.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.333333, continuous=true
component name=tdnnf2.noop type=NoOpComponent, dim=1024
component name=tdnnf3.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=5.38609e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.01667, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.75,0.75,0.75,0.75 0.75,0.75,0.75,0.75,0.75 0.75,0.75,0.75,0.75), mean=0.754, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.15,0.16,0.16 0.17,0.18,0.19,0.20,0.21 0.21,0.22,0.23,0.26), mean=0.188, stddev=0.0149], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=5.38609e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.04807, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.66,0.69,0.70,0.71 0.72,0.74,0.77,0.80,0.81 0.83,0.84,0.85,0.88), mean=0.768, stddev=0.0356], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.5,1.5,1.5 1.5,1.5,1.5,1.6,1.6 1.6,1.6,1.6,1.7), mean=1.54, stddev=0.0359], bias-{mean,stddev}=-0.005491,0.741, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=2.92e+06, self-repaired-proportion=0.0732422, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-05,0.0003,0.01,0.03 0.06,0.10,0.34,0.73,1.0 1.2,1.5,1.6,2.7), mean=0.445, stddev=0.39], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(7e-05,0.002,0.02,0.07 0.11,0.19,0.51,0.79,0.89 0.93,0.97,0.98,1.0), mean=0.499, stddev=0.282], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.003,0.003 0.004,0.004,0.006,0.009,0.01 0.02,0.03,0.08,0.09), mean=0.00818, stddev=0.0104], oderiv-count=4.46938e+06
component name=tdnnf3.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=44855, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-05,0.0003,0.01,0.03 0.06,0.10,0.34,0.73,1.0 1.2,1.5,1.6,2.7), mean=0.445, stddev=0.39], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.01,0.11,0.18 0.23,0.31,0.50,0.67,0.75 0.81,0.88,0.94,1.2), mean=0.498, stddev=0.201]
component name=tdnnf3.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.333333, continuous=true
component name=tdnnf3.noop type=NoOpComponent, dim=1024
component name=tdnnf4.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=5.38609e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.01666, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.75,0.75,0.75,0.75 0.75,0.75,0.75,0.75,0.75 0.75,0.75,0.75,0.75), mean=0.754, stddev=0.000244], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.16,0.16,0.17 0.17,0.18,0.19,0.20,0.20 0.21,0.22,0.23,0.29), mean=0.188, stddev=0.014], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=5.38609e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.04796, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.67,0.69,0.70,0.71 0.72,0.74,0.77,0.80,0.81 0.82,0.84,0.85,0.90), mean=0.767, stddev=0.0354], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.5,1.5 1.5,1.5,1.5,1.6,1.6 1.6,1.6,1.6,1.6), mean=1.53, stddev=0.0342], bias-{mean,stddev}=0.01045,0.8082, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=1e+06, self-repaired-proportion=0.0552706, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(5e-05,0.02,0.03,0.05 0.09,0.15,0.40,0.81,1.1 1.4,1.6,1.9,3.0), mean=0.514, stddev=0.431], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0003,0.03,0.04,0.08 0.13,0.23,0.50,0.78,0.88 0.93,0.96,0.97,1.0), mean=0.503, stddev=0.268], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.004,0.005 0.005,0.006,0.007,0.01,0.01 0.02,0.02,0.03,0.14), mean=0.0095, stddev=0.0116], oderiv-count=1.58598e+06
component name=tdnnf4.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=14951.7, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(5e-05,0.02,0.03,0.05 0.09,0.15,0.40,0.81,1.1 1.4,1.6,1.8,3.0), mean=0.513, stddev=0.431], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.16,0.19,0.25 0.33,0.42,0.62,0.79,0.87 0.93,1.0,1.1,1.3), mean=0.606, stddev=0.213]
component name=tdnnf4.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.333333, continuous=true
component name=tdnnf4.noop type=NoOpComponent, dim=1024
component name=tdnnf5.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=5.38609e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=0, linear-params-rms=0.02317, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.74,0.74,0.74,0.74 0.74,0.74,0.74,0.74,0.74 0.74,0.74,0.74,0.74), mean=0.741, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.20,0.21,0.22,0.23 0.24,0.25,0.26,0.28,0.28 0.29,0.30,0.31,0.32), mean=0.261, stddev=0.0183], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=5.38609e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0, linear-params-rms=0.0679, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.61,0.65,0.66,0.69 0.71,0.72,0.76,0.81,0.83 0.85,0.88,0.88,0.92), mean=0.767, stddev=0.0505], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2.1,2.1,2.1,2.1 2.1,2.1,2.2,2.2,2.2 2.2,2.3,2.3,2.3), mean=2.17, stddev=0.0476], bias-{mean,stddev}=-0.0003371,0.7738, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=1.01e+06, self-repaired-proportion=0.0495262, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.02,0.04,0.07 0.10,0.16,0.40,0.82,1.1 1.4,1.7,1.8,2.6), mean=0.512, stddev=0.416], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0005,0.03,0.04,0.10 0.15,0.23,0.48,0.76,0.85 0.91,0.95,0.98,1.0), mean=0.495, stddev=0.259], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.003,0.004,0.004 0.004,0.005,0.007,0.01,0.01 0.01,0.02,0.03,0.12), mean=0.00823, stddev=0.00929], oderiv-count=1.57709e+06
component name=tdnnf5.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=14951.7, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(8e-05,0.02,0.04,0.07 0.10,0.16,0.39,0.82,1.1 1.4,1.7,1.8,2.6), mean=0.512, stddev=0.416], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.14,0.19,0.29 0.36,0.44,0.64,0.84,0.94 1.0,1.1,1.1,1.3), mean=0.641, stddev=0.225]
component name=tdnnf5.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.333333, continuous=true
component name=tdnnf5.noop type=NoOpComponent, dim=1024
component name=tdnnf6.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=5.38609e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01649, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.75,0.75,0.75,0.75 0.75,0.75,0.75,0.75,0.75 0.75,0.75,0.75,0.75), mean=0.746, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.15,0.16,0.17 0.17,0.18,0.19,0.20,0.20 0.21,0.21,0.22,0.24), mean=0.186, stddev=0.0134], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=5.38609e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.04804, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.68,0.69,0.71 0.72,0.74,0.77,0.80,0.81 0.82,0.84,0.85,0.87), mean=0.768, stddev=0.0348], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.5,1.5,1.5 1.5,1.5,1.5,1.6,1.6 1.6,1.6,1.6,1.6), mean=1.54, stddev=0.0334], bias-{mean,stddev}=-0.02185,0.7335, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.33e+05, self-repaired-proportion=0.0185616, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0004,0.04,0.05,0.08 0.14,0.21,0.44,0.81,1.0 1.2,1.5,1.6,2.8), mean=0.523, stddev=0.38], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.04,0.07,0.11 0.17,0.26,0.48,0.72,0.81 0.87,0.91,0.94,0.99), mean=0.49, stddev=0.236], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.003,0.003,0.004 0.004,0.004,0.006,0.008,0.01 0.01,0.02,0.02,0.10), mean=0.00676, stddev=0.00529], oderiv-count=1.4832e+06
component name=tdnnf6.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=14439.7, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0005,0.04,0.05,0.09 0.13,0.21,0.44,0.81,1.0 1.2,1.5,1.6,2.8), mean=0.522, stddev=0.38], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.23,0.27,0.35 0.41,0.51,0.70,0.87,0.96 1.0,1.1,1.2,1.4), mean=0.695, stddev=0.214]
component name=tdnnf6.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.333333, continuous=true
component name=tdnnf6.noop type=NoOpComponent, dim=1024
component name=tdnnf7.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=5.38609e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01653, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.75,0.75,0.75,0.75 0.75,0.75,0.75,0.75,0.75 0.75,0.75,0.75,0.75), mean=0.748, stddev=-nan], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.15,0.16,0.16 0.17,0.18,0.19,0.20,0.20 0.21,0.21,0.22,0.24), mean=0.186, stddev=0.0137], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=5.38609e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.04813, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.69,0.70,0.71 0.72,0.74,0.77,0.80,0.81 0.83,0.84,0.85,0.89), mean=0.769, stddev=0.0353], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.5,1.5,1.5 1.5,1.5,1.5,1.6,1.6 1.6,1.6,1.6,1.7), mean=1.54, stddev=0.0347], bias-{mean,stddev}=0.01394,0.7819, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.54e+05, self-repaired-proportion=0.0331533, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.03,0.06,0.08 0.13,0.20,0.44,0.85,1.1 1.4,1.7,1.9,2.7), mean=0.552, stddev=0.422], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.05,0.06,0.12 0.16,0.26,0.49,0.74,0.83 0.90,0.94,0.97,0.99), mean=0.501, stddev=0.247], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.003,0.003,0.003 0.004,0.004,0.005,0.008,0.01 0.01,0.02,0.02,0.09), mean=0.00642, stddev=0.00405], oderiv-count=1.47046e+06
component name=tdnnf7.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=13927.7, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.03,0.06,0.08 0.12,0.20,0.44,0.85,1.1 1.4,1.7,1.9,2.7), mean=0.552, stddev=0.421], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.21,0.24,0.34 0.40,0.50,0.70,0.89,0.98 1.1,1.1,1.2,1.3), mean=0.697, stddev=0.223]
component name=tdnnf7.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.333333, continuous=true
component name=tdnnf7.noop type=NoOpComponent, dim=1024
component name=tdnnf8.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=5.38609e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01651, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.75,0.75,0.75,0.75 0.75,0.75,0.75,0.75,0.75 0.75,0.75,0.75,0.75), mean=0.747, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.15,0.16,0.16 0.17,0.18,0.19,0.20,0.20 0.21,0.22,0.22,0.25), mean=0.186, stddev=0.014], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=5.38609e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.04809, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.69,0.70,0.71 0.72,0.74,0.77,0.80,0.81 0.83,0.84,0.85,0.89), mean=0.769, stddev=0.0352], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.5,1.5,1.5 1.5,1.5,1.5,1.6,1.6 1.6,1.6,1.6,1.7), mean=1.54, stddev=0.0355], bias-{mean,stddev}=-0.01983,0.7952, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.74e+05, self-repaired-proportion=0.0348436, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(9e-05,0.03,0.05,0.08 0.12,0.19,0.44,0.82,1.1 1.4,1.7,1.9,2.4), mean=0.541, stddev=0.413], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0006,0.04,0.06,0.10 0.16,0.26,0.49,0.73,0.83 0.88,0.95,0.96,0.99), mean=0.491, stddev=0.245], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.003,0.003 0.004,0.004,0.005,0.008,0.009 0.01,0.01,0.02,0.11), mean=0.00651, stddev=0.00745], oderiv-count=1.38528e+06
component name=tdnnf8.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=13415.7, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(7e-05,0.03,0.05,0.07 0.12,0.19,0.44,0.82,1.1 1.4,1.7,1.9,2.4), mean=0.541, stddev=0.413], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.21,0.25,0.33 0.40,0.49,0.70,0.90,0.99 1.1,1.2,1.3,1.6), mean=0.699, stddev=0.234]
component name=tdnnf8.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.333333, continuous=true
component name=tdnnf8.noop type=NoOpComponent, dim=1024
component name=tdnnf9.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=5.38609e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01645, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.74,0.74,0.74,0.74 0.74,0.74,0.74,0.74,0.74 0.74,0.74,0.74,0.74), mean=0.744, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.15,0.16,0.16 0.17,0.17,0.19,0.20,0.20 0.21,0.22,0.22,0.25), mean=0.186, stddev=0.0142], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=5.38609e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.04808, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.69,0.70,0.71 0.72,0.74,0.77,0.80,0.81 0.83,0.84,0.85,0.88), mean=0.768, stddev=0.0351], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.5,1.5,1.5 1.5,1.5,1.5,1.6,1.6 1.6,1.6,1.6,1.7), mean=1.54, stddev=0.0347], bias-{mean,stddev}=-0.008422,0.7773, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.23e+05, self-repaired-proportion=0.0209591, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.04,0.05,0.08 0.12,0.20,0.46,0.84,1.1 1.3,1.6,1.8,2.7), mean=0.551, stddev=0.401], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0008,0.05,0.06,0.11 0.16,0.27,0.50,0.73,0.82 0.87,0.93,0.95,0.99), mean=0.495, stddev=0.239], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.003,0.003 0.003,0.004,0.005,0.007,0.009 0.01,0.01,0.02,0.12), mean=0.00589, stddev=0.00574], oderiv-count=1.36282e+06
component name=tdnnf9.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=12903.7, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.04,0.05,0.08 0.12,0.20,0.46,0.84,1.1 1.3,1.6,1.8,2.7), mean=0.55, stddev=0.401], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.21,0.26,0.33 0.40,0.49,0.71,0.91,1.0 1.1,1.2,1.2,1.4), mean=0.705, stddev=0.231]
component name=tdnnf9.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.333333, continuous=true
component name=tdnnf9.noop type=NoOpComponent, dim=1024
component name=tdnnf10.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=5.38609e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01636, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.74,0.74,0.74,0.74 0.74,0.74,0.74,0.74,0.74 0.74,0.74,0.74,0.74), mean=0.74, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.14,0.15,0.16 0.17,0.17,0.19,0.20,0.20 0.21,0.21,0.22,0.24), mean=0.185, stddev=0.014], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=5.38609e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.04803, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.67,0.70,0.70,0.71 0.72,0.74,0.77,0.79,0.81 0.83,0.84,0.85,0.88), mean=0.768, stddev=0.0343], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.5,1.5,1.5 1.5,1.5,1.5,1.6,1.6 1.6,1.6,1.6,1.6), mean=1.54, stddev=0.0338], bias-{mean,stddev}=0.05266,0.781, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.75e+05, self-repaired-proportion=0.0261719, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.04,0.06,0.10 0.13,0.22,0.47,0.91,1.2 1.3,1.7,1.9,2.5), mean=0.583, stddev=0.424], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.06,0.08,0.13 0.18,0.27,0.51,0.76,0.83 0.89,0.94,0.96,0.99), mean=0.512, stddev=0.242], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.003 0.003,0.003,0.004,0.006,0.008 0.01,0.01,0.02,0.10), mean=0.00539, stddev=0.00519], oderiv-count=1.29702e+06
component name=tdnnf10.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=12391.7, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.03,0.06,0.09 0.13,0.21,0.47,0.91,1.2 1.3,1.7,1.9,2.5), mean=0.581, stddev=0.424], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.008,0.19,0.28,0.34 0.42,0.51,0.71,0.92,1.0 1.1,1.2,1.3,1.7), mean=0.718, stddev=0.238]
component name=tdnnf10.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.333333, continuous=true
component name=tdnnf10.noop type=NoOpComponent, dim=1024
component name=tdnnf11.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=5.38609e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01636, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.74,0.74,0.74,0.74 0.74,0.74,0.74,0.74,0.74 0.74,0.74,0.74,0.74), mean=0.74, stddev=0.000244], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.15,0.16,0.16 0.17,0.17,0.18,0.20,0.20 0.21,0.22,0.22,0.25), mean=0.185, stddev=0.0137], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=5.38609e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.04796, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.66,0.69,0.70,0.71 0.72,0.74,0.77,0.80,0.81 0.82,0.84,0.85,0.89), mean=0.766, stddev=0.036], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.5,1.5,1.5 1.5,1.5,1.5,1.6,1.6 1.6,1.6,1.6,1.6), mean=1.53, stddev=0.033], bias-{mean,stddev}=-0.04094,0.8005, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.45e+05, self-repaired-proportion=0.020027, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0003,0.04,0.06,0.09 0.12,0.19,0.45,0.86,1.1 1.3,1.6,1.7,2.4), mean=0.551, stddev=0.407], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.04,0.08,0.12 0.16,0.24,0.49,0.72,0.82 0.87,0.92,0.95,0.99), mean=0.486, stddev=0.241], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.003 0.003,0.003,0.004,0.006,0.008 0.01,0.01,0.01,0.09), mean=0.00539, stddev=0.00625], oderiv-count=1.25581e+06
component name=tdnnf11.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11879.7, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.04,0.06,0.09 0.12,0.19,0.45,0.86,1.1 1.3,1.6,1.7,2.4), mean=0.55, stddev=0.407], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.009,0.23,0.27,0.33 0.39,0.49,0.71,0.91,1.0 1.1,1.2,1.3,1.6), mean=0.71, stddev=0.236]
component name=tdnnf11.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.333333, continuous=true
component name=tdnnf11.noop type=NoOpComponent, dim=1024
component name=tdnnf12.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=5.38609e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01629, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.74,0.74,0.74,0.74 0.74,0.74,0.74,0.74,0.74 0.74,0.74,0.74,0.74), mean=0.737, stddev=-nan], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.15,0.15,0.16 0.17,0.17,0.18,0.19,0.20 0.21,0.21,0.22,0.24), mean=0.184, stddev=0.0139], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=5.38609e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.04784, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.66,0.69,0.70,0.71 0.72,0.73,0.76,0.79,0.81 0.82,0.84,0.85,0.87), mean=0.765, stddev=0.0345], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.5,1.5,1.5 1.5,1.5,1.5,1.6,1.6 1.6,1.6,1.6,1.6), mean=1.53, stddev=0.0321], bias-{mean,stddev}=-0.02104,0.7783, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.79e+05, self-repaired-proportion=0.0175746, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.05,0.06,0.09 0.14,0.21,0.45,0.87,1.1 1.4,1.6,1.8,2.5), mean=0.559, stddev=0.408], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.05,0.08,0.12 0.17,0.26,0.48,0.71,0.82 0.88,0.92,0.94,0.98), mean=0.489, stddev=0.234], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.003 0.003,0.003,0.004,0.006,0.007 0.008,0.01,0.01,0.08), mean=0.00484, stddev=0.00475], oderiv-count=1.16422e+06
component name=tdnnf12.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11367.7, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.05,0.06,0.09 0.14,0.21,0.45,0.87,1.1 1.4,1.6,1.8,2.5), mean=0.557, stddev=0.408], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.007,0.26,0.29,0.35 0.42,0.51,0.71,0.91,1.0 1.1,1.2,1.2,1.4), mean=0.712, stddev=0.228]
component name=tdnnf12.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.333333, continuous=true
component name=tdnnf12.noop type=NoOpComponent, dim=1024
component name=tdnnf13.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=5.38609e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01615, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.73,0.73,0.73,0.73 0.73,0.73,0.73,0.73,0.73 0.73,0.73,0.73,0.73), mean=0.731, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.15,0.15,0.16 0.17,0.17,0.18,0.19,0.20 0.21,0.21,0.21,0.24), mean=0.182, stddev=0.0138], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=5.38609e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.04788, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.69,0.70,0.71 0.72,0.74,0.77,0.79,0.81 0.82,0.84,0.85,0.90), mean=0.765, stddev=0.0362], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.5,1.5,1.5 1.5,1.5,1.5,1.6,1.6 1.6,1.6,1.6,1.6), mean=1.53, stddev=0.0346], bias-{mean,stddev}=-0.009974,0.7719, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.43e+05, self-repaired-proportion=0.0127089, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(8e-05,0.04,0.07,0.10 0.15,0.23,0.47,0.90,1.1 1.4,1.6,1.8,2.2), mean=0.578, stddev=0.4], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0004,0.06,0.09,0.14 0.19,0.28,0.48,0.71,0.80 0.85,0.90,0.94,0.98), mean=0.493, stddev=0.224], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.003,0.003,0.004,0.005,0.006 0.007,0.009,0.01,0.07), mean=0.00436, stddev=0.00407], oderiv-count=1.10554e+06
component name=tdnnf13.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=10855.7, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.04,0.07,0.10 0.15,0.23,0.48,0.90,1.1 1.4,1.6,1.8,2.2), mean=0.578, stddev=0.4], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.007,0.26,0.29,0.37 0.44,0.53,0.73,0.94,1.0 1.1,1.2,1.3,1.4), mean=0.735, stddev=0.234]
component name=tdnnf13.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.333333, continuous=true
component name=tdnnf13.noop type=NoOpComponent, dim=1024
component name=prefinal-l type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=5.38609e-06, l2-regularize=0.008, max-change=0.75, params-rms=0.02181, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.70,0.70,0.70,0.70 0.70,0.70,0.70,0.70,0.70 0.70,0.70,0.70,0.70), mean=0.698, stddev=0.000173], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.30,0.31,0.31 0.32,0.33,0.35,0.37,0.37 0.38,0.39,0.40,0.41), mean=0.348, stddev=0.0215], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=5.38609e-06, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.0477, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.66,0.68,0.69,0.71 0.72,0.73,0.76,0.79,0.81 0.82,0.83,0.84,0.86), mean=0.762, stddev=0.0343], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.5,1.5 1.5,1.5,1.5,1.6,1.6 1.6,1.6,1.6,1.6), mean=1.53, stddev=0.032], bias-{mean,stddev}=-0.005808,0.7866, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.1e+05, self-repaired-proportion=0.0317203, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-05,0.0001,0.04,0.08 0.12,0.19,0.43,0.83,1.1 1.3,1.7,1.9,2.4), mean=0.537, stddev=0.418], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0003,0.001,0.07,0.11 0.17,0.26,0.49,0.73,0.83 0.90,0.94,0.96,0.99), mean=0.495, stddev=0.246], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.002,0.002,0.002 0.003,0.003,0.004,0.006,0.007 0.009,0.01,0.05,0.08), mean=0.00521, stddev=0.00674], oderiv-count=1.10566e+06
component name=prefinal-chain.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=10855.7, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-05,0.0002,0.04,0.08 0.12,0.19,0.43,0.83,1.1 1.3,1.7,1.9,2.4), mean=0.537, stddev=0.417], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.009,0.21,0.30 0.36,0.46,0.65,0.83,0.94 1.0,1.1,1.2,1.4), mean=0.651, stddev=0.226]
component name=prefinal-chain.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=5.38609e-06, l2-regularize=0.008, max-change=0.75, params-rms=0.02332, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.75,0.75,0.75,0.75 0.75,0.75,0.75,0.75,0.75 0.75,0.75,0.75,0.75), mean=0.746, stddev=0.000244], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.26,0.31,0.32,0.33 0.34,0.35,0.37,0.39,0.40 0.41,0.42,0.43,0.47), mean=0.372, stddev=0.0262], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=10855.7, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-7e-08,-6e-08,-6e-08,-5e-08 -4e-08,-3e-08,-3e-10,2e-08,3e-08 5e-08,5e-08,6e-08,7e-08), mean=-1.5e-09, stddev=2.74e-08], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.66,0.68,0.69,0.70 0.72,0.74,0.78,0.82,0.85 0.88,0.90,0.95,1.0), mean=0.784, stddev=0.0545]
component name=output.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=2824, learning-rate=5.38609e-06, l2-regularize=0.002, max-change=1.5, linear-params-rms=0.01049, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0003,0.002,0.007,0.02 0.04,0.06,0.15,0.22,0.25 0.28,0.31,0.32,0.44), mean=0.147, stddev=0.0811], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.42,0.45,0.46,0.48 0.50,0.52,0.55,0.59,0.61 0.62,0.64,0.64,0.68), mean=0.556, stddev=0.0426], bias-{mean,stddev}=2.105e-05,0.03258, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=5.38609e-06, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.04736, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.67,0.68,0.70 0.71,0.73,0.76,0.79,0.80 0.82,0.83,0.84,0.88), mean=0.757, stddev=0.0361], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.4,1.5 1.5,1.5,1.5,1.5,1.6 1.6,1.6,1.6,1.6), mean=1.52, stddev=0.0335], bias-{mean,stddev}=2.004e-05,0.7643, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.19e+05, self-repaired-proportion=0.0252933, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(8e-06,0.04,0.06,0.10 0.14,0.22,0.44,0.82,1.1 1.3,1.6,1.8,2.7), mean=0.543, stddev=0.395], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(6e-05,0.05,0.07,0.13 0.18,0.27,0.48,0.71,0.83 0.90,0.93,0.96,0.99), mean=0.491, stddev=0.236], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0006,0.0008,0.0008,0.0009 0.001,0.001,0.001,0.002,0.002 0.003,0.003,0.004,0.03), mean=0.00173, stddev=0.00213], oderiv-count=1.09504e+06
component name=prefinal-xent.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=10855.7, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(7e-06,0.04,0.06,0.10 0.14,0.21,0.44,0.83,1.1 1.3,1.6,1.8,2.7), mean=0.543, stddev=0.394], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0009,0.22,0.27,0.36 0.43,0.50,0.68,0.87,0.96 1.0,1.1,1.1,1.3), mean=0.682, stddev=0.208]
component name=prefinal-xent.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=5.38609e-06, l2-regularize=0.008, max-change=0.75, params-rms=0.02178, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.70,0.70,0.70,0.70 0.70,0.70,0.70,0.70,0.70 0.70,0.70,0.70,0.70), mean=0.697, stddev=0.000244], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.26,0.28,0.29,0.30 0.31,0.33,0.35,0.37,0.38 0.39,0.40,0.41,0.42), mean=0.347, stddev=0.0268], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=10855.7, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1e-07,-7e-08,-7e-08,-6e-08 -4e-08,-2e-08,-4e-10,2e-08,3e-08 4e-08,5e-08,6e-08,9e-08), mean=-2.12e-09, stddev=2.92e-08], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.63,0.64,0.66 0.68,0.70,0.76,0.81,0.83 0.85,0.87,0.89,1.0), mean=0.758, stddev=0.0591]
component name=output-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=2824, learning-rate=2.69304e-05, l2-regularize=0.002, learning-rate-factor=5, max-change=1.5, linear-params-rms=0.02533, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.02,0.02,0.02 0.03,0.04,0.20,0.60,0.71 0.79,0.86,0.90,1.2), mean=0.302, stddev=0.271], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.83,0.86,0.88,0.93 1.0,1.2,1.4,1.5,1.6 1.6,1.6,1.7,1.7), mean=1.33, stddev=0.205], bias-{mean,stddev}=1.713e-08,0.07323, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-xent.log-softmax type=LogSoftmaxComponent, dim=2824, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,2e-07,4e-05,9e-05 0.0002,0.0002,0.0006,0.001,0.002 0.003,0.004,0.004,0.04), mean=0.000928, stddev=0.00118], oderiv-count=1.11827e+06
nnet3-show-progress --use-gpu=no telugu_exp/chain_cleaned_1d/tdnn1d_sp/36.mdl telugu_exp/chain_cleaned_1d/tdnn1d_sp/37.mdl 
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:SelectGpuId():cu-device.cc:168) Manually selected to compute on CPU.
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:0.121815 tdnnf2.linear:0.124244 tdnnf2.affine:0.116942 tdnnf3.linear:0.0944528 tdnnf3.affine:0.10894 tdnnf4.linear:0.078772 tdnnf4.affine:0.110082 tdnnf5.linear:0.0558959 tdnnf5.affine:0.105161 tdnnf6.linear:0.072242 tdnnf6.affine:0.104058 tdnnf7.linear:0.0717248 tdnnf7.affine:0.107127 tdnnf8.linear:0.0697649 tdnnf8.affine:0.107643 tdnnf9.linear:0.0675358 tdnnf9.affine:0.106269 tdnnf10.linear:0.0662461 tdnnf10.affine:0.1064 tdnnf11.linear:0.0632307 tdnnf11.affine:0.107476 tdnnf12.linear:0.063511 tdnnf12.affine:0.105863 tdnnf13.linear:0.0620159 tdnnf13.affine:0.105626 prefinal-l:0.0675928 prefinal-chain.affine:0.106713 prefinal-chain.linear:0.0498561 output.affine:0.0791125 prefinal-xent.affine:0.104916 prefinal-xent.linear:0.0476258 output-xent.affine:0.139828 ]
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:34.4742 tdnnf2.linear:8.57125 tdnnf2.affine:34.239 tdnnf3.linear:8.53561 tdnnf3.affine:34.1765 tdnnf4.linear:8.52798 tdnnf4.affine:35.6637 tdnnf5.linear:8.38784 tdnnf5.affine:34.8925 tdnnf6.linear:8.44071 tdnnf6.affine:34.0067 tdnnf7.linear:8.46175 tdnnf7.affine:35.1219 tdnnf8.linear:8.4553 tdnnf8.affine:35.4136 tdnnf9.linear:8.42295 tdnnf9.affine:34.9951 tdnnf10.linear:8.37379 tdnnf10.affine:35.1028 tdnnf11.linear:8.37585 tdnnf11.affine:35.5072 tdnnf12.linear:8.34226 tdnnf12.affine:34.9391 tdnnf13.linear:8.26828 tdnnf13.affine:34.8028 prefinal-l:11.1688 prefinal-chain.affine:35.0738 prefinal-chain.linear:11.9392 output.affine:9.08583 prefinal-xent.affine:34.441 prefinal-xent.linear:11.1513 output-xent.affine:21.8873 ]
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.00352305 tdnnf2.linear:0.0144582 tdnnf2.affine:0.00340491 tdnnf3.linear:0.0110351 tdnnf3.affine:0.00317802 tdnnf4.linear:0.00921032 tdnnf4.affine:0.00307753 tdnnf5.linear:0.00664394 tdnnf5.affine:0.00300498 tdnnf6.linear:0.00853378 tdnnf6.affine:0.00305093 tdnnf7.linear:0.00845233 tdnnf7.affine:0.00304121 tdnnf8.linear:0.00822779 tdnnf8.affine:0.00303067 tdnnf9.linear:0.00799555 tdnnf9.affine:0.00302779 tdnnf10.linear:0.00788882 tdnnf10.affine:0.00302219 tdnnf11.linear:0.00752779 tdnnf11.affine:0.00301799 tdnnf12.linear:0.00759162 tdnnf12.affine:0.00302104 tdnnf13.linear:0.00747925 tdnnf13.affine:0.00302605 prefinal-l:0.00603197 prefinal-chain.affine:0.00303354 prefinal-chain.linear:0.00416338 output.affine:0.00873141 prefinal-xent.affine:0.00303716 prefinal-xent.linear:0.00425717 output-xent.affine:0.00640179 ]
# Accounting: time=0 threads=1
# Ended (code 0) at Mon Jul 18 20:35:12 EDT 2022, elapsed time 0 seconds
