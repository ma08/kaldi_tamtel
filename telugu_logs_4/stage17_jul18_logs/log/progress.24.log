# nnet3-am-info telugu_exp/chain_cleaned_1d/tdnn1d_sp/24.mdl && nnet3-show-progress --use-gpu=no telugu_exp/chain_cleaned_1d/tdnn1d_sp/23.mdl telugu_exp/chain_cleaned_1d/tdnn1d_sp/24.mdl 
# Started at Mon Jul 18 20:02:11 EDT 2022
#
nnet3-am-info telugu_exp/chain_cleaned_1d/tdnn1d_sp/24.mdl 
input-dim: 40
ivector-dim: 100
num-pdfs: 2824
prior-dimension: 0
# Nnet info follows.
left-context: 28
right-context: 28
num-parameters: 9032208
modulus: 1
input-node name=ivector dim=100
input-node name=input dim=40
component-node name=lda component=lda input=Append(Offset(input, -1), input, Offset(input, 1), ReplaceIndex(ivector, t, 0)) input-dim=220 output-dim=220
component-node name=tdnn1.affine component=tdnn1.affine input=lda input-dim=220 output-dim=1024
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=1024 output-dim=1024
component-node name=tdnn1.batchnorm component=tdnn1.batchnorm input=tdnn1.relu input-dim=1024 output-dim=1024
component-node name=tdnn1.dropout component=tdnn1.dropout input=tdnn1.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.linear component=tdnnf2.linear input=tdnn1.dropout input-dim=1024 output-dim=128
component-node name=tdnnf2.affine component=tdnnf2.affine input=tdnnf2.linear input-dim=128 output-dim=1024
component-node name=tdnnf2.relu component=tdnnf2.relu input=tdnnf2.affine input-dim=1024 output-dim=1024
component-node name=tdnnf2.batchnorm component=tdnnf2.batchnorm input=tdnnf2.relu input-dim=1024 output-dim=1024
component-node name=tdnnf2.dropout component=tdnnf2.dropout input=tdnnf2.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.noop component=tdnnf2.noop input=Sum(Scale(0.66, tdnn1.dropout), tdnnf2.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf3.linear component=tdnnf3.linear input=tdnnf2.noop input-dim=1024 output-dim=128
component-node name=tdnnf3.affine component=tdnnf3.affine input=tdnnf3.linear input-dim=128 output-dim=1024
component-node name=tdnnf3.relu component=tdnnf3.relu input=tdnnf3.affine input-dim=1024 output-dim=1024
component-node name=tdnnf3.batchnorm component=tdnnf3.batchnorm input=tdnnf3.relu input-dim=1024 output-dim=1024
component-node name=tdnnf3.dropout component=tdnnf3.dropout input=tdnnf3.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf3.noop component=tdnnf3.noop input=Sum(Scale(0.66, tdnnf2.noop), tdnnf3.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf4.linear component=tdnnf4.linear input=tdnnf3.noop input-dim=1024 output-dim=128
component-node name=tdnnf4.affine component=tdnnf4.affine input=tdnnf4.linear input-dim=128 output-dim=1024
component-node name=tdnnf4.relu component=tdnnf4.relu input=tdnnf4.affine input-dim=1024 output-dim=1024
component-node name=tdnnf4.batchnorm component=tdnnf4.batchnorm input=tdnnf4.relu input-dim=1024 output-dim=1024
component-node name=tdnnf4.dropout component=tdnnf4.dropout input=tdnnf4.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf4.noop component=tdnnf4.noop input=Sum(Scale(0.66, tdnnf3.noop), tdnnf4.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf5.linear component=tdnnf5.linear input=tdnnf4.noop input-dim=1024 output-dim=128
component-node name=tdnnf5.affine component=tdnnf5.affine input=tdnnf5.linear input-dim=128 output-dim=1024
component-node name=tdnnf5.relu component=tdnnf5.relu input=tdnnf5.affine input-dim=1024 output-dim=1024
component-node name=tdnnf5.batchnorm component=tdnnf5.batchnorm input=tdnnf5.relu input-dim=1024 output-dim=1024
component-node name=tdnnf5.dropout component=tdnnf5.dropout input=tdnnf5.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf5.noop component=tdnnf5.noop input=Sum(Scale(0.66, tdnnf4.noop), tdnnf5.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf6.linear component=tdnnf6.linear input=tdnnf5.noop input-dim=1024 output-dim=128
component-node name=tdnnf6.affine component=tdnnf6.affine input=tdnnf6.linear input-dim=128 output-dim=1024
component-node name=tdnnf6.relu component=tdnnf6.relu input=tdnnf6.affine input-dim=1024 output-dim=1024
component-node name=tdnnf6.batchnorm component=tdnnf6.batchnorm input=tdnnf6.relu input-dim=1024 output-dim=1024
component-node name=tdnnf6.dropout component=tdnnf6.dropout input=tdnnf6.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf6.noop component=tdnnf6.noop input=Sum(Scale(0.66, tdnnf5.noop), tdnnf6.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf7.linear component=tdnnf7.linear input=tdnnf6.noop input-dim=1024 output-dim=128
component-node name=tdnnf7.affine component=tdnnf7.affine input=tdnnf7.linear input-dim=128 output-dim=1024
component-node name=tdnnf7.relu component=tdnnf7.relu input=tdnnf7.affine input-dim=1024 output-dim=1024
component-node name=tdnnf7.batchnorm component=tdnnf7.batchnorm input=tdnnf7.relu input-dim=1024 output-dim=1024
component-node name=tdnnf7.dropout component=tdnnf7.dropout input=tdnnf7.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf7.noop component=tdnnf7.noop input=Sum(Scale(0.66, tdnnf6.noop), tdnnf7.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf8.linear component=tdnnf8.linear input=tdnnf7.noop input-dim=1024 output-dim=128
component-node name=tdnnf8.affine component=tdnnf8.affine input=tdnnf8.linear input-dim=128 output-dim=1024
component-node name=tdnnf8.relu component=tdnnf8.relu input=tdnnf8.affine input-dim=1024 output-dim=1024
component-node name=tdnnf8.batchnorm component=tdnnf8.batchnorm input=tdnnf8.relu input-dim=1024 output-dim=1024
component-node name=tdnnf8.dropout component=tdnnf8.dropout input=tdnnf8.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf8.noop component=tdnnf8.noop input=Sum(Scale(0.66, tdnnf7.noop), tdnnf8.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf9.linear component=tdnnf9.linear input=tdnnf8.noop input-dim=1024 output-dim=128
component-node name=tdnnf9.affine component=tdnnf9.affine input=tdnnf9.linear input-dim=128 output-dim=1024
component-node name=tdnnf9.relu component=tdnnf9.relu input=tdnnf9.affine input-dim=1024 output-dim=1024
component-node name=tdnnf9.batchnorm component=tdnnf9.batchnorm input=tdnnf9.relu input-dim=1024 output-dim=1024
component-node name=tdnnf9.dropout component=tdnnf9.dropout input=tdnnf9.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf9.noop component=tdnnf9.noop input=Sum(Scale(0.66, tdnnf8.noop), tdnnf9.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf10.linear component=tdnnf10.linear input=tdnnf9.noop input-dim=1024 output-dim=128
component-node name=tdnnf10.affine component=tdnnf10.affine input=tdnnf10.linear input-dim=128 output-dim=1024
component-node name=tdnnf10.relu component=tdnnf10.relu input=tdnnf10.affine input-dim=1024 output-dim=1024
component-node name=tdnnf10.batchnorm component=tdnnf10.batchnorm input=tdnnf10.relu input-dim=1024 output-dim=1024
component-node name=tdnnf10.dropout component=tdnnf10.dropout input=tdnnf10.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf10.noop component=tdnnf10.noop input=Sum(Scale(0.66, tdnnf9.noop), tdnnf10.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf11.linear component=tdnnf11.linear input=tdnnf10.noop input-dim=1024 output-dim=128
component-node name=tdnnf11.affine component=tdnnf11.affine input=tdnnf11.linear input-dim=128 output-dim=1024
component-node name=tdnnf11.relu component=tdnnf11.relu input=tdnnf11.affine input-dim=1024 output-dim=1024
component-node name=tdnnf11.batchnorm component=tdnnf11.batchnorm input=tdnnf11.relu input-dim=1024 output-dim=1024
component-node name=tdnnf11.dropout component=tdnnf11.dropout input=tdnnf11.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf11.noop component=tdnnf11.noop input=Sum(Scale(0.66, tdnnf10.noop), tdnnf11.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf12.linear component=tdnnf12.linear input=tdnnf11.noop input-dim=1024 output-dim=128
component-node name=tdnnf12.affine component=tdnnf12.affine input=tdnnf12.linear input-dim=128 output-dim=1024
component-node name=tdnnf12.relu component=tdnnf12.relu input=tdnnf12.affine input-dim=1024 output-dim=1024
component-node name=tdnnf12.batchnorm component=tdnnf12.batchnorm input=tdnnf12.relu input-dim=1024 output-dim=1024
component-node name=tdnnf12.dropout component=tdnnf12.dropout input=tdnnf12.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf12.noop component=tdnnf12.noop input=Sum(Scale(0.66, tdnnf11.noop), tdnnf12.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf13.linear component=tdnnf13.linear input=tdnnf12.noop input-dim=1024 output-dim=128
component-node name=tdnnf13.affine component=tdnnf13.affine input=tdnnf13.linear input-dim=128 output-dim=1024
component-node name=tdnnf13.relu component=tdnnf13.relu input=tdnnf13.affine input-dim=1024 output-dim=1024
component-node name=tdnnf13.batchnorm component=tdnnf13.batchnorm input=tdnnf13.relu input-dim=1024 output-dim=1024
component-node name=tdnnf13.dropout component=tdnnf13.dropout input=tdnnf13.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf13.noop component=tdnnf13.noop input=Sum(Scale(0.66, tdnnf12.noop), tdnnf13.dropout) input-dim=1024 output-dim=1024
component-node name=prefinal-l component=prefinal-l input=tdnnf13.noop input-dim=1024 output-dim=256
component-node name=prefinal-chain.affine component=prefinal-chain.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-chain.relu component=prefinal-chain.relu input=prefinal-chain.affine input-dim=1024 output-dim=1024
component-node name=prefinal-chain.batchnorm1 component=prefinal-chain.batchnorm1 input=prefinal-chain.relu input-dim=1024 output-dim=1024
component-node name=prefinal-chain.linear component=prefinal-chain.linear input=prefinal-chain.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-chain.batchnorm2 component=prefinal-chain.batchnorm2 input=prefinal-chain.linear input-dim=256 output-dim=256
component-node name=output.affine component=output.affine input=prefinal-chain.batchnorm2 input-dim=256 output-dim=2824
output-node name=output input=output.affine dim=2824 objective=linear
component-node name=prefinal-xent.affine component=prefinal-xent.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-xent.relu component=prefinal-xent.relu input=prefinal-xent.affine input-dim=1024 output-dim=1024
component-node name=prefinal-xent.batchnorm1 component=prefinal-xent.batchnorm1 input=prefinal-xent.relu input-dim=1024 output-dim=1024
component-node name=prefinal-xent.linear component=prefinal-xent.linear input=prefinal-xent.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-xent.batchnorm2 component=prefinal-xent.batchnorm2 input=prefinal-xent.linear input-dim=256 output-dim=256
component-node name=output-xent.affine component=output-xent.affine input=prefinal-xent.batchnorm2 input-dim=256 output-dim=2824
component-node name=output-xent.log-softmax component=output-xent.log-softmax input=output-xent.affine input-dim=2824 output-dim=2824
output-node name=output-xent input=output-xent.log-softmax dim=2824 objective=linear
component name=lda type=FixedAffineComponent, input-dim=220, output-dim=220, linear-params-rms=0.005757, bias-{mean,stddev}=-0.001083,0.01285
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=220, output-dim=1024, learning-rate=9.37592e-06, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.05431, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.72,0.73,0.74 0.75,0.77,0.80,0.84,0.86 0.87,0.89,0.90,0.94), mean=0.805, stddev=0.0397], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.6,1.7,1.7,1.7 1.7,1.7,1.7,1.8,1.8 1.8,1.8,1.8,1.9), mean=1.74, stddev=0.0432], bias-{mean,stddev}=-0.01631,0.7971, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=3.04e+06, self-repaired-proportion=0.845741, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.03,0.68,1.0 1.3,1.6,1.8,2.8), mean=0.317, stddev=0.465], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.43,1.0,1.0 1.0,1.0,1.0,1.0), mean=0.489, stddev=0.471], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.05,0.05,0.06 0.07,0.09,0.15,0.27,0.28 0.29,0.30,0.32,0.37), mean=0.178, stddev=0.0905], oderiv-count=4.55552e+06
component name=tdnn1.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=47746.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.03,0.67,1.0 1.3,1.6,1.8,2.8), mean=0.316, stddev=0.464], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.05,0.10,0.11 0.13,0.15,0.16,0.23), mean=0.0503, stddev=0.05]
component name=tdnn1.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.376543, continuous=true
component name=tdnnf2.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=9.37592e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.01777, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.80,0.80,0.80,0.80 0.80,0.80,0.80,0.80,0.80 0.80,0.80,0.80,0.80), mean=0.804, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.16,0.17,0.18 0.18,0.19,0.20,0.21,0.22 0.23,0.23,0.24,0.28), mean=0.2, stddev=0.0154], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=9.37592e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.05067, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.69,0.73,0.74,0.75 0.76,0.78,0.81,0.84,0.86 0.87,0.88,0.89,0.93), mean=0.81, stddev=0.0372], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.5,1.6,1.6 1.6,1.6,1.6,1.7,1.7 1.7,1.7,1.7,1.7), mean=1.62, stddev=0.0346], bias-{mean,stddev}=0.005579,0.7835, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=3.36e+06, self-repaired-proportion=0.238454, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-06,5e-05,9e-05,0.0003 0.007,0.04,0.24,0.70,0.99 1.3,1.6,2.0,3.1), mean=0.395, stddev=0.44], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-05,0.0004,0.0006,0.002 0.03,0.11,0.50,0.88,0.96 0.99,1.0,1.0,1.0), mean=0.5, stddev=0.343], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.006,0.007,0.008 0.008,0.01,0.01,0.04,0.08 0.15,0.16,0.16,0.18), mean=0.0311, stddev=0.0397], oderiv-count=4.5968e+06
component name=tdnnf2.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=47234.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-08,4e-05,7e-05,0.0003 0.008,0.04,0.24,0.70,0.98 1.3,1.6,1.9,3.1), mean=0.393, stddev=0.439], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-05,0.003,0.004,0.009 0.05,0.15,0.34,0.49,0.56 0.62,0.69,0.75,1.0), mean=0.328, stddev=0.188]
component name=tdnnf2.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.376543, continuous=true
component name=tdnnf2.noop type=NoOpComponent, dim=1024
component name=tdnnf3.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=9.37592e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.01768, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.80,0.80,0.80,0.80 0.80,0.80,0.80,0.80,0.80 0.80,0.80,0.80,0.80), mean=0.8, stddev=0.000244], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.16,0.17,0.18 0.18,0.19,0.20,0.21,0.22 0.23,0.23,0.24,0.27), mean=0.199, stddev=0.0153], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=9.37592e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.05059, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.70,0.73,0.74,0.75 0.76,0.78,0.81,0.84,0.86 0.87,0.89,0.90,0.93), mean=0.809, stddev=0.0372], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.5,1.5,1.6 1.6,1.6,1.6,1.7,1.7 1.7,1.7,1.7,1.8), mean=1.62, stddev=0.0377], bias-{mean,stddev}=-0.005261,0.7798, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=3.19e+06, self-repaired-proportion=0.0687717, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(6e-05,0.0006,0.01,0.04 0.07,0.11,0.36,0.78,1.1 1.3,1.6,1.7,2.8), mean=0.475, stddev=0.411], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.003,0.02,0.07 0.12,0.20,0.50,0.78,0.88 0.93,0.97,0.98,1.0), mean=0.499, stddev=0.279], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.004,0.005 0.005,0.006,0.008,0.01,0.02 0.02,0.04,0.11,0.13), mean=0.011, stddev=0.0142], oderiv-count=4.43213e+06
component name=tdnnf3.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=46722.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(8e-05,0.0006,0.01,0.04 0.07,0.11,0.37,0.78,1.1 1.3,1.5,1.7,2.8), mean=0.473, stddev=0.41], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.02,0.12,0.19 0.26,0.33,0.54,0.72,0.80 0.87,0.93,1.0,1.2), mean=0.533, stddev=0.215]
component name=tdnnf3.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.376543, continuous=true
component name=tdnnf3.noop type=NoOpComponent, dim=1024
component name=tdnnf4.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=9.37592e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.01766, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.80,0.80,0.80,0.80 0.80,0.80,0.80,0.80,0.80 0.80,0.80,0.80,0.80), mean=0.799, stddev=-nan], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.16,0.17,0.18 0.18,0.19,0.20,0.21,0.22 0.22,0.23,0.24,0.30), mean=0.199, stddev=0.0147], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=9.37592e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.05047, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.70,0.72,0.73,0.75 0.76,0.78,0.81,0.84,0.85 0.87,0.88,0.89,0.94), mean=0.807, stddev=0.0369], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.5,1.5,1.6 1.6,1.6,1.6,1.6,1.7 1.7,1.7,1.7,1.7), mean=1.61, stddev=0.0355], bias-{mean,stddev}=0.01107,0.8494, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=1.01e+06, self-repaired-proportion=0.0533901, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.02,0.03,0.05 0.10,0.16,0.43,0.85,1.2 1.5,1.7,2.0,3.2), mean=0.544, stddev=0.454], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0007,0.03,0.04,0.08 0.13,0.23,0.50,0.77,0.87 0.93,0.95,0.97,1.0), mean=0.503, stddev=0.266], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.006,0.006,0.006 0.007,0.008,0.01,0.01,0.02 0.02,0.03,0.04,0.21), mean=0.0131, stddev=0.0161], oderiv-count=1.51328e+06
component name=tdnnf4.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=15574, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(9e-05,0.02,0.03,0.05 0.10,0.16,0.43,0.85,1.2 1.5,1.7,1.9,3.2), mean=0.543, stddev=0.453], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.16,0.20,0.26 0.34,0.43,0.65,0.84,0.93 1.0,1.1,1.2,1.4), mean=0.641, stddev=0.228]
component name=tdnnf4.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.376543, continuous=true
component name=tdnnf4.noop type=NoOpComponent, dim=1024
component name=tdnnf5.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=9.37592e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=0, linear-params-rms=0.02464, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.79,0.79,0.79,0.79 0.79,0.79,0.79,0.79,0.79 0.79,0.79,0.79,0.79), mean=0.788, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.21,0.23,0.24,0.25 0.25,0.26,0.28,0.29,0.30 0.31,0.32,0.33,0.34), mean=0.278, stddev=0.0196], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=9.37592e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0, linear-params-rms=0.07145, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.69,0.69,0.73 0.74,0.76,0.80,0.85,0.88 0.90,0.92,0.93,0.96), mean=0.807, stddev=0.0529], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2.2,2.2,2.2,2.2 2.2,2.2,2.3,2.3,2.4 2.4,2.4,2.4,2.4), mean=2.29, stddev=0.0502], bias-{mean,stddev}=-0.0002792,0.8132, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=1.04e+06, self-repaired-proportion=0.0498938, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0004,0.02,0.04,0.07 0.10,0.18,0.42,0.86,1.1 1.4,1.8,1.9,2.7), mean=0.539, stddev=0.439], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.03,0.04,0.09 0.14,0.23,0.48,0.76,0.85 0.91,0.95,0.98,1.0), mean=0.496, stddev=0.259], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.005,0.005,0.005 0.006,0.007,0.009,0.01,0.02 0.02,0.03,0.04,0.17), mean=0.0113, stddev=0.0128], oderiv-count=1.49222e+06
component name=tdnnf5.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=15574, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0003,0.02,0.04,0.07 0.10,0.17,0.41,0.86,1.1 1.4,1.8,1.9,2.7), mean=0.538, stddev=0.437], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.16,0.21,0.29 0.37,0.46,0.67,0.88,0.99 1.1,1.1,1.2,1.4), mean=0.671, stddev=0.237]
component name=tdnnf5.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.376543, continuous=true
component name=tdnnf5.noop type=NoOpComponent, dim=1024
component name=tdnnf6.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=9.37592e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.0175, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.79,0.79,0.79,0.79 0.79,0.79,0.79,0.79,0.79 0.79,0.79,0.79,0.79), mean=0.792, stddev=-nan], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.16,0.17,0.18 0.18,0.19,0.20,0.21,0.21 0.22,0.23,0.23,0.26), mean=0.197, stddev=0.0143], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=9.37592e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.05055, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.69,0.71,0.73,0.75 0.76,0.78,0.81,0.84,0.85 0.87,0.88,0.90,0.91), mean=0.808, stddev=0.0364], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.5,1.6,1.6 1.6,1.6,1.6,1.6,1.7 1.7,1.7,1.7,1.7), mean=1.62, stddev=0.0351], bias-{mean,stddev}=-0.02275,0.7707, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=1.04e+06, self-repaired-proportion=0.0214772, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0007,0.03,0.04,0.08 0.13,0.21,0.45,0.84,1.1 1.3,1.5,1.7,2.9), mean=0.542, stddev=0.401], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.04,0.06,0.11 0.16,0.26,0.48,0.73,0.82 0.87,0.91,0.94,0.99), mean=0.491, stddev=0.239], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.004,0.005,0.005 0.006,0.006,0.008,0.01,0.01 0.02,0.02,0.03,0.14), mean=0.00935, stddev=0.00707], oderiv-count=1.43136e+06
component name=tdnnf6.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=15062, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0006,0.04,0.04,0.08 0.13,0.21,0.45,0.84,1.1 1.3,1.5,1.7,2.9), mean=0.543, stddev=0.4], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.22,0.26,0.34 0.42,0.52,0.73,0.90,1.0 1.1,1.2,1.2,1.4), mean=0.718, stddev=0.225]
component name=tdnnf6.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.376543, continuous=true
component name=tdnnf6.noop type=NoOpComponent, dim=1024
component name=tdnnf7.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=9.37592e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01752, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.79,0.79,0.79,0.79 0.79,0.79,0.79,0.79,0.79 0.79,0.79,0.79,0.79), mean=0.793, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.16,0.17,0.17 0.18,0.19,0.20,0.21,0.22 0.22,0.23,0.23,0.25), mean=0.198, stddev=0.0145], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=9.37592e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.05063, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.67,0.73,0.73,0.75 0.76,0.78,0.81,0.84,0.86 0.87,0.89,0.90,0.94), mean=0.809, stddev=0.0369], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.5,1.6,1.6 1.6,1.6,1.6,1.6,1.7 1.7,1.7,1.7,1.7), mean=1.62, stddev=0.0354], bias-{mean,stddev}=0.01484,0.8216, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.61e+05, self-repaired-proportion=0.035723, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.03,0.05,0.08 0.12,0.20,0.45,0.89,1.2 1.4,1.8,2.0,2.8), mean=0.574, stddev=0.445], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.04,0.06,0.11 0.16,0.25,0.49,0.75,0.83 0.90,0.95,0.97,0.99), mean=0.501, stddev=0.25], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.004,0.005 0.005,0.006,0.007,0.01,0.01 0.02,0.02,0.03,0.11), mean=0.00879, stddev=0.00571], oderiv-count=1.41139e+06
component name=tdnnf7.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=14550, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.03,0.05,0.08 0.12,0.20,0.45,0.89,1.2 1.4,1.8,2.0,2.8), mean=0.573, stddev=0.444], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.21,0.24,0.35 0.41,0.51,0.72,0.93,1.0 1.1,1.2,1.3,1.4), mean=0.721, stddev=0.236]
component name=tdnnf7.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.376543, continuous=true
component name=tdnnf7.noop type=NoOpComponent, dim=1024
component name=tdnnf8.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=9.37592e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.0175, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.79,0.79,0.79,0.79 0.79,0.79,0.79,0.79,0.79 0.79,0.79,0.79,0.79), mean=0.792, stddev=0.000244], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.16,0.17,0.18 0.18,0.19,0.20,0.21,0.22 0.22,0.23,0.23,0.26), mean=0.197, stddev=0.0148], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=9.37592e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.05056, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.69,0.72,0.73,0.75 0.76,0.78,0.81,0.84,0.86 0.87,0.89,0.90,0.94), mean=0.808, stddev=0.0369], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.5,1.6,1.6 1.6,1.6,1.6,1.6,1.7 1.7,1.7,1.7,1.7), mean=1.62, stddev=0.0351], bias-{mean,stddev}=-0.02064,0.8356, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.23e+05, self-repaired-proportion=0.0401208, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0003,0.03,0.05,0.07 0.12,0.19,0.46,0.85,1.2 1.4,1.8,2.0,2.6), mean=0.563, stddev=0.437], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.04,0.06,0.09 0.15,0.25,0.49,0.74,0.84 0.89,0.95,0.96,0.99), mean=0.492, stddev=0.248], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.004,0.004 0.005,0.005,0.007,0.01,0.01 0.02,0.02,0.03,0.15), mean=0.00882, stddev=0.0102], oderiv-count=1.34624e+06
component name=tdnnf8.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=14038, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0003,0.03,0.05,0.07 0.12,0.19,0.46,0.85,1.2 1.4,1.8,2.0,2.6), mean=0.563, stddev=0.435], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.22,0.26,0.34 0.41,0.50,0.73,0.93,1.0 1.1,1.2,1.3,1.7), mean=0.727, stddev=0.248]
component name=tdnnf8.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.376543, continuous=true
component name=tdnnf8.noop type=NoOpComponent, dim=1024
component name=tdnnf9.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=9.37592e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01744, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.79,0.79,0.79,0.79 0.79,0.79,0.79,0.79,0.79 0.79,0.79,0.79,0.79), mean=0.789, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.15,0.16,0.17 0.18,0.19,0.20,0.21,0.21 0.22,0.23,0.24,0.26), mean=0.197, stddev=0.015], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=9.37592e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.05058, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.66,0.72,0.73,0.75 0.76,0.78,0.81,0.84,0.86 0.87,0.88,0.89,0.92), mean=0.808, stddev=0.0367], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.5,1.5,1.6 1.6,1.6,1.6,1.6,1.7 1.7,1.7,1.7,1.8), mean=1.62, stddev=0.0364], bias-{mean,stddev}=-0.008697,0.8167, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.29e+05, self-repaired-proportion=0.0241838, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0004,0.04,0.05,0.08 0.13,0.21,0.48,0.88,1.2 1.4,1.7,1.9,2.8), mean=0.573, stddev=0.423], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.05,0.06,0.11 0.16,0.26,0.50,0.74,0.82 0.88,0.93,0.95,0.99), mean=0.496, stddev=0.242], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.003,0.003,0.004 0.004,0.005,0.006,0.01,0.01 0.01,0.02,0.02,0.15), mean=0.00783, stddev=0.00773], oderiv-count=1.27738e+06
component name=tdnnf9.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=13526, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0003,0.04,0.05,0.09 0.13,0.21,0.48,0.88,1.2 1.4,1.7,1.9,2.8), mean=0.573, stddev=0.421], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.22,0.27,0.33 0.42,0.51,0.75,0.95,1.1 1.1,1.2,1.3,1.5), mean=0.738, stddev=0.246]
component name=tdnnf9.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.376543, continuous=true
component name=tdnnf9.noop type=NoOpComponent, dim=1024
component name=tdnnf10.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=9.37592e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01735, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.79,0.79,0.79,0.79 0.79,0.79,0.79,0.79,0.79 0.79,0.79,0.79,0.79), mean=0.785, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.15,0.16,0.17 0.18,0.18,0.20,0.21,0.21 0.22,0.23,0.23,0.25), mean=0.196, stddev=0.0149], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=9.37592e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.05054, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.70,0.73,0.74,0.75 0.76,0.78,0.81,0.84,0.86 0.87,0.89,0.90,0.93), mean=0.808, stddev=0.0359], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.5,1.5,1.6 1.6,1.6,1.6,1.6,1.7 1.7,1.7,1.7,1.7), mean=1.62, stddev=0.0356], bias-{mean,stddev}=0.0554,0.8206, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.51e+05, self-repaired-proportion=0.0282944, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0005,0.03,0.05,0.09 0.13,0.22,0.49,0.96,1.2 1.4,1.8,2.0,2.6), mean=0.606, stddev=0.448], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.05,0.08,0.12 0.18,0.27,0.51,0.77,0.84 0.90,0.94,0.96,0.99), mean=0.514, stddev=0.245], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.003,0.003 0.004,0.004,0.006,0.008,0.01 0.01,0.02,0.02,0.13), mean=0.00708, stddev=0.00685], oderiv-count=1.24064e+06
component name=tdnnf10.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=13014, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0005,0.03,0.06,0.10 0.14,0.22,0.50,0.95,1.2 1.4,1.8,2.0,2.6), mean=0.606, stddev=0.447], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.19,0.27,0.34 0.43,0.52,0.74,0.97,1.1 1.2,1.3,1.3,1.9), mean=0.751, stddev=0.257]
component name=tdnnf10.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.376543, continuous=true
component name=tdnnf10.noop type=NoOpComponent, dim=1024
component name=tdnnf11.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=9.37592e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01737, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.79,0.79,0.79,0.79 0.79,0.79,0.79,0.79,0.79 0.79,0.79,0.79,0.79), mean=0.786, stddev=0.000244], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.16,0.16,0.17 0.18,0.18,0.20,0.21,0.21 0.22,0.23,0.24,0.26), mean=0.196, stddev=0.0145], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=9.37592e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.05044, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.69,0.72,0.74,0.74 0.76,0.77,0.81,0.84,0.85 0.87,0.88,0.89,0.94), mean=0.806, stddev=0.0374], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.5,1.5,1.6 1.6,1.6,1.6,1.6,1.7 1.7,1.7,1.7,1.7), mean=1.61, stddev=0.0341], bias-{mean,stddev}=-0.043,0.8411, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.42e+05, self-repaired-proportion=0.0214808, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0008,0.04,0.05,0.09 0.12,0.20,0.46,0.90,1.2 1.4,1.7,1.8,2.6), mean=0.572, stddev=0.43], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.04,0.08,0.11 0.16,0.23,0.49,0.73,0.83 0.87,0.92,0.94,0.99), mean=0.487, stddev=0.245], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.003,0.003 0.004,0.004,0.005,0.008,0.01 0.01,0.01,0.02,0.11), mean=0.00685, stddev=0.00762], oderiv-count=1.14502e+06
component name=tdnnf11.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=12502, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0006,0.04,0.05,0.09 0.12,0.20,0.46,0.90,1.2 1.4,1.7,1.8,2.6), mean=0.573, stddev=0.429], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.22,0.27,0.33 0.41,0.51,0.74,0.96,1.1 1.2,1.3,1.3,1.8), mean=0.741, stddev=0.255]
component name=tdnnf11.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.376543, continuous=true
component name=tdnnf11.noop type=NoOpComponent, dim=1024
component name=tdnnf12.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=9.37592e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01731, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.78,0.78,0.78,0.78 0.78,0.78,0.78,0.78,0.78 0.78,0.78,0.78,0.78), mean=0.783, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.16,0.16,0.17 0.18,0.18,0.20,0.21,0.21 0.22,0.23,0.23,0.26), mean=0.195, stddev=0.0148], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=9.37592e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.05035, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.69,0.72,0.73,0.75 0.76,0.77,0.80,0.83,0.85 0.87,0.88,0.89,0.92), mean=0.805, stddev=0.036], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.5,1.5,1.6 1.6,1.6,1.6,1.6,1.7 1.7,1.7,1.7,1.7), mean=1.61, stddev=0.0337], bias-{mean,stddev}=-0.02224,0.8178, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.99e+05, self-repaired-proportion=0.0177999, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0005,0.05,0.06,0.09 0.14,0.21,0.47,0.91,1.2 1.4,1.7,1.9,2.6), mean=0.581, stddev=0.431], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.05,0.08,0.12 0.17,0.26,0.48,0.72,0.82 0.89,0.93,0.94,0.99), mean=0.49, stddev=0.237], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.003,0.003 0.003,0.004,0.005,0.007,0.009 0.01,0.01,0.01,0.10), mean=0.00593, stddev=0.00584], oderiv-count=1.13152e+06
component name=tdnnf12.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11990, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0004,0.05,0.07,0.09 0.14,0.22,0.47,0.91,1.2 1.4,1.7,1.9,2.6), mean=0.581, stddev=0.429], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.25,0.29,0.36 0.43,0.53,0.74,0.96,1.1 1.2,1.3,1.3,1.6), mean=0.749, stddev=0.246]
component name=tdnnf12.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.376543, continuous=true
component name=tdnnf12.noop type=NoOpComponent, dim=1024
component name=tdnnf13.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=9.37592e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01716, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.78,0.78,0.78,0.78 0.78,0.78,0.78,0.78,0.78 0.78,0.78,0.78,0.78), mean=0.777, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.16,0.16,0.17 0.18,0.18,0.19,0.21,0.21 0.22,0.22,0.23,0.25), mean=0.194, stddev=0.0146], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=9.37592e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.05039, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.68,0.72,0.73,0.74 0.76,0.77,0.81,0.84,0.85 0.87,0.88,0.89,0.93), mean=0.805, stddev=0.0375], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.5,1.5,1.5 1.6,1.6,1.6,1.6,1.7 1.7,1.7,1.7,1.7), mean=1.61, stddev=0.0359], bias-{mean,stddev}=-0.01082,0.8111, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=6.96e+05, self-repaired-proportion=0.0147428, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.05,0.06,0.10 0.16,0.23,0.49,0.94,1.2 1.4,1.7,1.9,2.4), mean=0.599, stddev=0.422], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0008,0.06,0.09,0.13 0.19,0.28,0.49,0.72,0.81 0.86,0.91,0.94,0.98), mean=0.494, stddev=0.227], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.003 0.003,0.003,0.004,0.006,0.007 0.009,0.01,0.01,0.09), mean=0.00513, stddev=0.00476], oderiv-count=1.13741e+06
component name=tdnnf13.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11478, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.05,0.07,0.10 0.16,0.23,0.49,0.94,1.2 1.4,1.7,1.9,2.4), mean=0.6, stddev=0.421], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.008,0.27,0.30,0.37 0.44,0.55,0.77,0.99,1.1 1.2,1.3,1.3,1.6), mean=0.768, stddev=0.253]
component name=tdnnf13.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.376543, continuous=true
component name=tdnnf13.noop type=NoOpComponent, dim=1024
component name=prefinal-l type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=9.37592e-06, l2-regularize=0.008, max-change=0.75, params-rms=0.02349, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.75,0.75,0.75,0.75 0.75,0.75,0.75,0.75,0.75 0.75,0.75,0.75,0.75), mean=0.752, stddev=0.000244], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.30,0.32,0.33,0.34 0.34,0.35,0.38,0.39,0.40 0.41,0.42,0.43,0.44), mean=0.375, stddev=0.0233], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=9.37592e-06, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.05022, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.69,0.72,0.73,0.74 0.76,0.77,0.80,0.83,0.85 0.86,0.87,0.88,0.91), mean=0.803, stddev=0.0358], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.5,1.5,1.6 1.6,1.6,1.6,1.6,1.6 1.7,1.7,1.7,1.7), mean=1.61, stddev=0.0336], bias-{mean,stddev}=-0.006308,0.8268, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.15e+05, self-repaired-proportion=0.0337047, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.0008,0.04,0.07 0.12,0.19,0.45,0.88,1.1 1.4,1.8,2.0,2.5), mean=0.563, stddev=0.441], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0008,0.004,0.07,0.10 0.17,0.26,0.49,0.73,0.83 0.90,0.95,0.96,0.99), mean=0.497, stddev=0.246], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.002,0.002,0.002 0.003,0.003,0.004,0.006,0.008 0.01,0.01,0.04,0.08), mean=0.00545, stddev=0.00698], oderiv-count=1.06253e+06
component name=prefinal-chain.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11478, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.0008,0.04,0.07 0.12,0.19,0.45,0.87,1.1 1.4,1.8,2.0,2.5), mean=0.562, stddev=0.44], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.02,0.21,0.29 0.37,0.47,0.68,0.88,0.99 1.1,1.2,1.3,1.6), mean=0.682, stddev=0.245]
component name=prefinal-chain.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=9.37592e-06, l2-regularize=0.008, max-change=0.75, params-rms=0.02464, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.79,0.79,0.79,0.79 0.79,0.79,0.79,0.79,0.79 0.79,0.79,0.79,0.79), mean=0.788, stddev=0], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.33,0.33,0.35 0.36,0.37,0.39,0.42,0.43 0.44,0.45,0.45,0.50), mean=0.393, stddev=0.0273], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=11478, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1e-07,-8e-08,-8e-08,-6e-08 -4e-08,-2e-08,2e-09,3e-08,4e-08 5e-08,7e-08,8e-08,1e-07), mean=1.3e-09, stddev=3.36e-08], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.68,0.70,0.71,0.71 0.73,0.76,0.79,0.85,0.88 0.91,0.93,1.0,1.1), mean=0.803, stddev=0.0601]
component name=output.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=2824, learning-rate=9.37592e-06, l2-regularize=0.002, max-change=1.5, linear-params-rms=0.00975, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.002,0.006,0.02 0.03,0.05,0.14,0.21,0.24 0.26,0.30,0.31,0.40), mean=0.134, stddev=0.0794], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.39,0.41,0.42,0.44 0.46,0.48,0.52,0.55,0.57 0.58,0.60,0.60,0.63), mean=0.516, stddev=0.0415], bias-{mean,stddev}=1.735e-05,0.03025, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=9.37592e-06, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.04996, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.69,0.71,0.72,0.74 0.75,0.77,0.80,0.83,0.84 0.86,0.88,0.89,0.93), mean=0.798, stddev=0.0374], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.5,1.5,1.5 1.6,1.6,1.6,1.6,1.6 1.7,1.7,1.7,1.7), mean=1.6, stddev=0.0353], bias-{mean,stddev}=-0.0006478,0.8034, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.66e+05, self-repaired-proportion=0.0230718, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-05,0.04,0.06,0.10 0.13,0.22,0.45,0.86,1.2 1.4,1.7,1.9,2.9), mean=0.568, stddev=0.418], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.05,0.07,0.13 0.18,0.27,0.49,0.72,0.83 0.89,0.93,0.95,0.99), mean=0.493, stddev=0.236], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0006,0.0008,0.0008,0.0009 0.001,0.001,0.001,0.002,0.003 0.003,0.004,0.005,0.03), mean=0.00183, stddev=0.00226], oderiv-count=1.08166e+06
component name=prefinal-xent.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11478, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-05,0.04,0.06,0.10 0.14,0.22,0.45,0.86,1.2 1.4,1.7,1.9,2.9), mean=0.568, stddev=0.417], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.19,0.25,0.35 0.44,0.51,0.72,0.91,1.0 1.1,1.2,1.2,1.3), mean=0.714, stddev=0.227]
component name=prefinal-xent.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=9.37592e-06, l2-regularize=0.008, max-change=0.75, params-rms=0.0233, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.75,0.75,0.75,0.75 0.75,0.75,0.75,0.75,0.75 0.75,0.75,0.75,0.75), mean=0.746, stddev=0], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.31,0.31,0.33 0.33,0.35,0.37,0.40,0.41 0.42,0.43,0.43,0.45), mean=0.372, stddev=0.0278], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=11478, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-9e-08,-8e-08,-7e-08,-6e-08 -5e-08,-3e-08,-2e-09,2e-08,4e-08 6e-08,7e-08,9e-08,1e-07), mean=-2.22e-09, stddev=3.51e-08], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.67,0.68,0.69,0.70 0.73,0.75,0.79,0.84,0.86 0.88,0.91,0.94,1.1), mean=0.793, stddev=0.0564]
component name=output-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=2824, learning-rate=4.68796e-05, l2-regularize=0.002, learning-rate-factor=5, max-change=1.5, linear-params-rms=0.02406, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.02,0.02,0.02 0.03,0.04,0.16,0.57,0.70 0.78,0.85,0.89,1.2), mean=0.278, stddev=0.267], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.79,0.82,0.84,0.89 0.97,1.1,1.3,1.4,1.5 1.5,1.6,1.6,1.6), mean=1.26, stddev=0.192], bias-{mean,stddev}=1.49e-08,0.07055, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-xent.log-softmax type=LogSoftmaxComponent, dim=2824, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,3e-07,3e-05,9e-05 0.0001,0.0002,0.0006,0.001,0.002 0.003,0.004,0.004,0.04), mean=0.000899, stddev=0.00117], oderiv-count=1.0928e+06
nnet3-show-progress --use-gpu=no telugu_exp/chain_cleaned_1d/tdnn1d_sp/23.mdl telugu_exp/chain_cleaned_1d/tdnn1d_sp/24.mdl 
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:SelectGpuId():cu-device.cc:168) Manually selected to compute on CPU.
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:0.242729 tdnnf2.linear:0.297347 tdnnf2.affine:0.228458 tdnnf3.linear:0.228355 tdnnf3.affine:0.2109 tdnnf4.linear:0.192257 tdnnf4.affine:0.210145 tdnnf5.linear:0.138293 tdnnf5.affine:0.196841 tdnnf6.linear:0.175075 tdnnf6.affine:0.197588 tdnnf7.linear:0.171987 tdnnf7.affine:0.202267 tdnnf8.linear:0.165666 tdnnf8.affine:0.202566 tdnnf9.linear:0.158938 tdnnf9.affine:0.200133 tdnnf10.linear:0.154112 tdnnf10.affine:0.199504 tdnnf11.linear:0.146416 tdnnf11.affine:0.201111 tdnnf12.linear:0.142962 tdnnf12.affine:0.198243 tdnnf13.linear:0.137461 tdnnf13.affine:0.197716 prefinal-l:0.153922 prefinal-chain.affine:0.198396 prefinal-chain.linear:0.100736 output.affine:0.156077 prefinal-xent.affine:0.198575 prefinal-xent.linear:0.113105 output-xent.affine:0.255145 ]
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:36.267 tdnnf2.linear:9.09962 tdnnf2.affine:36.0795 tdnnf3.linear:9.05354 tdnnf3.affine:35.9679 tdnnf4.linear:9.04153 tdnnf4.affine:37.5049 tdnnf5.linear:8.91976 tdnnf5.affine:36.6926 tdnnf6.linear:8.96071 tdnnf6.affine:35.7573 tdnnf7.linear:8.9692 tdnnf7.affine:36.9237 tdnnf8.linear:8.96237 tdnnf8.affine:37.2229 tdnnf9.linear:8.92868 tdnnf9.affine:36.7941 tdnnf10.linear:8.88413 tdnnf10.affine:36.9097 tdnnf11.linear:8.89126 tdnnf11.affine:37.3274 tdnnf12.linear:8.86233 tdnnf12.affine:36.7417 tdnnf13.linear:8.78593 tdnnf13.affine:36.5969 prefinal-l:12.0273 prefinal-chain.affine:36.8934 prefinal-chain.linear:12.6156 output.affine:8.44476 prefinal-xent.affine:36.2654 prefinal-xent.linear:11.9307 output-xent.affine:20.7983 ]
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.00665804 tdnnf2.linear:0.0324528 tdnnf2.affine:0.00629833 tdnnf3.linear:0.0250609 tdnnf3.affine:0.00583285 tdnnf4.linear:0.0211282 tdnnf4.affine:0.00557418 tdnnf5.linear:0.0153998 tdnnf5.affine:0.00533699 tdnnf6.linear:0.0194101 tdnnf6.affine:0.00549739 tdnnf7.linear:0.019053 tdnnf7.affine:0.00544982 tdnnf8.linear:0.0183667 tdnnf8.affine:0.00541403 tdnnf9.linear:0.0176854 tdnnf9.affine:0.00541132 tdnnf10.linear:0.0172328 tdnnf10.affine:0.0053774 tdnnf11.linear:0.0163577 tdnnf11.affine:0.00536005 tdnnf12.linear:0.0160226 tdnnf12.affine:0.00536775 tdnnf13.linear:0.0155404 tdnnf13.affine:0.00537459 prefinal-l:0.0126938 prefinal-chain.affine:0.00534969 prefinal-chain.linear:0.00793901 output.affine:0.0186686 prefinal-xent.affine:0.00544653 prefinal-xent.linear:0.00940918 output-xent.affine:0.0123632 ]
# Accounting: time=0 threads=1
# Ended (code 0) at Mon Jul 18 20:02:11 EDT 2022, elapsed time 0 seconds
