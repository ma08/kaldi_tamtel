# nnet3-info --verbose=2 telugu_exp/chain_cleaned_1d/tdnn1d_sp/20.mdl 
# Started at Mon Jul 18 19:53:58 EDT 2022
#
nnet3-info --verbose=2 telugu_exp/chain_cleaned_1d/tdnn1d_sp/20.mdl 
left-context: 28
right-context: 28
num-parameters: 9032208
modulus: 1
input-node name=ivector dim=100
input-node name=input dim=40
component-node name=lda component=lda input=Append(Offset(input, -1), input, Offset(input, 1), ReplaceIndex(ivector, t, 0)) input-dim=220 output-dim=220
component-node name=tdnn1.affine component=tdnn1.affine input=lda input-dim=220 output-dim=1024
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=1024 output-dim=1024
component-node name=tdnn1.batchnorm component=tdnn1.batchnorm input=tdnn1.relu input-dim=1024 output-dim=1024
component-node name=tdnn1.dropout component=tdnn1.dropout input=tdnn1.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.linear component=tdnnf2.linear input=tdnn1.dropout input-dim=1024 output-dim=128
component-node name=tdnnf2.affine component=tdnnf2.affine input=tdnnf2.linear input-dim=128 output-dim=1024
component-node name=tdnnf2.relu component=tdnnf2.relu input=tdnnf2.affine input-dim=1024 output-dim=1024
component-node name=tdnnf2.batchnorm component=tdnnf2.batchnorm input=tdnnf2.relu input-dim=1024 output-dim=1024
component-node name=tdnnf2.dropout component=tdnnf2.dropout input=tdnnf2.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.noop component=tdnnf2.noop input=Sum(Scale(0.66, tdnn1.dropout), tdnnf2.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf3.linear component=tdnnf3.linear input=tdnnf2.noop input-dim=1024 output-dim=128
component-node name=tdnnf3.affine component=tdnnf3.affine input=tdnnf3.linear input-dim=128 output-dim=1024
component-node name=tdnnf3.relu component=tdnnf3.relu input=tdnnf3.affine input-dim=1024 output-dim=1024
component-node name=tdnnf3.batchnorm component=tdnnf3.batchnorm input=tdnnf3.relu input-dim=1024 output-dim=1024
component-node name=tdnnf3.dropout component=tdnnf3.dropout input=tdnnf3.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf3.noop component=tdnnf3.noop input=Sum(Scale(0.66, tdnnf2.noop), tdnnf3.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf4.linear component=tdnnf4.linear input=tdnnf3.noop input-dim=1024 output-dim=128
component-node name=tdnnf4.affine component=tdnnf4.affine input=tdnnf4.linear input-dim=128 output-dim=1024
component-node name=tdnnf4.relu component=tdnnf4.relu input=tdnnf4.affine input-dim=1024 output-dim=1024
component-node name=tdnnf4.batchnorm component=tdnnf4.batchnorm input=tdnnf4.relu input-dim=1024 output-dim=1024
component-node name=tdnnf4.dropout component=tdnnf4.dropout input=tdnnf4.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf4.noop component=tdnnf4.noop input=Sum(Scale(0.66, tdnnf3.noop), tdnnf4.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf5.linear component=tdnnf5.linear input=tdnnf4.noop input-dim=1024 output-dim=128
component-node name=tdnnf5.affine component=tdnnf5.affine input=tdnnf5.linear input-dim=128 output-dim=1024
component-node name=tdnnf5.relu component=tdnnf5.relu input=tdnnf5.affine input-dim=1024 output-dim=1024
component-node name=tdnnf5.batchnorm component=tdnnf5.batchnorm input=tdnnf5.relu input-dim=1024 output-dim=1024
component-node name=tdnnf5.dropout component=tdnnf5.dropout input=tdnnf5.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf5.noop component=tdnnf5.noop input=Sum(Scale(0.66, tdnnf4.noop), tdnnf5.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf6.linear component=tdnnf6.linear input=tdnnf5.noop input-dim=1024 output-dim=128
component-node name=tdnnf6.affine component=tdnnf6.affine input=tdnnf6.linear input-dim=128 output-dim=1024
component-node name=tdnnf6.relu component=tdnnf6.relu input=tdnnf6.affine input-dim=1024 output-dim=1024
component-node name=tdnnf6.batchnorm component=tdnnf6.batchnorm input=tdnnf6.relu input-dim=1024 output-dim=1024
component-node name=tdnnf6.dropout component=tdnnf6.dropout input=tdnnf6.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf6.noop component=tdnnf6.noop input=Sum(Scale(0.66, tdnnf5.noop), tdnnf6.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf7.linear component=tdnnf7.linear input=tdnnf6.noop input-dim=1024 output-dim=128
component-node name=tdnnf7.affine component=tdnnf7.affine input=tdnnf7.linear input-dim=128 output-dim=1024
component-node name=tdnnf7.relu component=tdnnf7.relu input=tdnnf7.affine input-dim=1024 output-dim=1024
component-node name=tdnnf7.batchnorm component=tdnnf7.batchnorm input=tdnnf7.relu input-dim=1024 output-dim=1024
component-node name=tdnnf7.dropout component=tdnnf7.dropout input=tdnnf7.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf7.noop component=tdnnf7.noop input=Sum(Scale(0.66, tdnnf6.noop), tdnnf7.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf8.linear component=tdnnf8.linear input=tdnnf7.noop input-dim=1024 output-dim=128
component-node name=tdnnf8.affine component=tdnnf8.affine input=tdnnf8.linear input-dim=128 output-dim=1024
component-node name=tdnnf8.relu component=tdnnf8.relu input=tdnnf8.affine input-dim=1024 output-dim=1024
component-node name=tdnnf8.batchnorm component=tdnnf8.batchnorm input=tdnnf8.relu input-dim=1024 output-dim=1024
component-node name=tdnnf8.dropout component=tdnnf8.dropout input=tdnnf8.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf8.noop component=tdnnf8.noop input=Sum(Scale(0.66, tdnnf7.noop), tdnnf8.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf9.linear component=tdnnf9.linear input=tdnnf8.noop input-dim=1024 output-dim=128
component-node name=tdnnf9.affine component=tdnnf9.affine input=tdnnf9.linear input-dim=128 output-dim=1024
component-node name=tdnnf9.relu component=tdnnf9.relu input=tdnnf9.affine input-dim=1024 output-dim=1024
component-node name=tdnnf9.batchnorm component=tdnnf9.batchnorm input=tdnnf9.relu input-dim=1024 output-dim=1024
component-node name=tdnnf9.dropout component=tdnnf9.dropout input=tdnnf9.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf9.noop component=tdnnf9.noop input=Sum(Scale(0.66, tdnnf8.noop), tdnnf9.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf10.linear component=tdnnf10.linear input=tdnnf9.noop input-dim=1024 output-dim=128
component-node name=tdnnf10.affine component=tdnnf10.affine input=tdnnf10.linear input-dim=128 output-dim=1024
component-node name=tdnnf10.relu component=tdnnf10.relu input=tdnnf10.affine input-dim=1024 output-dim=1024
component-node name=tdnnf10.batchnorm component=tdnnf10.batchnorm input=tdnnf10.relu input-dim=1024 output-dim=1024
component-node name=tdnnf10.dropout component=tdnnf10.dropout input=tdnnf10.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf10.noop component=tdnnf10.noop input=Sum(Scale(0.66, tdnnf9.noop), tdnnf10.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf11.linear component=tdnnf11.linear input=tdnnf10.noop input-dim=1024 output-dim=128
component-node name=tdnnf11.affine component=tdnnf11.affine input=tdnnf11.linear input-dim=128 output-dim=1024
component-node name=tdnnf11.relu component=tdnnf11.relu input=tdnnf11.affine input-dim=1024 output-dim=1024
component-node name=tdnnf11.batchnorm component=tdnnf11.batchnorm input=tdnnf11.relu input-dim=1024 output-dim=1024
component-node name=tdnnf11.dropout component=tdnnf11.dropout input=tdnnf11.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf11.noop component=tdnnf11.noop input=Sum(Scale(0.66, tdnnf10.noop), tdnnf11.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf12.linear component=tdnnf12.linear input=tdnnf11.noop input-dim=1024 output-dim=128
component-node name=tdnnf12.affine component=tdnnf12.affine input=tdnnf12.linear input-dim=128 output-dim=1024
component-node name=tdnnf12.relu component=tdnnf12.relu input=tdnnf12.affine input-dim=1024 output-dim=1024
component-node name=tdnnf12.batchnorm component=tdnnf12.batchnorm input=tdnnf12.relu input-dim=1024 output-dim=1024
component-node name=tdnnf12.dropout component=tdnnf12.dropout input=tdnnf12.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf12.noop component=tdnnf12.noop input=Sum(Scale(0.66, tdnnf11.noop), tdnnf12.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf13.linear component=tdnnf13.linear input=tdnnf12.noop input-dim=1024 output-dim=128
component-node name=tdnnf13.affine component=tdnnf13.affine input=tdnnf13.linear input-dim=128 output-dim=1024
component-node name=tdnnf13.relu component=tdnnf13.relu input=tdnnf13.affine input-dim=1024 output-dim=1024
component-node name=tdnnf13.batchnorm component=tdnnf13.batchnorm input=tdnnf13.relu input-dim=1024 output-dim=1024
component-node name=tdnnf13.dropout component=tdnnf13.dropout input=tdnnf13.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf13.noop component=tdnnf13.noop input=Sum(Scale(0.66, tdnnf12.noop), tdnnf13.dropout) input-dim=1024 output-dim=1024
component-node name=prefinal-l component=prefinal-l input=tdnnf13.noop input-dim=1024 output-dim=256
component-node name=prefinal-chain.affine component=prefinal-chain.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-chain.relu component=prefinal-chain.relu input=prefinal-chain.affine input-dim=1024 output-dim=1024
component-node name=prefinal-chain.batchnorm1 component=prefinal-chain.batchnorm1 input=prefinal-chain.relu input-dim=1024 output-dim=1024
component-node name=prefinal-chain.linear component=prefinal-chain.linear input=prefinal-chain.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-chain.batchnorm2 component=prefinal-chain.batchnorm2 input=prefinal-chain.linear input-dim=256 output-dim=256
component-node name=output.affine component=output.affine input=prefinal-chain.batchnorm2 input-dim=256 output-dim=2824
output-node name=output input=output.affine dim=2824 objective=linear
component-node name=prefinal-xent.affine component=prefinal-xent.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-xent.relu component=prefinal-xent.relu input=prefinal-xent.affine input-dim=1024 output-dim=1024
component-node name=prefinal-xent.batchnorm1 component=prefinal-xent.batchnorm1 input=prefinal-xent.relu input-dim=1024 output-dim=1024
component-node name=prefinal-xent.linear component=prefinal-xent.linear input=prefinal-xent.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-xent.batchnorm2 component=prefinal-xent.batchnorm2 input=prefinal-xent.linear input-dim=256 output-dim=256
component-node name=output-xent.affine component=output-xent.affine input=prefinal-xent.batchnorm2 input-dim=256 output-dim=2824
component-node name=output-xent.log-softmax component=output-xent.log-softmax input=output-xent.affine input-dim=2824 output-dim=2824
output-node name=output-xent input=output-xent.log-softmax dim=2824 objective=linear
component name=lda type=FixedAffineComponent, input-dim=220, output-dim=220, linear-params-rms=0.005757, bias-{mean,stddev}=-0.001083,0.01285
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=220, output-dim=1024, learning-rate=1.11196e-05, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.05553, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.66,0.74,0.74,0.76 0.77,0.79,0.82,0.85,0.87 0.89,0.91,0.92,0.96), mean=0.823, stddev=0.0402], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.7,1.7,1.7,1.7 1.7,1.7,1.8,1.8,1.8 1.8,1.9,1.9,2.0), mean=1.78, stddev=0.0434], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,1.0,1.0,1.1 1.2,1.3,1.7,2.1,2.3 2.4,2.5,2.5,2.6), mean=1.73, stddev=0.415], bias-{mean,stddev}=-0.01663,0.815, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=3.23e+06, self-repaired-proportion=0.845777, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.04,0.69,1.0 1.4,1.7,1.8,2.9), mean=0.325, stddev=0.476], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.44,1.0,1.0 1.0,1.0,1.0,1.0), mean=0.489, stddev=0.47], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.05,0.05,0.06 0.07,0.09,0.15,0.28,0.29 0.30,0.31,0.32,0.38), mean=0.182, stddev=0.094], oderiv-count=4.71616e+06
component name=tdnn1.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=46011.6, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.04,0.69,1.0 1.4,1.7,1.8,2.9), mean=0.323, stddev=0.474], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.06,0.10,0.12 0.14,0.15,0.16,0.23), mean=0.0512, stddev=0.0506]
component name=tdnn1.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.253086, continuous=true
component name=tdnnf2.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=1.11196e-05, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.01827, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.83,0.83,0.83,0.83 0.83,0.83,0.83,0.83,0.83 0.83,0.83,0.83,0.83), mean=0.827, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.17,0.17,0.18 0.19,0.19,0.21,0.22,0.23 0.23,0.24,0.24,0.29), mean=0.206, stddev=0.0154], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.83,0.83,0.83,0.83 0.83,0.83,0.83,0.83,0.83 0.83,0.83,0.83,0.83), mean=0.827, stddev=-nan], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=1.11196e-05, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.05183, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.71,0.74,0.75,0.77 0.78,0.80,0.83,0.86,0.88 0.89,0.90,0.91,0.95), mean=0.828, stddev=0.0378], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.6,1.6,1.6 1.6,1.6,1.7,1.7,1.7 1.7,1.7,1.7,1.8), mean=1.66, stddev=0.0353], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.85,0.86,0.90,0.96 1.0,1.2,1.6,2.0,2.2 2.3,2.4,2.4,2.5), mean=1.6, stddev=0.419], bias-{mean,stddev}=0.006235,0.8018, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=2.99e+06, self-repaired-proportion=0.25984, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-06,2e-05,4e-05,0.0002 0.005,0.04,0.24,0.71,1.0 1.3,1.6,2.0,3.2), mean=0.399, stddev=0.451], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(5e-06,0.0001,0.0003,0.001 0.02,0.11,0.51,0.89,0.97 0.99,1.0,1.0,1.0), mean=0.501, stddev=0.348], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.006,0.007,0.008 0.009,0.01,0.02,0.04,0.09 0.15,0.16,0.17,0.18), mean=0.0328, stddev=0.0415], oderiv-count=4.68621e+06
component name=tdnnf2.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=45499.6, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-09,2e-05,5e-05,0.0002 0.005,0.04,0.24,0.71,1.0 1.3,1.6,2.0,3.2), mean=0.398, stddev=0.45], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-05,0.002,0.003,0.006 0.04,0.14,0.33,0.48,0.55 0.61,0.70,0.76,1.0), mean=0.322, stddev=0.19]
component name=tdnnf2.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.253086, continuous=true
component name=tdnnf2.noop type=NoOpComponent, dim=1024
component name=tdnnf3.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=1.11196e-05, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.01816, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.82,0.82,0.82,0.82 0.82,0.82,0.82,0.82,0.82 0.82,0.82,0.82,0.82), mean=0.822, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.17,0.17,0.18 0.19,0.19,0.20,0.22,0.22 0.23,0.24,0.25,0.27), mean=0.205, stddev=0.0155], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.82,0.82,0.82,0.82 0.82,0.82,0.82,0.82,0.82 0.82,0.82,0.82,0.82), mean=0.822, stddev=0.000488], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=1.11196e-05, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.05173, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.71,0.75,0.75,0.77 0.78,0.79,0.83,0.86,0.87 0.89,0.91,0.92,0.95), mean=0.827, stddev=0.0379], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.6,1.6,1.6 1.6,1.6,1.7,1.7,1.7 1.7,1.7,1.7,1.8), mean=1.66, stddev=0.0385], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.85,0.87,0.90,0.95 1.0,1.2,1.6,2.0,2.2 2.3,2.4,2.4,2.5), mean=1.6, stddev=0.422], bias-{mean,stddev}=-0.005224,0.7973, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=2.81e+06, self-repaired-proportion=0.0774664, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-05,0.0004,0.01,0.03 0.06,0.11,0.36,0.78,1.1 1.3,1.6,1.7,2.9), mean=0.478, stddev=0.422], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.002,0.02,0.06 0.11,0.19,0.50,0.79,0.88 0.94,0.97,0.98,1.0), mean=0.498, stddev=0.283], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.004,0.005 0.005,0.006,0.008,0.01,0.02 0.02,0.05,0.11,0.14), mean=0.0114, stddev=0.0152], oderiv-count=4.63315e+06
component name=tdnnf3.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=44987.6, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-05,0.0005,0.01,0.03 0.06,0.11,0.36,0.78,1.1 1.3,1.6,1.7,2.9), mean=0.476, stddev=0.421], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.01,0.10,0.17 0.24,0.32,0.54,0.71,0.81 0.87,0.94,1.0,1.3), mean=0.528, stddev=0.22]
component name=tdnnf3.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.253086, continuous=true
component name=tdnnf3.noop type=NoOpComponent, dim=1024
component name=tdnnf4.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=1.11196e-05, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.01813, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.82,0.82,0.82,0.82 0.82,0.82,0.82,0.82,0.82 0.82,0.82,0.82,0.82), mean=0.821, stddev=0.000244], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.17,0.17,0.18 0.19,0.19,0.20,0.22,0.22 0.23,0.24,0.25,0.31), mean=0.205, stddev=0.0151], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.82,0.82,0.82,0.82 0.82,0.82,0.82,0.82,0.82 0.82,0.82,0.82,0.82), mean=0.821, stddev=0], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=1.11196e-05, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.05161, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.72,0.74,0.75,0.76 0.78,0.79,0.83,0.86,0.87 0.88,0.90,0.91,0.96), mean=0.825, stddev=0.0376], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.6,1.6,1.6 1.6,1.6,1.7,1.7,1.7 1.7,1.7,1.7,1.7), mean=1.65, stddev=0.0363], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.83,0.85,0.90,0.95 1.0,1.2,1.6,2.0,2.2 2.3,2.4,2.4,2.5), mean=1.6, stddev=0.419], bias-{mean,stddev}=0.01131,0.8681, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=1.01e+06, self-repaired-proportion=0.0646456, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(7e-05,0.02,0.03,0.05 0.09,0.15,0.43,0.86,1.2 1.5,1.7,2.0,3.2), mean=0.548, stddev=0.466], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0003,0.02,0.04,0.07 0.13,0.22,0.50,0.78,0.88 0.93,0.96,0.97,1.0), mean=0.503, stddev=0.271], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.005,0.006,0.006 0.007,0.008,0.01,0.01,0.02 0.02,0.03,0.04,0.22), mean=0.0134, stddev=0.0171], oderiv-count=1.57517e+06
component name=tdnnf4.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=14995.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(8e-05,0.02,0.03,0.05 0.09,0.15,0.43,0.86,1.2 1.5,1.7,2.0,3.2), mean=0.546, stddev=0.464], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.14,0.20,0.25 0.34,0.42,0.64,0.83,0.93 0.99,1.1,1.2,1.5), mean=0.637, stddev=0.234]
component name=tdnnf4.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.253086, continuous=true
component name=tdnnf4.noop type=NoOpComponent, dim=1024
component name=tdnnf5.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=1.11196e-05, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=0, linear-params-rms=0.02533, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.81,0.81,0.81,0.81 0.81,0.81,0.81,0.81,0.81 0.81,0.81,0.81,0.81), mean=0.811, stddev=0.000244], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.22,0.23,0.24,0.25 0.26,0.27,0.29,0.30,0.31 0.32,0.33,0.34,0.35), mean=0.286, stddev=0.0202], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.81,0.81,0.81,0.81 0.81,0.81,0.81,0.81,0.81 0.81,0.81,0.81,0.81), mean=0.811, stddev=0], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=1.11196e-05, l2-regularize=0.008, max-change=0.75, time-offsets=0, linear-params-rms=0.07306, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.66,0.70,0.71,0.74 0.76,0.78,0.82,0.87,0.90 0.92,0.94,0.95,0.98), mean=0.825, stddev=0.054], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2.2,2.2,2.2,2.3 2.3,2.3,2.3,2.4,2.4 2.4,2.4,2.5,2.5), mean=2.34, stddev=0.0513], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.5,1.6,1.6 1.7,1.9,2.3,2.7,2.9 3.0,3.1,3.1,3.2), mean=2.3, stddev=0.42], bias-{mean,stddev}=-0.0002944,0.8311, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.09e+05, self-repaired-proportion=0.0537109, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.02,0.03,0.07 0.10,0.17,0.41,0.87,1.1 1.5,1.8,2.0,2.8), mean=0.544, stddev=0.45], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0006,0.03,0.04,0.09 0.14,0.23,0.48,0.76,0.85 0.92,0.96,0.98,1.0), mean=0.496, stddev=0.262], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.005,0.005,0.005 0.006,0.007,0.009,0.01,0.02 0.02,0.03,0.04,0.19), mean=0.0115, stddev=0.0139], oderiv-count=1.48493e+06
component name=tdnnf5.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=14995.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.02,0.03,0.06 0.10,0.17,0.41,0.87,1.1 1.5,1.8,2.0,2.8), mean=0.542, stddev=0.448], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.008,0.14,0.19,0.29 0.36,0.46,0.66,0.88,1.0 1.1,1.1,1.2,1.4), mean=0.67, stddev=0.245]
component name=tdnnf5.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.253086, continuous=true
component name=tdnnf5.noop type=NoOpComponent, dim=1024
component name=tdnnf6.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=1.11196e-05, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01798, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.81,0.81,0.81,0.81 0.81,0.81,0.81,0.81,0.81 0.81,0.81,0.81,0.81), mean=0.814, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.16,0.17,0.18 0.19,0.19,0.20,0.21,0.22 0.23,0.23,0.24,0.27), mean=0.203, stddev=0.0147], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.81,0.81,0.81,0.81 0.81,0.81,0.81,0.81,0.81 0.81,0.81,0.81,0.81), mean=0.814, stddev=-nan], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=1.11196e-05, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.05168, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.70,0.73,0.75,0.76 0.78,0.80,0.83,0.86,0.87 0.89,0.90,0.92,0.93), mean=0.826, stddev=0.0371], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.6,1.6,1.6,1.6 1.6,1.6,1.7,1.7,1.7 1.7,1.7,1.7,1.8), mean=1.65, stddev=0.0359], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.83,0.86,0.90,0.95 1.0,1.2,1.6,2.0,2.2 2.3,2.4,2.4,2.5), mean=1.6, stddev=0.417], bias-{mean,stddev}=-0.0232,0.7875, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.39e+05, self-repaired-proportion=0.0262936, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0004,0.04,0.04,0.07 0.13,0.20,0.45,0.85,1.1 1.3,1.6,1.7,3.0), mean=0.545, stddev=0.411], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.04,0.05,0.10 0.16,0.25,0.48,0.73,0.83 0.88,0.92,0.94,0.99), mean=0.491, stddev=0.243], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.004,0.005 0.005,0.006,0.008,0.01,0.01 0.02,0.02,0.03,0.15), mean=0.00936, stddev=0.00761], oderiv-count=1.44013e+06
component name=tdnnf6.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=14483.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0006,0.03,0.04,0.08 0.13,0.20,0.46,0.85,1.1 1.3,1.6,1.7,3.0), mean=0.544, stddev=0.409], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.21,0.25,0.32 0.41,0.51,0.73,0.90,1.0 1.1,1.2,1.3,1.4), mean=0.714, stddev=0.231]
component name=tdnnf6.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.253086, continuous=true
component name=tdnnf6.noop type=NoOpComponent, dim=1024
component name=tdnnf7.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=1.11196e-05, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01799, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.81,0.81,0.81,0.81 0.81,0.81,0.81,0.81,0.81 0.81,0.81,0.81,0.81), mean=0.814, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.16,0.17,0.18 0.18,0.19,0.20,0.21,0.22 0.23,0.23,0.24,0.26), mean=0.203, stddev=0.015], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.81,0.81,0.81,0.81 0.81,0.81,0.81,0.81,0.81 0.81,0.81,0.81,0.81), mean=0.814, stddev=0.000244], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=1.11196e-05, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.05177, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.69,0.74,0.75,0.77 0.78,0.80,0.83,0.86,0.87 0.89,0.91,0.92,0.96), mean=0.827, stddev=0.0377], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.6,1.6,1.6 1.6,1.6,1.7,1.7,1.7 1.7,1.7,1.7,1.8), mean=1.66, stddev=0.0361], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.84,0.87,0.89,0.97 1.0,1.2,1.6,2.0,2.2 2.3,2.4,2.4,2.5), mean=1.6, stddev=0.42], bias-{mean,stddev}=0.01521,0.8395, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.43e+05, self-repaired-proportion=0.0382322, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0008,0.03,0.05,0.07 0.12,0.20,0.45,0.90,1.2 1.5,1.8,2.0,2.9), mean=0.579, stddev=0.456], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.04,0.06,0.10 0.15,0.24,0.49,0.75,0.84 0.90,0.95,0.97,0.99), mean=0.501, stddev=0.253], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.004,0.005 0.005,0.006,0.007,0.01,0.01 0.02,0.02,0.03,0.13), mean=0.00878, stddev=0.00636], oderiv-count=1.42682e+06
component name=tdnnf7.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=13971.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.03,0.05,0.07 0.12,0.20,0.45,0.90,1.2 1.5,1.8,2.0,2.9), mean=0.577, stddev=0.454], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.19,0.24,0.34 0.40,0.51,0.72,0.94,1.0 1.1,1.2,1.3,1.4), mean=0.724, stddev=0.243]
component name=tdnnf7.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.253086, continuous=true
component name=tdnnf7.noop type=NoOpComponent, dim=1024
component name=tdnnf8.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=1.11196e-05, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01797, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.81,0.81,0.81,0.81 0.81,0.81,0.81,0.81,0.81 0.81,0.81,0.81,0.81), mean=0.813, stddev=0.000244], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.16,0.17,0.18 0.19,0.19,0.20,0.21,0.22 0.23,0.23,0.24,0.27), mean=0.203, stddev=0.0151], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.81,0.81,0.81,0.81 0.81,0.81,0.81,0.81,0.81 0.81,0.81,0.81,0.81), mean=0.813, stddev=0.000244], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=1.11196e-05, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.05169, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.70,0.74,0.75,0.77 0.78,0.80,0.82,0.86,0.87 0.89,0.91,0.92,0.96), mean=0.826, stddev=0.0376], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.6,1.6,1.6,1.6 1.6,1.6,1.7,1.7,1.7 1.7,1.7,1.7,1.8), mean=1.65, stddev=0.0357], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.84,0.86,0.89,0.94 1.0,1.2,1.6,2.0,2.2 2.3,2.4,2.4,2.5), mean=1.6, stddev=0.42], bias-{mean,stddev}=-0.02104,0.8538, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.13e+05, self-repaired-proportion=0.0429222, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.03,0.04,0.07 0.11,0.19,0.46,0.87,1.2 1.4,1.8,2.0,2.6), mean=0.569, stddev=0.447], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0006,0.04,0.05,0.09 0.15,0.25,0.49,0.74,0.84 0.90,0.96,0.97,0.99), mean=0.491, stddev=0.252], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.004,0.004 0.005,0.005,0.007,0.01,0.01 0.02,0.02,0.03,0.15), mean=0.00877, stddev=0.0109], oderiv-count=1.36858e+06
component name=tdnnf8.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=13459.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.03,0.04,0.07 0.11,0.19,0.46,0.86,1.2 1.4,1.8,2.0,2.6), mean=0.566, stddev=0.446], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.007,0.21,0.24,0.33 0.40,0.50,0.73,0.93,1.0 1.1,1.2,1.3,1.7), mean=0.727, stddev=0.256]
component name=tdnnf8.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.253086, continuous=true
component name=tdnnf8.noop type=NoOpComponent, dim=1024
component name=tdnnf9.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=1.11196e-05, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01791, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.81,0.81,0.81,0.81 0.81,0.81,0.81,0.81,0.81 0.81,0.81,0.81,0.81), mean=0.811, stddev=0.000244], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.16,0.17,0.18 0.18,0.19,0.20,0.21,0.22 0.23,0.23,0.24,0.27), mean=0.202, stddev=0.0154], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.81,0.81,0.81,0.81 0.81,0.81,0.81,0.81,0.81 0.81,0.81,0.81,0.81), mean=0.811, stddev=0.000345], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=1.11196e-05, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.05172, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.68,0.74,0.75,0.76 0.78,0.80,0.83,0.86,0.87 0.89,0.90,0.91,0.94), mean=0.827, stddev=0.0374], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.6,1.6,1.6,1.6 1.6,1.6,1.7,1.7,1.7 1.7,1.7,1.7,1.8), mean=1.65, stddev=0.0372], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.83,0.87,0.90,0.96 1.0,1.2,1.6,2.0,2.2 2.3,2.4,2.4,2.5), mean=1.6, stddev=0.42], bias-{mean,stddev}=-0.00886,0.8345, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.67e+05, self-repaired-proportion=0.0299541, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.03,0.05,0.08 0.12,0.21,0.48,0.89,1.2 1.4,1.7,1.9,2.9), mean=0.58, stddev=0.433], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.05,0.05,0.10 0.15,0.26,0.50,0.74,0.83 0.89,0.94,0.95,0.99), mean=0.496, stddev=0.246], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.003,0.004 0.004,0.005,0.006,0.009,0.01 0.01,0.02,0.02,0.16), mean=0.00776, stddev=0.00823], oderiv-count=1.28109e+06
component name=tdnnf9.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=12947.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.03,0.04,0.08 0.12,0.21,0.48,0.89,1.2 1.4,1.7,1.9,2.8), mean=0.578, stddev=0.431], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.009,0.21,0.25,0.32 0.41,0.51,0.74,0.96,1.1 1.1,1.3,1.3,1.6), mean=0.74, stddev=0.254]
component name=tdnnf9.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.253086, continuous=true
component name=tdnnf9.noop type=NoOpComponent, dim=1024
component name=tdnnf10.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=1.11196e-05, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01783, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.81,0.81,0.81,0.81 0.81,0.81,0.81,0.81,0.81 0.81,0.81,0.81,0.81), mean=0.807, stddev=-nan], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.15,0.17,0.18 0.18,0.19,0.20,0.21,0.22 0.22,0.23,0.24,0.26), mean=0.201, stddev=0.0153], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.81,0.81,0.81,0.81 0.81,0.81,0.81,0.81,0.81 0.81,0.81,0.81,0.81), mean=0.807, stddev=0], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=1.11196e-05, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.05169, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.72,0.75,0.76,0.77 0.78,0.79,0.83,0.85,0.87 0.89,0.91,0.92,0.95), mean=0.826, stddev=0.0367], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.6,1.6,1.6 1.6,1.6,1.7,1.7,1.7 1.7,1.7,1.7,1.8), mean=1.65, stddev=0.0364], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.84,0.88,0.90,0.95 1.0,1.2,1.6,2.0,2.2 2.3,2.4,2.4,2.5), mean=1.6, stddev=0.415], bias-{mean,stddev}=0.0566,0.8385, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.35e+05, self-repaired-proportion=0.0318775, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.03,0.05,0.09 0.13,0.22,0.50,0.97,1.2 1.5,1.8,2.1,2.6), mean=0.612, stddev=0.459], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.05,0.07,0.12 0.18,0.26,0.51,0.77,0.85 0.90,0.95,0.96,0.99), mean=0.514, stddev=0.249], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.003,0.003 0.004,0.004,0.006,0.008,0.01 0.01,0.02,0.02,0.14), mean=0.00702, stddev=0.00739], oderiv-count=1.27507e+06
component name=tdnnf10.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=12435.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.03,0.05,0.09 0.13,0.22,0.49,0.97,1.2 1.5,1.8,2.0,2.6), mean=0.609, stddev=0.458], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.17,0.27,0.33 0.41,0.51,0.74,0.97,1.1 1.2,1.3,1.4,1.9), mean=0.748, stddev=0.264]
component name=tdnnf10.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.253086, continuous=true
component name=tdnnf10.noop type=NoOpComponent, dim=1024
component name=tdnnf11.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=1.11196e-05, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01785, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.81,0.81,0.81,0.81 0.81,0.81,0.81,0.81,0.81 0.81,0.81,0.81,0.81), mean=0.808, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.16,0.17,0.18 0.18,0.19,0.20,0.21,0.22 0.23,0.23,0.24,0.27), mean=0.201, stddev=0.0149], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.81,0.81,0.81,0.81 0.81,0.81,0.81,0.81,0.81 0.81,0.81,0.81,0.81), mean=0.808, stddev=0.000244], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=1.11196e-05, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.05159, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.71,0.74,0.75,0.76 0.78,0.79,0.82,0.86,0.87 0.89,0.90,0.91,0.96), mean=0.824, stddev=0.0381], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.6,1.6,1.6,1.6 1.6,1.6,1.7,1.7,1.7 1.7,1.7,1.7,1.7), mean=1.65, stddev=0.0348], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.85,0.87,0.90,0.95 1.0,1.2,1.6,2.0,2.2 2.3,2.4,2.4,2.4), mean=1.6, stddev=0.418], bias-{mean,stddev}=-0.04398,0.8594, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.34e+05, self-repaired-proportion=0.0222818, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0003,0.03,0.05,0.08 0.12,0.20,0.45,0.92,1.2 1.5,1.7,1.8,2.6), mean=0.578, stddev=0.441], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.04,0.07,0.11 0.15,0.23,0.48,0.73,0.83 0.88,0.93,0.95,1.0), mean=0.486, stddev=0.248], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.003,0.003 0.004,0.004,0.005,0.008,0.01 0.01,0.01,0.02,0.12), mean=0.00673, stddev=0.00806], oderiv-count=1.24499e+06
component name=tdnnf11.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11923.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0004,0.03,0.05,0.08 0.12,0.19,0.46,0.91,1.2 1.4,1.7,1.8,2.6), mean=0.575, stddev=0.439], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.21,0.25,0.32 0.40,0.50,0.73,0.95,1.1 1.2,1.3,1.3,1.8), mean=0.736, stddev=0.262]
component name=tdnnf11.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.253086, continuous=true
component name=tdnnf11.noop type=NoOpComponent, dim=1024
component name=tdnnf12.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=1.11196e-05, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.0178, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.81,0.81,0.81,0.81 0.81,0.81,0.81,0.81,0.81 0.81,0.81,0.81,0.81), mean=0.805, stddev=-nan], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.16,0.17,0.18 0.18,0.19,0.20,0.21,0.22 0.22,0.23,0.24,0.27), mean=0.201, stddev=0.0152], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.81,0.81,0.81,0.81 0.81,0.81,0.81,0.81,0.81 0.81,0.81,0.81,0.81), mean=0.805, stddev=0], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=1.11196e-05, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.0515, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.71,0.74,0.75,0.76 0.78,0.79,0.82,0.85,0.87 0.88,0.90,0.91,0.94), mean=0.823, stddev=0.0367], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.6,1.6,1.6 1.6,1.6,1.6,1.7,1.7 1.7,1.7,1.7,1.8), mean=1.65, stddev=0.0345], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.83,0.86,0.89,0.95 1.0,1.2,1.6,2.0,2.2 2.3,2.4,2.4,2.5), mean=1.59, stddev=0.415], bias-{mean,stddev}=-0.02285,0.8356, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.55e+05, self-repaired-proportion=0.0186889, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0003,0.05,0.06,0.09 0.14,0.21,0.48,0.92,1.2 1.5,1.8,1.9,2.7), mean=0.586, stddev=0.441], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.05,0.07,0.11 0.16,0.26,0.48,0.72,0.83 0.90,0.93,0.95,0.99), mean=0.49, stddev=0.241], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.003,0.003 0.003,0.004,0.005,0.007,0.008 0.01,0.01,0.02,0.10), mean=0.00573, stddev=0.00609], oderiv-count=1.1401e+06
component name=tdnnf12.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11411.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.05,0.06,0.09 0.13,0.21,0.47,0.92,1.2 1.5,1.7,1.9,2.7), mean=0.584, stddev=0.439], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.008,0.24,0.27,0.35 0.42,0.52,0.73,0.96,1.1 1.2,1.3,1.3,1.6), mean=0.744, stddev=0.252]
component name=tdnnf12.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.253086, continuous=true
component name=tdnnf12.noop type=NoOpComponent, dim=1024
component name=tdnnf13.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=1.11196e-05, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01765, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.80,0.80,0.80,0.80 0.80,0.80,0.80,0.80,0.80 0.80,0.80,0.80,0.80), mean=0.799, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.16,0.17,0.18 0.18,0.19,0.20,0.21,0.22 0.22,0.23,0.23,0.26), mean=0.199, stddev=0.0151], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.80,0.80,0.80,0.80 0.80,0.80,0.80,0.80,0.80 0.80,0.80,0.80,0.80), mean=0.799, stddev=0.000244], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=1.11196e-05, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.05154, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.70,0.74,0.75,0.76 0.77,0.79,0.82,0.85,0.87 0.89,0.90,0.91,0.96), mean=0.824, stddev=0.0382], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.6,1.6,1.6,1.6 1.6,1.6,1.6,1.7,1.7 1.7,1.7,1.7,1.8), mean=1.65, stddev=0.0366], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.83,0.86,0.89,0.94 1.0,1.2,1.6,2.0,2.2 2.3,2.4,2.4,2.5), mean=1.6, stddev=0.416], bias-{mean,stddev}=-0.01127,0.8288, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.79e+05, self-repaired-proportion=0.0196713, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(8e-05,0.05,0.06,0.09 0.15,0.23,0.49,0.95,1.2 1.4,1.7,1.9,2.4), mean=0.605, stddev=0.433], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0004,0.05,0.08,0.13 0.18,0.27,0.48,0.72,0.81 0.87,0.92,0.95,0.98), mean=0.493, stddev=0.231], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.003 0.003,0.003,0.004,0.006,0.007 0.009,0.01,0.01,0.09), mean=0.00489, stddev=0.00476], oderiv-count=1.1321e+06
component name=tdnnf13.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=10899.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(8e-05,0.04,0.06,0.10 0.15,0.23,0.49,0.95,1.2 1.4,1.7,1.9,2.4), mean=0.602, stddev=0.431], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.25,0.28,0.35 0.44,0.53,0.76,0.99,1.1 1.2,1.3,1.4,1.6), mean=0.763, stddev=0.261]
component name=tdnnf13.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.253086, continuous=true
component name=tdnnf13.noop type=NoOpComponent, dim=1024
component name=prefinal-l type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=1.11196e-05, l2-regularize=0.008, max-change=0.75, params-rms=0.02428, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.78,0.78,0.78,0.78 0.78,0.78,0.78,0.78,0.78 0.78,0.78,0.78,0.78), mean=0.777, stddev=0], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.31,0.33,0.34,0.35 0.36,0.37,0.39,0.41,0.42 0.43,0.43,0.44,0.46), mean=0.388, stddev=0.0241], params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.78,0.78,0.78,0.78 0.78,0.78,0.78,0.78,0.78 0.78,0.78,0.78,0.78), mean=0.777, stddev=0], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=1.11196e-05, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.05136, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.71,0.74,0.75,0.76 0.77,0.79,0.82,0.85,0.87 0.88,0.89,0.90,0.93), mean=0.821, stddev=0.0365], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.6,1.6,1.6 1.6,1.6,1.6,1.7,1.7 1.7,1.7,1.7,1.7), mean=1.64, stddev=0.0343], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.82,0.84,0.88,0.95 1.0,1.2,1.6,2.0,2.2 2.3,2.4,2.4,2.5), mean=1.59, stddev=0.418], bias-{mean,stddev}=-0.006546,0.8449, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.54e+05, self-repaired-proportion=0.0371094, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(7e-05,0.0008,0.04,0.07 0.11,0.19,0.45,0.89,1.2 1.4,1.8,2.1,2.6), mean=0.569, stddev=0.452], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0003,0.004,0.06,0.10 0.16,0.27,0.49,0.74,0.84 0.90,0.95,0.96,0.99), mean=0.497, stddev=0.249], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.002,0.002,0.002 0.002,0.003,0.004,0.006,0.007 0.01,0.01,0.05,0.07), mean=0.00518, stddev=0.00681], oderiv-count=1.10016e+06
component name=prefinal-chain.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=10899.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(5e-05,0.0008,0.04,0.07 0.11,0.19,0.45,0.89,1.2 1.4,1.8,2.1,2.6), mean=0.568, stddev=0.45], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.02,0.19,0.28 0.35,0.46,0.68,0.89,1.0 1.1,1.2,1.3,1.6), mean=0.681, stddev=0.253]
component name=prefinal-chain.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=1.11196e-05, l2-regularize=0.008, max-change=0.75, params-rms=0.02524, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.81,0.81,0.81,0.81 0.81,0.81,0.81,0.81,0.81 0.81,0.81,0.81,0.81), mean=0.808, stddev=0], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.29,0.34,0.34,0.36 0.37,0.38,0.40,0.43,0.44 0.45,0.46,0.46,0.52), mean=0.403, stddev=0.0278], params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.81,0.81,0.81,0.81 0.81,0.81,0.81,0.81,0.81 0.81,0.81,0.81,0.81), mean=0.808, stddev=0], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=10899.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1e-07,-7e-08,-7e-08,-5e-08 -4e-08,-2e-08,6e-10,3e-08,4e-08 6e-08,6e-08,7e-08,1e-07), mean=1.35e-09, stddev=3.31e-08], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.68,0.70,0.71,0.73 0.74,0.77,0.81,0.87,0.90 0.94,0.98,1.0,1.1), mean=0.819, stddev=0.0682]
component name=output.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=2824, learning-rate=1.11196e-05, l2-regularize=0.002, max-change=1.5, linear-params-rms=0.009328, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.002,0.005,0.01 0.03,0.05,0.13,0.20,0.23 0.26,0.29,0.31,0.38), mean=0.127, stddev=0.0778], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.37,0.39,0.40,0.42 0.44,0.46,0.49,0.53,0.54 0.56,0.57,0.58,0.60), mean=0.494, stddev=0.0407], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.06,0.06,0.07 0.08,0.10,0.19,0.56,1.0 1.2,1.2,1.3,1.4), mean=0.35, stddev=0.351], bias-{mean,stddev}=1.572e-05,0.02913, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=1.11196e-05, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.05115, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.71,0.73,0.74,0.76 0.77,0.78,0.82,0.85,0.86 0.88,0.90,0.91,0.95), mean=0.817, stddev=0.0379], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.5,1.6,1.6 1.6,1.6,1.6,1.7,1.7 1.7,1.7,1.7,1.8), mean=1.64, stddev=0.0361], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.81,0.85,0.88,0.94 1.0,1.2,1.6,2.0,2.2 2.3,2.3,2.4,2.5), mean=1.58, stddev=0.416], bias-{mean,stddev}=-0.0009927,0.8211, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.26e+05, self-repaired-proportion=0.0282493, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-05,0.03,0.05,0.09 0.13,0.22,0.46,0.88,1.2 1.4,1.7,1.9,2.9), mean=0.576, stddev=0.429], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(7e-05,0.05,0.07,0.12 0.18,0.27,0.48,0.72,0.83 0.90,0.94,0.96,0.99), mean=0.492, stddev=0.239], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0006,0.0007,0.0007,0.0008 0.0009,0.001,0.001,0.002,0.002 0.003,0.004,0.004,0.03), mean=0.00172, stddev=0.0022], oderiv-count=1.1463e+06
component name=prefinal-xent.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=10899.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-05,0.03,0.05,0.09 0.13,0.22,0.45,0.88,1.2 1.4,1.7,1.9,2.9), mean=0.573, stddev=0.427], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.18,0.25,0.34 0.43,0.50,0.72,0.93,1.0 1.1,1.2,1.2,1.4), mean=0.714, stddev=0.235]
component name=prefinal-xent.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=1.11196e-05, l2-regularize=0.008, max-change=0.75, params-rms=0.02405, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.77,0.77,0.77,0.77 0.77,0.77,0.77,0.77,0.77 0.77,0.77,0.77,0.77), mean=0.769, stddev=0.000244], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.30,0.32,0.33,0.34 0.35,0.36,0.38,0.41,0.42 0.43,0.44,0.44,0.46), mean=0.384, stddev=0.0281], params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.77,0.77,0.77,0.77 0.77,0.77,0.77,0.77,0.77 0.77,0.77,0.77,0.77), mean=0.769, stddev=0], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=10899.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1e-07,-9e-08,-7e-08,-6e-08 -4e-08,-3e-08,1e-09,3e-08,4e-08 5e-08,6e-08,8e-08,1e-07), mean=-3.35e-10, stddev=3.4e-08], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.69,0.71,0.71,0.73 0.75,0.77,0.81,0.86,0.89 0.91,0.95,1.0,1.2), mean=0.82, stddev=0.0609]
component name=output-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=2824, learning-rate=5.55979e-05, l2-regularize=0.002, learning-rate-factor=5, max-change=1.5, linear-params-rms=0.02318, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.02,0.02,0.02 0.02,0.03,0.14,0.55,0.68 0.77,0.84,0.88,1.1), mean=0.263, stddev=0.261], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.77,0.80,0.81,0.87 0.94,1.1,1.2,1.4,1.4 1.5,1.5,1.5,1.6), mean=1.22, stddev=0.183], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.11,0.11,0.13 0.15,0.20,0.41,1.3,2.6 3.0,3.2,3.3,3.5), mean=0.828, stddev=0.912], bias-{mean,stddev}=1.701e-08,0.06889, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-xent.log-softmax type=LogSoftmaxComponent, dim=2824, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,2e-06,4e-05,0.0001 0.0001,0.0002,0.0006,0.001,0.002 0.003,0.004,0.004,0.04), mean=0.000896, stddev=0.00117], oderiv-count=1.09562e+06
# Accounting: time=20 threads=1
# Ended (code 0) at Mon Jul 18 19:54:18 EDT 2022, elapsed time 20 seconds
