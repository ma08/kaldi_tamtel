# nnet3-am-info telugu_exp/chain_cleaned_1d/tdnn1d_sp/42.mdl && nnet3-show-progress --use-gpu=no telugu_exp/chain_cleaned_1d/tdnn1d_sp/41.mdl telugu_exp/chain_cleaned_1d/tdnn1d_sp/42.mdl 
# Started at Mon Jul 18 20:46:13 EDT 2022
#
nnet3-am-info telugu_exp/chain_cleaned_1d/tdnn1d_sp/42.mdl 
input-dim: 40
ivector-dim: 100
num-pdfs: 2824
prior-dimension: 0
# Nnet info follows.
left-context: 28
right-context: 28
num-parameters: 9032208
modulus: 1
input-node name=ivector dim=100
input-node name=input dim=40
component-node name=lda component=lda input=Append(Offset(input, -1), input, Offset(input, 1), ReplaceIndex(ivector, t, 0)) input-dim=220 output-dim=220
component-node name=tdnn1.affine component=tdnn1.affine input=lda input-dim=220 output-dim=1024
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=1024 output-dim=1024
component-node name=tdnn1.batchnorm component=tdnn1.batchnorm input=tdnn1.relu input-dim=1024 output-dim=1024
component-node name=tdnn1.dropout component=tdnn1.dropout input=tdnn1.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.linear component=tdnnf2.linear input=tdnn1.dropout input-dim=1024 output-dim=128
component-node name=tdnnf2.affine component=tdnnf2.affine input=tdnnf2.linear input-dim=128 output-dim=1024
component-node name=tdnnf2.relu component=tdnnf2.relu input=tdnnf2.affine input-dim=1024 output-dim=1024
component-node name=tdnnf2.batchnorm component=tdnnf2.batchnorm input=tdnnf2.relu input-dim=1024 output-dim=1024
component-node name=tdnnf2.dropout component=tdnnf2.dropout input=tdnnf2.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.noop component=tdnnf2.noop input=Sum(Scale(0.66, tdnn1.dropout), tdnnf2.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf3.linear component=tdnnf3.linear input=tdnnf2.noop input-dim=1024 output-dim=128
component-node name=tdnnf3.affine component=tdnnf3.affine input=tdnnf3.linear input-dim=128 output-dim=1024
component-node name=tdnnf3.relu component=tdnnf3.relu input=tdnnf3.affine input-dim=1024 output-dim=1024
component-node name=tdnnf3.batchnorm component=tdnnf3.batchnorm input=tdnnf3.relu input-dim=1024 output-dim=1024
component-node name=tdnnf3.dropout component=tdnnf3.dropout input=tdnnf3.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf3.noop component=tdnnf3.noop input=Sum(Scale(0.66, tdnnf2.noop), tdnnf3.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf4.linear component=tdnnf4.linear input=tdnnf3.noop input-dim=1024 output-dim=128
component-node name=tdnnf4.affine component=tdnnf4.affine input=tdnnf4.linear input-dim=128 output-dim=1024
component-node name=tdnnf4.relu component=tdnnf4.relu input=tdnnf4.affine input-dim=1024 output-dim=1024
component-node name=tdnnf4.batchnorm component=tdnnf4.batchnorm input=tdnnf4.relu input-dim=1024 output-dim=1024
component-node name=tdnnf4.dropout component=tdnnf4.dropout input=tdnnf4.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf4.noop component=tdnnf4.noop input=Sum(Scale(0.66, tdnnf3.noop), tdnnf4.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf5.linear component=tdnnf5.linear input=tdnnf4.noop input-dim=1024 output-dim=128
component-node name=tdnnf5.affine component=tdnnf5.affine input=tdnnf5.linear input-dim=128 output-dim=1024
component-node name=tdnnf5.relu component=tdnnf5.relu input=tdnnf5.affine input-dim=1024 output-dim=1024
component-node name=tdnnf5.batchnorm component=tdnnf5.batchnorm input=tdnnf5.relu input-dim=1024 output-dim=1024
component-node name=tdnnf5.dropout component=tdnnf5.dropout input=tdnnf5.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf5.noop component=tdnnf5.noop input=Sum(Scale(0.66, tdnnf4.noop), tdnnf5.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf6.linear component=tdnnf6.linear input=tdnnf5.noop input-dim=1024 output-dim=128
component-node name=tdnnf6.affine component=tdnnf6.affine input=tdnnf6.linear input-dim=128 output-dim=1024
component-node name=tdnnf6.relu component=tdnnf6.relu input=tdnnf6.affine input-dim=1024 output-dim=1024
component-node name=tdnnf6.batchnorm component=tdnnf6.batchnorm input=tdnnf6.relu input-dim=1024 output-dim=1024
component-node name=tdnnf6.dropout component=tdnnf6.dropout input=tdnnf6.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf6.noop component=tdnnf6.noop input=Sum(Scale(0.66, tdnnf5.noop), tdnnf6.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf7.linear component=tdnnf7.linear input=tdnnf6.noop input-dim=1024 output-dim=128
component-node name=tdnnf7.affine component=tdnnf7.affine input=tdnnf7.linear input-dim=128 output-dim=1024
component-node name=tdnnf7.relu component=tdnnf7.relu input=tdnnf7.affine input-dim=1024 output-dim=1024
component-node name=tdnnf7.batchnorm component=tdnnf7.batchnorm input=tdnnf7.relu input-dim=1024 output-dim=1024
component-node name=tdnnf7.dropout component=tdnnf7.dropout input=tdnnf7.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf7.noop component=tdnnf7.noop input=Sum(Scale(0.66, tdnnf6.noop), tdnnf7.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf8.linear component=tdnnf8.linear input=tdnnf7.noop input-dim=1024 output-dim=128
component-node name=tdnnf8.affine component=tdnnf8.affine input=tdnnf8.linear input-dim=128 output-dim=1024
component-node name=tdnnf8.relu component=tdnnf8.relu input=tdnnf8.affine input-dim=1024 output-dim=1024
component-node name=tdnnf8.batchnorm component=tdnnf8.batchnorm input=tdnnf8.relu input-dim=1024 output-dim=1024
component-node name=tdnnf8.dropout component=tdnnf8.dropout input=tdnnf8.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf8.noop component=tdnnf8.noop input=Sum(Scale(0.66, tdnnf7.noop), tdnnf8.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf9.linear component=tdnnf9.linear input=tdnnf8.noop input-dim=1024 output-dim=128
component-node name=tdnnf9.affine component=tdnnf9.affine input=tdnnf9.linear input-dim=128 output-dim=1024
component-node name=tdnnf9.relu component=tdnnf9.relu input=tdnnf9.affine input-dim=1024 output-dim=1024
component-node name=tdnnf9.batchnorm component=tdnnf9.batchnorm input=tdnnf9.relu input-dim=1024 output-dim=1024
component-node name=tdnnf9.dropout component=tdnnf9.dropout input=tdnnf9.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf9.noop component=tdnnf9.noop input=Sum(Scale(0.66, tdnnf8.noop), tdnnf9.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf10.linear component=tdnnf10.linear input=tdnnf9.noop input-dim=1024 output-dim=128
component-node name=tdnnf10.affine component=tdnnf10.affine input=tdnnf10.linear input-dim=128 output-dim=1024
component-node name=tdnnf10.relu component=tdnnf10.relu input=tdnnf10.affine input-dim=1024 output-dim=1024
component-node name=tdnnf10.batchnorm component=tdnnf10.batchnorm input=tdnnf10.relu input-dim=1024 output-dim=1024
component-node name=tdnnf10.dropout component=tdnnf10.dropout input=tdnnf10.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf10.noop component=tdnnf10.noop input=Sum(Scale(0.66, tdnnf9.noop), tdnnf10.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf11.linear component=tdnnf11.linear input=tdnnf10.noop input-dim=1024 output-dim=128
component-node name=tdnnf11.affine component=tdnnf11.affine input=tdnnf11.linear input-dim=128 output-dim=1024
component-node name=tdnnf11.relu component=tdnnf11.relu input=tdnnf11.affine input-dim=1024 output-dim=1024
component-node name=tdnnf11.batchnorm component=tdnnf11.batchnorm input=tdnnf11.relu input-dim=1024 output-dim=1024
component-node name=tdnnf11.dropout component=tdnnf11.dropout input=tdnnf11.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf11.noop component=tdnnf11.noop input=Sum(Scale(0.66, tdnnf10.noop), tdnnf11.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf12.linear component=tdnnf12.linear input=tdnnf11.noop input-dim=1024 output-dim=128
component-node name=tdnnf12.affine component=tdnnf12.affine input=tdnnf12.linear input-dim=128 output-dim=1024
component-node name=tdnnf12.relu component=tdnnf12.relu input=tdnnf12.affine input-dim=1024 output-dim=1024
component-node name=tdnnf12.batchnorm component=tdnnf12.batchnorm input=tdnnf12.relu input-dim=1024 output-dim=1024
component-node name=tdnnf12.dropout component=tdnnf12.dropout input=tdnnf12.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf12.noop component=tdnnf12.noop input=Sum(Scale(0.66, tdnnf11.noop), tdnnf12.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf13.linear component=tdnnf13.linear input=tdnnf12.noop input-dim=1024 output-dim=128
component-node name=tdnnf13.affine component=tdnnf13.affine input=tdnnf13.linear input-dim=128 output-dim=1024
component-node name=tdnnf13.relu component=tdnnf13.relu input=tdnnf13.affine input-dim=1024 output-dim=1024
component-node name=tdnnf13.batchnorm component=tdnnf13.batchnorm input=tdnnf13.relu input-dim=1024 output-dim=1024
component-node name=tdnnf13.dropout component=tdnnf13.dropout input=tdnnf13.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf13.noop component=tdnnf13.noop input=Sum(Scale(0.66, tdnnf12.noop), tdnnf13.dropout) input-dim=1024 output-dim=1024
component-node name=prefinal-l component=prefinal-l input=tdnnf13.noop input-dim=1024 output-dim=256
component-node name=prefinal-chain.affine component=prefinal-chain.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-chain.relu component=prefinal-chain.relu input=prefinal-chain.affine input-dim=1024 output-dim=1024
component-node name=prefinal-chain.batchnorm1 component=prefinal-chain.batchnorm1 input=prefinal-chain.relu input-dim=1024 output-dim=1024
component-node name=prefinal-chain.linear component=prefinal-chain.linear input=prefinal-chain.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-chain.batchnorm2 component=prefinal-chain.batchnorm2 input=prefinal-chain.linear input-dim=256 output-dim=256
component-node name=output.affine component=output.affine input=prefinal-chain.batchnorm2 input-dim=256 output-dim=2824
output-node name=output input=output.affine dim=2824 objective=linear
component-node name=prefinal-xent.affine component=prefinal-xent.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-xent.relu component=prefinal-xent.relu input=prefinal-xent.affine input-dim=1024 output-dim=1024
component-node name=prefinal-xent.batchnorm1 component=prefinal-xent.batchnorm1 input=prefinal-xent.relu input-dim=1024 output-dim=1024
component-node name=prefinal-xent.linear component=prefinal-xent.linear input=prefinal-xent.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-xent.batchnorm2 component=prefinal-xent.batchnorm2 input=prefinal-xent.linear input-dim=256 output-dim=256
component-node name=output-xent.affine component=output-xent.affine input=prefinal-xent.batchnorm2 input-dim=256 output-dim=2824
component-node name=output-xent.log-softmax component=output-xent.log-softmax input=output-xent.affine input-dim=2824 output-dim=2824
output-node name=output-xent input=output-xent.log-softmax dim=2824 objective=linear
component name=lda type=FixedAffineComponent, input-dim=220, output-dim=220, linear-params-rms=0.005757, bias-{mean,stddev}=-0.001083,0.01285
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=220, output-dim=1024, learning-rate=4.35192e-06, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.05098, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.58,0.67,0.68,0.69 0.71,0.72,0.76,0.79,0.80 0.82,0.83,0.85,0.88), mean=0.755, stddev=0.0382], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.5,1.6,1.6 1.6,1.6,1.6,1.7,1.7 1.7,1.7,1.7,1.8), mean=1.63, stddev=0.0435], bias-{mean,stddev}=-0.01545,0.7476, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=3.1e+06, self-repaired-proportion=0.848536, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.03,0.63,0.96 1.2,1.5,1.7,2.6), mean=0.297, stddev=0.436], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.43,1.0,1.0 1.0,1.0,1.0,1.0), mean=0.489, stddev=0.471], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.03,0.03,0.04 0.05,0.06,0.12,0.18,0.19 0.20,0.21,0.22,0.28), mean=0.122, stddev=0.0578], oderiv-count=4.65267e+06
component name=tdnn1.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=47674.3, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.03,0.63,0.96 1.2,1.5,1.7,2.6), mean=0.296, stddev=0.435], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.05,0.09,0.10 0.12,0.14,0.15,0.22), mean=0.0452, stddev=0.0455]
component name=tdnn1.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.240741, continuous=true
component name=tdnnf2.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=4.35192e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.01656, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.75,0.75,0.75,0.75 0.75,0.75,0.75,0.75,0.75 0.75,0.75,0.75,0.75), mean=0.75, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.15,0.16,0.16 0.17,0.17,0.19,0.20,0.21 0.21,0.22,0.22,0.27), mean=0.187, stddev=0.0155], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=4.35192e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.04753, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.68,0.69,0.70 0.71,0.73,0.76,0.79,0.81 0.82,0.83,0.84,0.87), mean=0.76, stddev=0.0352], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.5,1.5 1.5,1.5,1.5,1.5,1.6 1.6,1.6,1.6,1.6), mean=1.52, stddev=0.0325], bias-{mean,stddev}=0.003693,0.7323, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=2.76e+06, self-repaired-proportion=0.265749, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-06,1e-05,4e-05,9e-05 0.006,0.03,0.22,0.65,0.92 1.2,1.5,1.8,2.9), mean=0.362, stddev=0.411], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(9e-06,0.0001,0.0003,0.0009 0.03,0.10,0.50,0.90,0.96 0.99,1.0,1.0,1.0), mean=0.5, stddev=0.35], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.005,0.005 0.006,0.007,0.01,0.03,0.06 0.10,0.10,0.11,0.12), mean=0.0225, stddev=0.0267], oderiv-count=4.47622e+06
component name=tdnnf2.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=47162.3, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-07,1e-05,3e-05,9e-05 0.006,0.03,0.22,0.65,0.91 1.2,1.5,1.8,2.9), mean=0.362, stddev=0.41], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.002,0.002,0.004 0.05,0.13,0.30,0.44,0.50 0.55,0.61,0.66,0.89), mean=0.292, stddev=0.17]
component name=tdnnf2.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.240741, continuous=true
component name=tdnnf2.noop type=NoOpComponent, dim=1024
component name=tdnnf3.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=4.35192e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.01648, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.75,0.75,0.75,0.75 0.75,0.75,0.75,0.75,0.75 0.75,0.75,0.75,0.75), mean=0.746, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.15,0.16,0.16 0.17,0.17,0.19,0.20,0.20 0.21,0.22,0.23,0.26), mean=0.186, stddev=0.0148], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=4.35192e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.04746, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.68,0.69,0.70 0.71,0.73,0.76,0.79,0.80 0.82,0.83,0.84,0.87), mean=0.759, stddev=0.0351], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.4,1.5 1.5,1.5,1.5,1.6,1.6 1.6,1.6,1.6,1.7), mean=1.52, stddev=0.0355], bias-{mean,stddev}=-0.005491,0.7312, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=2.97e+06, self-repaired-proportion=0.0858843, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-06,0.0002,0.01,0.03 0.05,0.10,0.32,0.72,1.0 1.2,1.4,1.6,2.6), mean=0.432, stddev=0.386], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-05,0.001,0.02,0.06 0.11,0.19,0.51,0.79,0.89 0.94,0.97,0.98,1.0), mean=0.499, stddev=0.287], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.003,0.003 0.003,0.004,0.005,0.009,0.01 0.02,0.03,0.07,0.09), mean=0.00805, stddev=0.00998], oderiv-count=4.52851e+06
component name=tdnnf3.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=46650.3, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-06,0.0002,0.009,0.03 0.05,0.10,0.32,0.71,1.0 1.2,1.4,1.6,2.6), mean=0.431, stddev=0.385], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.007,0.08,0.16 0.21,0.29,0.48,0.64,0.72 0.78,0.83,0.91,1.1), mean=0.474, stddev=0.196]
component name=tdnnf3.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.240741, continuous=true
component name=tdnnf3.noop type=NoOpComponent, dim=1024
component name=tdnnf4.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=4.35192e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.01646, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.74,0.74,0.74,0.74 0.74,0.74,0.74,0.74,0.74 0.74,0.74,0.74,0.74), mean=0.745, stddev=0.000244], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.15,0.16,0.16 0.17,0.18,0.18,0.20,0.20 0.21,0.22,0.22,0.28), mean=0.186, stddev=0.0138], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=4.35192e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.04735, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.66,0.68,0.69,0.70 0.71,0.73,0.76,0.79,0.80 0.81,0.83,0.84,0.88), mean=0.757, stddev=0.0349], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.4,1.5 1.5,1.5,1.5,1.5,1.6 1.6,1.6,1.6,1.6), mean=1.51, stddev=0.0338], bias-{mean,stddev}=0.01029,0.7978, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=1.03e+06, self-repaired-proportion=0.0651956, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-05,0.02,0.03,0.04 0.08,0.14,0.38,0.79,1.1 1.4,1.6,1.8,3.0), mean=0.499, stddev=0.426], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.03,0.03,0.07 0.12,0.22,0.50,0.79,0.88 0.93,0.96,0.97,1.0), mean=0.503, stddev=0.273], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.004,0.004 0.005,0.005,0.007,0.01,0.01 0.02,0.02,0.03,0.14), mean=0.00929, stddev=0.0111], oderiv-count=1.54394e+06
component name=tdnnf4.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=15550.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-05,0.02,0.03,0.04 0.08,0.14,0.39,0.79,1.1 1.4,1.6,1.8,3.0), mean=0.497, stddev=0.426], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.14,0.18,0.23 0.31,0.39,0.59,0.76,0.83 0.90,0.99,1.0,1.3), mean=0.579, stddev=0.207]
component name=tdnnf4.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.240741, continuous=true
component name=tdnnf4.noop type=NoOpComponent, dim=1024
component name=tdnnf5.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=4.35192e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=0, linear-params-rms=0.02288, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.73,0.73,0.73,0.73 0.73,0.73,0.73,0.73,0.73 0.73,0.73,0.73,0.73), mean=0.732, stddev=0.000244], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.20,0.21,0.22,0.23 0.24,0.24,0.26,0.27,0.28 0.29,0.30,0.30,0.32), mean=0.258, stddev=0.0181], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=4.35192e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0, linear-params-rms=0.06704, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.60,0.64,0.65,0.68 0.70,0.72,0.75,0.80,0.82 0.84,0.87,0.87,0.90), mean=0.757, stddev=0.0499], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2.0,2.1,2.1,2.1 2.1,2.1,2.1,2.2,2.2 2.2,2.2,2.2,2.3), mean=2.14, stddev=0.047], bias-{mean,stddev}=-0.0003562,0.7639, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=1.01e+06, self-repaired-proportion=0.0535941, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(8e-05,0.02,0.03,0.06 0.09,0.16,0.38,0.80,1.0 1.3,1.7,1.8,2.5), mean=0.498, stddev=0.411], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0003,0.03,0.04,0.09 0.14,0.23,0.48,0.76,0.85 0.92,0.96,0.98,1.0), mean=0.495, stddev=0.263], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.003,0.003,0.004 0.004,0.005,0.006,0.009,0.01 0.01,0.02,0.03,0.12), mean=0.008, stddev=0.00901], oderiv-count=1.55034e+06
component name=tdnnf5.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=15550.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(8e-05,0.01,0.03,0.06 0.09,0.15,0.38,0.80,1.0 1.3,1.6,1.8,2.5), mean=0.497, stddev=0.411], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.14,0.17,0.27 0.34,0.42,0.61,0.81,0.90 0.99,1.0,1.1,1.2), mean=0.615, stddev=0.22]
component name=tdnnf5.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.240741, continuous=true
component name=tdnnf5.noop type=NoOpComponent, dim=1024
component name=tdnnf6.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=4.35192e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01629, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.74,0.74,0.74,0.74 0.74,0.74,0.74,0.74,0.74 0.74,0.74,0.74,0.74), mean=0.737, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.15,0.16,0.16 0.17,0.17,0.18,0.19,0.20 0.21,0.21,0.22,0.24), mean=0.184, stddev=0.0132], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=4.35192e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.04743, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.67,0.69,0.70 0.71,0.73,0.76,0.79,0.80 0.81,0.83,0.84,0.86), mean=0.758, stddev=0.0343], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.5,1.5,1.5 1.5,1.5,1.5,1.5,1.6 1.6,1.6,1.6,1.6), mean=1.52, stddev=0.033], bias-{mean,stddev}=-0.02161,0.7242, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.96e+05, self-repaired-proportion=0.0224112, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.04,0.04,0.08 0.13,0.20,0.43,0.79,1.0 1.2,1.4,1.6,2.7), mean=0.509, stddev=0.376], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0008,0.04,0.06,0.11 0.17,0.26,0.48,0.72,0.82 0.87,0.91,0.94,0.99), mean=0.49, stddev=0.239], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.003,0.003,0.004 0.004,0.004,0.005,0.008,0.01 0.01,0.02,0.02,0.10), mean=0.00653, stddev=0.00529], oderiv-count=1.4265e+06
component name=tdnnf6.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=15038.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.04,0.04,0.08 0.12,0.20,0.42,0.79,1.0 1.2,1.4,1.6,2.7), mean=0.508, stddev=0.375], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.22,0.26,0.33 0.40,0.49,0.68,0.84,0.93 1.0,1.1,1.2,1.4), mean=0.672, stddev=0.209]
component name=tdnnf6.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.240741, continuous=true
component name=tdnnf6.noop type=NoOpComponent, dim=1024
component name=tdnnf7.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=4.35192e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01633, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.74,0.74,0.74,0.74 0.74,0.74,0.74,0.74,0.74 0.74,0.74,0.74,0.74), mean=0.739, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.15,0.15,0.16 0.17,0.17,0.18,0.19,0.20 0.21,0.21,0.22,0.23), mean=0.184, stddev=0.0135], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=4.35192e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.04753, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.68,0.69,0.70 0.71,0.73,0.76,0.79,0.80 0.82,0.83,0.84,0.88), mean=0.76, stddev=0.0349], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.5,1.5 1.5,1.5,1.5,1.5,1.6 1.6,1.6,1.6,1.7), mean=1.52, stddev=0.0343], bias-{mean,stddev}=0.01371,0.7719, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.7e+05, self-repaired-proportion=0.034202, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0009,0.03,0.05,0.08 0.12,0.19,0.42,0.83,1.1 1.3,1.7,1.9,2.7), mean=0.539, stddev=0.417], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.05,0.06,0.11 0.16,0.25,0.49,0.75,0.83 0.90,0.94,0.97,0.99), mean=0.501, stddev=0.249], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.003,0.003 0.004,0.004,0.005,0.008,0.01 0.01,0.02,0.02,0.09), mean=0.00626, stddev=0.00408], oderiv-count=1.36083e+06
component name=tdnnf7.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=14526.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0008,0.03,0.05,0.07 0.12,0.19,0.42,0.83,1.1 1.3,1.7,1.9,2.7), mean=0.537, stddev=0.416], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.19,0.24,0.32 0.39,0.48,0.67,0.86,0.95 1.0,1.1,1.1,1.3), mean=0.673, stddev=0.218]
component name=tdnnf7.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.240741, continuous=true
component name=tdnnf7.noop type=NoOpComponent, dim=1024
component name=tdnnf8.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=4.35192e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01632, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.74,0.74,0.74,0.74 0.74,0.74,0.74,0.74,0.74 0.74,0.74,0.74,0.74), mean=0.739, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.15,0.16,0.16 0.17,0.17,0.18,0.20,0.20 0.21,0.21,0.22,0.25), mean=0.184, stddev=0.0138], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=4.35192e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.04748, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.68,0.69,0.70 0.72,0.73,0.76,0.79,0.80 0.82,0.83,0.84,0.88), mean=0.759, stddev=0.0348], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.5,1.5 1.5,1.5,1.5,1.5,1.6 1.6,1.6,1.6,1.7), mean=1.52, stddev=0.035], bias-{mean,stddev}=-0.01963,0.785, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.01e+05, self-repaired-proportion=0.0385579, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-05,0.03,0.04,0.07 0.11,0.18,0.43,0.80,1.1 1.3,1.7,1.9,2.4), mean=0.527, stddev=0.408], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0003,0.03,0.06,0.09 0.15,0.25,0.49,0.74,0.84 0.89,0.95,0.96,0.99), mean=0.49, stddev=0.248], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.003,0.003 0.003,0.004,0.005,0.008,0.009 0.01,0.01,0.02,0.10), mean=0.00634, stddev=0.00724], oderiv-count=1.33331e+06
component name=tdnnf8.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=14014.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-05,0.03,0.04,0.07 0.11,0.18,0.43,0.80,1.1 1.3,1.7,1.9,2.4), mean=0.525, stddev=0.408], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.18,0.23,0.32 0.38,0.47,0.68,0.86,0.96 1.0,1.1,1.2,1.5), mean=0.675, stddev=0.229]
component name=tdnnf8.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.240741, continuous=true
component name=tdnnf8.noop type=NoOpComponent, dim=1024
component name=tdnnf9.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=4.35192e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01626, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.74,0.74,0.74,0.74 0.74,0.74,0.74,0.74,0.74 0.74,0.74,0.74,0.74), mean=0.736, stddev=-nan], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.14,0.15,0.16 0.17,0.17,0.18,0.19,0.20 0.20,0.21,0.22,0.24), mean=0.183, stddev=0.014], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=4.35192e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.04747, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.68,0.69,0.70 0.71,0.73,0.76,0.79,0.80 0.82,0.83,0.84,0.87), mean=0.759, stddev=0.0346], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.4,1.5 1.5,1.5,1.5,1.5,1.6 1.6,1.6,1.6,1.7), mean=1.52, stddev=0.0343], bias-{mean,stddev}=-0.008361,0.7674, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.58e+05, self-repaired-proportion=0.0244996, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(7e-05,0.03,0.05,0.08 0.11,0.19,0.45,0.82,1.1 1.3,1.6,1.8,2.6), mean=0.536, stddev=0.396], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0004,0.05,0.05,0.11 0.16,0.26,0.50,0.73,0.82 0.88,0.93,0.95,0.99), mean=0.495, stddev=0.242], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.003,0.003 0.003,0.003,0.005,0.007,0.009 0.01,0.01,0.02,0.11), mean=0.00574, stddev=0.00562], oderiv-count=1.31642e+06
component name=tdnnf9.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=13502.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(7e-05,0.03,0.05,0.08 0.11,0.19,0.45,0.82,1.1 1.3,1.6,1.8,2.6), mean=0.535, stddev=0.396], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.21,0.24,0.32 0.38,0.47,0.69,0.88,0.97 1.0,1.1,1.2,1.4), mean=0.682, stddev=0.227]
component name=tdnnf9.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.240741, continuous=true
component name=tdnnf9.noop type=NoOpComponent, dim=1024
component name=tdnnf10.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=4.35192e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01616, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.73,0.73,0.73,0.73 0.73,0.73,0.73,0.73,0.73 0.73,0.73,0.73,0.73), mean=0.732, stddev=0.000244], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.14,0.15,0.16 0.17,0.17,0.18,0.19,0.20 0.20,0.21,0.22,0.24), mean=0.182, stddev=0.0139], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=4.35192e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.04743, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.66,0.69,0.69,0.70 0.71,0.73,0.76,0.78,0.80 0.82,0.83,0.84,0.87), mean=0.758, stddev=0.0339], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.4,1.5 1.5,1.5,1.5,1.5,1.6 1.6,1.6,1.6,1.6), mean=1.52, stddev=0.0334], bias-{mean,stddev}=0.05195,0.771, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.62e+05, self-repaired-proportion=0.0282441, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(8e-05,0.03,0.05,0.09 0.12,0.21,0.46,0.89,1.1 1.3,1.7,1.9,2.4), mean=0.567, stddev=0.419], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0006,0.05,0.08,0.13 0.18,0.27,0.51,0.76,0.84 0.90,0.95,0.96,0.99), mean=0.513, stddev=0.245], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.003 0.003,0.003,0.004,0.006,0.008 0.01,0.01,0.02,0.10), mean=0.00525, stddev=0.00504], oderiv-count=1.26285e+06
component name=tdnnf10.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=12990.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(8e-05,0.03,0.05,0.09 0.12,0.21,0.46,0.89,1.1 1.3,1.7,1.9,2.4), mean=0.566, stddev=0.419], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.19,0.26,0.33 0.40,0.49,0.69,0.90,0.99 1.1,1.2,1.2,1.6), mean=0.694, stddev=0.234]
component name=tdnnf10.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.240741, continuous=true
component name=tdnnf10.noop type=NoOpComponent, dim=1024
component name=tdnnf11.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=4.35192e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01617, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.73,0.73,0.73,0.73 0.73,0.73,0.73,0.73,0.73 0.73,0.73,0.73,0.73), mean=0.732, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.15,0.15,0.16 0.17,0.17,0.18,0.19,0.20 0.20,0.21,0.22,0.24), mean=0.182, stddev=0.0136], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=4.35192e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.04735, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.68,0.69,0.70 0.71,0.73,0.76,0.79,0.80 0.81,0.83,0.84,0.88), mean=0.757, stddev=0.0355], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.4,1.5 1.5,1.5,1.5,1.5,1.6 1.6,1.6,1.6,1.6), mean=1.51, stddev=0.0326], bias-{mean,stddev}=-0.04044,0.7903, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.73e+05, self-repaired-proportion=0.0234033, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.04,0.06,0.08 0.12,0.18,0.43,0.84,1.1 1.3,1.6,1.7,2.4), mean=0.536, stddev=0.402], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0007,0.04,0.08,0.11 0.16,0.23,0.48,0.73,0.83 0.88,0.93,0.95,0.99), mean=0.486, stddev=0.245], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.003 0.003,0.003,0.004,0.006,0.008 0.009,0.01,0.01,0.09), mean=0.00526, stddev=0.00607], oderiv-count=1.19872e+06
component name=tdnnf11.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=12478.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.04,0.06,0.08 0.11,0.18,0.43,0.84,1.1 1.3,1.6,1.7,2.4), mean=0.534, stddev=0.402], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.22,0.26,0.31 0.37,0.48,0.68,0.88,0.98 1.1,1.1,1.2,1.5), mean=0.684, stddev=0.231]
component name=tdnnf11.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.240741, continuous=true
component name=tdnnf11.noop type=NoOpComponent, dim=1024
component name=tdnnf12.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=4.35192e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.0161, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.73,0.73,0.73,0.73 0.73,0.73,0.73,0.73,0.73 0.73,0.73,0.73,0.73), mean=0.729, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.15,0.15,0.16 0.17,0.17,0.18,0.19,0.20 0.20,0.21,0.22,0.24), mean=0.182, stddev=0.0138], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=4.35192e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.04724, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.68,0.69,0.70 0.71,0.73,0.76,0.78,0.80 0.81,0.82,0.84,0.86), mean=0.755, stddev=0.034], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.4,1.5 1.5,1.5,1.5,1.5,1.6 1.6,1.6,1.6,1.6), mean=1.51, stddev=0.0317], bias-{mean,stddev}=-0.02078,0.7684, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.09e+05, self-repaired-proportion=0.0175637, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(8e-05,0.05,0.06,0.08 0.13,0.20,0.44,0.85,1.1 1.4,1.6,1.8,2.5), mean=0.542, stddev=0.403], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0005,0.05,0.07,0.12 0.16,0.25,0.49,0.72,0.82 0.89,0.93,0.94,0.98), mean=0.489, stddev=0.237], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.003,0.003,0.004,0.006,0.007 0.008,0.01,0.01,0.08), mean=0.00474, stddev=0.00475], oderiv-count=1.13254e+06
component name=tdnnf12.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11966.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(7e-05,0.05,0.06,0.08 0.13,0.20,0.44,0.85,1.1 1.4,1.6,1.8,2.5), mean=0.54, stddev=0.403], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.25,0.28,0.33 0.40,0.49,0.68,0.88,0.97 1.1,1.2,1.2,1.4), mean=0.685, stddev=0.223]
component name=tdnnf12.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.240741, continuous=true
component name=tdnnf12.noop type=NoOpComponent, dim=1024
component name=tdnnf13.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=4.35192e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01596, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.72,0.72,0.72,0.72 0.72,0.72,0.72,0.72,0.72 0.72,0.72,0.72,0.72), mean=0.722, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.15,0.15,0.16 0.16,0.17,0.18,0.19,0.20 0.20,0.21,0.21,0.24), mean=0.18, stddev=0.0136], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=4.35192e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.04728, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.68,0.69,0.70 0.71,0.73,0.76,0.78,0.80 0.81,0.83,0.84,0.89), mean=0.756, stddev=0.0357], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.4,1.5 1.5,1.5,1.5,1.5,1.6 1.6,1.6,1.6,1.6), mean=1.51, stddev=0.0342], bias-{mean,stddev}=-0.009822,0.762, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.2e+05, self-repaired-proportion=0.0136755, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-05,0.04,0.06,0.10 0.14,0.22,0.46,0.88,1.1 1.3,1.6,1.8,2.2), mean=0.562, stddev=0.395], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.06,0.09,0.13 0.19,0.28,0.48,0.72,0.81 0.86,0.91,0.94,0.98), mean=0.492, stddev=0.228], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.003,0.003,0.004,0.005,0.006 0.007,0.009,0.01,0.07), mean=0.00424, stddev=0.00387], oderiv-count=1.14272e+06
component name=tdnnf13.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11454.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-05,0.04,0.06,0.10 0.14,0.22,0.46,0.88,1.1 1.3,1.6,1.8,2.2), mean=0.56, stddev=0.394], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.24,0.28,0.35 0.42,0.50,0.70,0.91,0.99 1.1,1.2,1.2,1.4), mean=0.707, stddev=0.228]
component name=tdnnf13.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.240741, continuous=true
component name=tdnnf13.noop type=NoOpComponent, dim=1024
component name=prefinal-l type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=4.35192e-06, l2-regularize=0.008, max-change=0.75, params-rms=0.02152, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.69,0.69,0.69,0.69 0.69,0.69,0.69,0.69,0.69 0.69,0.69,0.69,0.69), mean=0.689, stddev=0.000173], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.30,0.30,0.31 0.32,0.33,0.34,0.36,0.37 0.38,0.39,0.39,0.40), mean=0.344, stddev=0.0211], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=4.35192e-06, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.04709, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.67,0.68,0.70 0.71,0.72,0.75,0.78,0.80 0.81,0.82,0.83,0.85), mean=0.753, stddev=0.0339], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.4,1.5 1.5,1.5,1.5,1.5,1.5 1.6,1.6,1.6,1.6), mean=1.51, stddev=0.0316], bias-{mean,stddev}=-0.005725,0.7766, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=6.92e+05, self-repaired-proportion=0.0332371, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-05,6e-05,0.04,0.07 0.11,0.18,0.42,0.81,1.1 1.3,1.7,1.9,2.4), mean=0.523, stddev=0.413], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(9e-05,0.0005,0.06,0.11 0.16,0.25,0.48,0.74,0.83 0.90,0.95,0.97,0.99), mean=0.494, stddev=0.249], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.002,0.002,0.002 0.003,0.003,0.004,0.006,0.007 0.009,0.01,0.05,0.08), mean=0.00519, stddev=0.00656], oderiv-count=1.10362e+06
component name=prefinal-chain.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11454.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(6e-06,0.0001,0.04,0.07 0.11,0.18,0.41,0.81,1.1 1.3,1.7,1.9,2.4), mean=0.522, stddev=0.412], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0009,0.006,0.21,0.28 0.35,0.44,0.63,0.81,0.91 0.98,1.1,1.1,1.4), mean=0.629, stddev=0.22]
component name=prefinal-chain.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=4.35192e-06, l2-regularize=0.008, max-change=0.75, params-rms=0.02302, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.74,0.74,0.74,0.74 0.74,0.74,0.74,0.74,0.74 0.74,0.74,0.74,0.74), mean=0.737, stddev=0], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.26,0.31,0.31,0.32 0.33,0.35,0.37,0.39,0.40 0.41,0.42,0.42,0.47), mean=0.367, stddev=0.0259], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=11454.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-9e-08,-8e-08,-7e-08,-5e-08 -4e-08,-3e-08,-5e-09,2e-08,3e-08 5e-08,6e-08,7e-08,9e-08), mean=-4.13e-09, stddev=3.1e-08], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.67,0.68,0.70 0.71,0.73,0.77,0.82,0.84 0.87,0.89,0.92,1.0), mean=0.777, stddev=0.0549]
component name=output.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=2824, learning-rate=4.35192e-06, l2-regularize=0.002, max-change=1.5, linear-params-rms=0.01061, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0003,0.002,0.007,0.02 0.04,0.06,0.16,0.22,0.25 0.28,0.31,0.33,0.46), mean=0.149, stddev=0.081], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.43,0.46,0.47,0.49 0.51,0.53,0.56,0.60,0.61 0.63,0.64,0.65,0.69), mean=0.562, stddev=0.0427], bias-{mean,stddev}=2.204e-05,0.03298, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=4.35192e-06, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.04675, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.67,0.68,0.69 0.70,0.72,0.75,0.78,0.79 0.81,0.82,0.83,0.87), mean=0.747, stddev=0.0356], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.4,1.4 1.5,1.5,1.5,1.5,1.5 1.6,1.6,1.6,1.6), mean=1.5, stddev=0.0331], bias-{mean,stddev}=0.0001147,0.7544, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.69e+05, self-repaired-proportion=0.0277907, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-06,0.04,0.05,0.09 0.13,0.21,0.42,0.80,1.1 1.3,1.6,1.8,2.7), mean=0.529, stddev=0.39], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-05,0.05,0.07,0.12 0.18,0.27,0.48,0.72,0.83 0.90,0.94,0.96,0.99), mean=0.491, stddev=0.239], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0006,0.0008,0.0008,0.0009 0.001,0.001,0.001,0.002,0.002 0.003,0.003,0.004,0.03), mean=0.00171, stddev=0.00204], oderiv-count=1.16205e+06
component name=prefinal-xent.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11454.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-07,0.04,0.05,0.09 0.13,0.20,0.42,0.80,1.1 1.3,1.6,1.8,2.7), mean=0.527, stddev=0.389], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.22,0.27,0.34 0.42,0.48,0.66,0.84,0.92 0.99,1.0,1.1,1.3), mean=0.659, stddev=0.201]
component name=prefinal-xent.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=4.35192e-06, l2-regularize=0.008, max-change=0.75, params-rms=0.02149, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.69,0.69,0.69,0.69 0.69,0.69,0.69,0.69,0.69 0.69,0.69,0.69,0.69), mean=0.688, stddev=0], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.25,0.28,0.29,0.30 0.31,0.32,0.34,0.37,0.38 0.39,0.39,0.40,0.41), mean=0.343, stddev=0.0265], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=11454.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-8e-08,-7e-08,-6e-08,-4e-08 -3e-08,-2e-08,2e-09,3e-08,4e-08 5e-08,7e-08,8e-08,8e-08), mean=1.6e-09, stddev=3.03e-08], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.61,0.61,0.62,0.65 0.67,0.69,0.75,0.80,0.83 0.84,0.86,0.87,1.0), mean=0.749, stddev=0.0615]
component name=output-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=2824, learning-rate=2.17596e-05, l2-regularize=0.002, learning-rate-factor=5, max-change=1.5, linear-params-rms=0.02556, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.02,0.02,0.02 0.03,0.04,0.21,0.60,0.71 0.79,0.86,0.90,1.2), mean=0.307, stddev=0.27], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.84,0.87,0.89,0.94 1.0,1.2,1.4,1.5,1.6 1.6,1.7,1.7,1.7), mean=1.34, stddev=0.206], bias-{mean,stddev}=1.043e-08,0.07329, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-xent.log-softmax type=LogSoftmaxComponent, dim=2824, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,1e-07,3e-05,8e-05 0.0002,0.0002,0.0006,0.001,0.002 0.003,0.004,0.004,0.04), mean=0.000934, stddev=0.00118], oderiv-count=1.16653e+06
nnet3-show-progress --use-gpu=no telugu_exp/chain_cleaned_1d/tdnn1d_sp/41.mdl telugu_exp/chain_cleaned_1d/tdnn1d_sp/42.mdl 
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:SelectGpuId():cu-device.cc:168) Manually selected to compute on CPU.
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:0.094611 tdnnf2.linear:0.0944866 tdnnf2.affine:0.0907499 tdnnf3.linear:0.072572 tdnnf3.affine:0.0853932 tdnnf4.linear:0.0598225 tdnnf4.affine:0.0861324 tdnnf5.linear:0.0420357 tdnnf5.affine:0.0823985 tdnnf6.linear:0.0551785 tdnnf6.affine:0.0814612 tdnnf7.linear:0.0562464 tdnnf7.affine:0.084003 tdnnf8.linear:0.0552351 tdnnf8.affine:0.0845303 tdnnf9.linear:0.0541247 tdnnf9.affine:0.0834865 tdnnf10.linear:0.0534613 tdnnf10.affine:0.0836051 tdnnf11.linear:0.0515205 tdnnf11.affine:0.084404 tdnnf12.linear:0.0509074 tdnnf12.affine:0.0830386 tdnnf13.linear:0.0503478 tdnnf13.affine:0.0828002 prefinal-l:0.0514546 prefinal-chain.affine:0.0836848 prefinal-chain.linear:0.0387585 output.affine:0.0617516 prefinal-xent.affine:0.0819301 prefinal-xent.linear:0.0355555 output-xent.affine:0.111899 ]
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:34.032 tdnnf2.linear:8.47971 tdnnf2.affine:33.7834 tdnnf3.linear:8.43714 tdnnf3.affine:33.7336 tdnnf4.linear:8.42541 tdnnf4.affine:35.2082 tdnnf5.linear:8.28281 tdnnf5.affine:34.4476 tdnnf6.linear:8.33834 tdnnf6.affine:33.5751 tdnnf7.linear:8.36158 tdnnf7.affine:34.6758 tdnnf8.linear:8.35598 tdnnf8.affine:34.9639 tdnnf9.linear:8.32433 tdnnf9.affine:34.5511 tdnnf10.linear:8.27611 tdnnf10.affine:34.6569 tdnnf11.linear:8.27777 tdnnf11.affine:35.0562 tdnnf12.linear:8.24461 tdnnf12.affine:34.4954 tdnnf13.linear:8.17038 tdnnf13.affine:34.3602 prefinal-l:11.0195 prefinal-chain.affine:34.6258 prefinal-chain.linear:11.7877 output.affine:9.18954 prefinal-xent.affine:33.9972 prefinal-xent.linear:11.004 output-xent.affine:22.0769 ]
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.00277351 tdnnf2.linear:0.011122 tdnnf2.affine:0.00267968 tdnnf3.linear:0.00858388 tdnnf3.affine:0.00252536 tdnnf4.linear:0.00708493 tdnnf4.affine:0.00244063 tdnnf5.linear:0.00506362 tdnnf5.affine:0.00238639 tdnnf6.linear:0.0066031 tdnnf6.affine:0.00242058 tdnnf7.linear:0.0067126 tdnnf7.affine:0.00241687 tdnnf8.linear:0.00659636 tdnnf8.affine:0.002412 tdnnf9.linear:0.00648833 tdnnf9.affine:0.00241069 tdnnf10.linear:0.0064463 tdnnf10.affine:0.00240674 tdnnf11.linear:0.00621103 tdnnf11.affine:0.00240206 tdnnf12.linear:0.00616178 tdnnf12.affine:0.00240162 tdnnf13.linear:0.00614918 tdnnf13.affine:0.00240414 prefinal-l:0.00465846 prefinal-chain.affine:0.00241116 prefinal-chain.linear:0.00328042 output.affine:0.00673327 prefinal-xent.affine:0.00240421 prefinal-xent.linear:0.00322354 output-xent.affine:0.00507642 ]
# Accounting: time=1 threads=1
# Ended (code 0) at Mon Jul 18 20:46:14 EDT 2022, elapsed time 1 seconds
