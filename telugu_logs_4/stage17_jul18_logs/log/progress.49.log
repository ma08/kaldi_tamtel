# nnet3-am-info telugu_exp/chain_cleaned_1d/tdnn1d_sp/49.mdl && nnet3-show-progress --use-gpu=no telugu_exp/chain_cleaned_1d/tdnn1d_sp/48.mdl telugu_exp/chain_cleaned_1d/tdnn1d_sp/49.mdl 
# Started at Mon Jul 18 21:06:54 EDT 2022
#
nnet3-am-info telugu_exp/chain_cleaned_1d/tdnn1d_sp/49.mdl 
input-dim: 40
ivector-dim: 100
num-pdfs: 2824
prior-dimension: 0
# Nnet info follows.
left-context: 28
right-context: 28
num-parameters: 9032208
modulus: 1
input-node name=ivector dim=100
input-node name=input dim=40
component-node name=lda component=lda input=Append(Offset(input, -1), input, Offset(input, 1), ReplaceIndex(ivector, t, 0)) input-dim=220 output-dim=220
component-node name=tdnn1.affine component=tdnn1.affine input=lda input-dim=220 output-dim=1024
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=1024 output-dim=1024
component-node name=tdnn1.batchnorm component=tdnn1.batchnorm input=tdnn1.relu input-dim=1024 output-dim=1024
component-node name=tdnn1.dropout component=tdnn1.dropout input=tdnn1.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.linear component=tdnnf2.linear input=tdnn1.dropout input-dim=1024 output-dim=128
component-node name=tdnnf2.affine component=tdnnf2.affine input=tdnnf2.linear input-dim=128 output-dim=1024
component-node name=tdnnf2.relu component=tdnnf2.relu input=tdnnf2.affine input-dim=1024 output-dim=1024
component-node name=tdnnf2.batchnorm component=tdnnf2.batchnorm input=tdnnf2.relu input-dim=1024 output-dim=1024
component-node name=tdnnf2.dropout component=tdnnf2.dropout input=tdnnf2.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.noop component=tdnnf2.noop input=Sum(Scale(0.66, tdnn1.dropout), tdnnf2.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf3.linear component=tdnnf3.linear input=tdnnf2.noop input-dim=1024 output-dim=128
component-node name=tdnnf3.affine component=tdnnf3.affine input=tdnnf3.linear input-dim=128 output-dim=1024
component-node name=tdnnf3.relu component=tdnnf3.relu input=tdnnf3.affine input-dim=1024 output-dim=1024
component-node name=tdnnf3.batchnorm component=tdnnf3.batchnorm input=tdnnf3.relu input-dim=1024 output-dim=1024
component-node name=tdnnf3.dropout component=tdnnf3.dropout input=tdnnf3.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf3.noop component=tdnnf3.noop input=Sum(Scale(0.66, tdnnf2.noop), tdnnf3.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf4.linear component=tdnnf4.linear input=tdnnf3.noop input-dim=1024 output-dim=128
component-node name=tdnnf4.affine component=tdnnf4.affine input=tdnnf4.linear input-dim=128 output-dim=1024
component-node name=tdnnf4.relu component=tdnnf4.relu input=tdnnf4.affine input-dim=1024 output-dim=1024
component-node name=tdnnf4.batchnorm component=tdnnf4.batchnorm input=tdnnf4.relu input-dim=1024 output-dim=1024
component-node name=tdnnf4.dropout component=tdnnf4.dropout input=tdnnf4.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf4.noop component=tdnnf4.noop input=Sum(Scale(0.66, tdnnf3.noop), tdnnf4.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf5.linear component=tdnnf5.linear input=tdnnf4.noop input-dim=1024 output-dim=128
component-node name=tdnnf5.affine component=tdnnf5.affine input=tdnnf5.linear input-dim=128 output-dim=1024
component-node name=tdnnf5.relu component=tdnnf5.relu input=tdnnf5.affine input-dim=1024 output-dim=1024
component-node name=tdnnf5.batchnorm component=tdnnf5.batchnorm input=tdnnf5.relu input-dim=1024 output-dim=1024
component-node name=tdnnf5.dropout component=tdnnf5.dropout input=tdnnf5.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf5.noop component=tdnnf5.noop input=Sum(Scale(0.66, tdnnf4.noop), tdnnf5.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf6.linear component=tdnnf6.linear input=tdnnf5.noop input-dim=1024 output-dim=128
component-node name=tdnnf6.affine component=tdnnf6.affine input=tdnnf6.linear input-dim=128 output-dim=1024
component-node name=tdnnf6.relu component=tdnnf6.relu input=tdnnf6.affine input-dim=1024 output-dim=1024
component-node name=tdnnf6.batchnorm component=tdnnf6.batchnorm input=tdnnf6.relu input-dim=1024 output-dim=1024
component-node name=tdnnf6.dropout component=tdnnf6.dropout input=tdnnf6.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf6.noop component=tdnnf6.noop input=Sum(Scale(0.66, tdnnf5.noop), tdnnf6.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf7.linear component=tdnnf7.linear input=tdnnf6.noop input-dim=1024 output-dim=128
component-node name=tdnnf7.affine component=tdnnf7.affine input=tdnnf7.linear input-dim=128 output-dim=1024
component-node name=tdnnf7.relu component=tdnnf7.relu input=tdnnf7.affine input-dim=1024 output-dim=1024
component-node name=tdnnf7.batchnorm component=tdnnf7.batchnorm input=tdnnf7.relu input-dim=1024 output-dim=1024
component-node name=tdnnf7.dropout component=tdnnf7.dropout input=tdnnf7.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf7.noop component=tdnnf7.noop input=Sum(Scale(0.66, tdnnf6.noop), tdnnf7.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf8.linear component=tdnnf8.linear input=tdnnf7.noop input-dim=1024 output-dim=128
component-node name=tdnnf8.affine component=tdnnf8.affine input=tdnnf8.linear input-dim=128 output-dim=1024
component-node name=tdnnf8.relu component=tdnnf8.relu input=tdnnf8.affine input-dim=1024 output-dim=1024
component-node name=tdnnf8.batchnorm component=tdnnf8.batchnorm input=tdnnf8.relu input-dim=1024 output-dim=1024
component-node name=tdnnf8.dropout component=tdnnf8.dropout input=tdnnf8.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf8.noop component=tdnnf8.noop input=Sum(Scale(0.66, tdnnf7.noop), tdnnf8.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf9.linear component=tdnnf9.linear input=tdnnf8.noop input-dim=1024 output-dim=128
component-node name=tdnnf9.affine component=tdnnf9.affine input=tdnnf9.linear input-dim=128 output-dim=1024
component-node name=tdnnf9.relu component=tdnnf9.relu input=tdnnf9.affine input-dim=1024 output-dim=1024
component-node name=tdnnf9.batchnorm component=tdnnf9.batchnorm input=tdnnf9.relu input-dim=1024 output-dim=1024
component-node name=tdnnf9.dropout component=tdnnf9.dropout input=tdnnf9.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf9.noop component=tdnnf9.noop input=Sum(Scale(0.66, tdnnf8.noop), tdnnf9.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf10.linear component=tdnnf10.linear input=tdnnf9.noop input-dim=1024 output-dim=128
component-node name=tdnnf10.affine component=tdnnf10.affine input=tdnnf10.linear input-dim=128 output-dim=1024
component-node name=tdnnf10.relu component=tdnnf10.relu input=tdnnf10.affine input-dim=1024 output-dim=1024
component-node name=tdnnf10.batchnorm component=tdnnf10.batchnorm input=tdnnf10.relu input-dim=1024 output-dim=1024
component-node name=tdnnf10.dropout component=tdnnf10.dropout input=tdnnf10.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf10.noop component=tdnnf10.noop input=Sum(Scale(0.66, tdnnf9.noop), tdnnf10.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf11.linear component=tdnnf11.linear input=tdnnf10.noop input-dim=1024 output-dim=128
component-node name=tdnnf11.affine component=tdnnf11.affine input=tdnnf11.linear input-dim=128 output-dim=1024
component-node name=tdnnf11.relu component=tdnnf11.relu input=tdnnf11.affine input-dim=1024 output-dim=1024
component-node name=tdnnf11.batchnorm component=tdnnf11.batchnorm input=tdnnf11.relu input-dim=1024 output-dim=1024
component-node name=tdnnf11.dropout component=tdnnf11.dropout input=tdnnf11.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf11.noop component=tdnnf11.noop input=Sum(Scale(0.66, tdnnf10.noop), tdnnf11.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf12.linear component=tdnnf12.linear input=tdnnf11.noop input-dim=1024 output-dim=128
component-node name=tdnnf12.affine component=tdnnf12.affine input=tdnnf12.linear input-dim=128 output-dim=1024
component-node name=tdnnf12.relu component=tdnnf12.relu input=tdnnf12.affine input-dim=1024 output-dim=1024
component-node name=tdnnf12.batchnorm component=tdnnf12.batchnorm input=tdnnf12.relu input-dim=1024 output-dim=1024
component-node name=tdnnf12.dropout component=tdnnf12.dropout input=tdnnf12.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf12.noop component=tdnnf12.noop input=Sum(Scale(0.66, tdnnf11.noop), tdnnf12.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf13.linear component=tdnnf13.linear input=tdnnf12.noop input-dim=1024 output-dim=128
component-node name=tdnnf13.affine component=tdnnf13.affine input=tdnnf13.linear input-dim=128 output-dim=1024
component-node name=tdnnf13.relu component=tdnnf13.relu input=tdnnf13.affine input-dim=1024 output-dim=1024
component-node name=tdnnf13.batchnorm component=tdnnf13.batchnorm input=tdnnf13.relu input-dim=1024 output-dim=1024
component-node name=tdnnf13.dropout component=tdnnf13.dropout input=tdnnf13.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf13.noop component=tdnnf13.noop input=Sum(Scale(0.66, tdnnf12.noop), tdnnf13.dropout) input-dim=1024 output-dim=1024
component-node name=prefinal-l component=prefinal-l input=tdnnf13.noop input-dim=1024 output-dim=256
component-node name=prefinal-chain.affine component=prefinal-chain.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-chain.relu component=prefinal-chain.relu input=prefinal-chain.affine input-dim=1024 output-dim=1024
component-node name=prefinal-chain.batchnorm1 component=prefinal-chain.batchnorm1 input=prefinal-chain.relu input-dim=1024 output-dim=1024
component-node name=prefinal-chain.linear component=prefinal-chain.linear input=prefinal-chain.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-chain.batchnorm2 component=prefinal-chain.batchnorm2 input=prefinal-chain.linear input-dim=256 output-dim=256
component-node name=output.affine component=output.affine input=prefinal-chain.batchnorm2 input-dim=256 output-dim=2824
output-node name=output input=output.affine dim=2824 objective=linear
component-node name=prefinal-xent.affine component=prefinal-xent.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-xent.relu component=prefinal-xent.relu input=prefinal-xent.affine input-dim=1024 output-dim=1024
component-node name=prefinal-xent.batchnorm1 component=prefinal-xent.batchnorm1 input=prefinal-xent.relu input-dim=1024 output-dim=1024
component-node name=prefinal-xent.linear component=prefinal-xent.linear input=prefinal-xent.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-xent.batchnorm2 component=prefinal-xent.batchnorm2 input=prefinal-xent.linear input-dim=256 output-dim=256
component-node name=output-xent.affine component=output-xent.affine input=prefinal-xent.batchnorm2 input-dim=256 output-dim=2824
component-node name=output-xent.log-softmax component=output-xent.log-softmax input=output-xent.affine input-dim=2824 output-dim=2824
output-node name=output-xent input=output-xent.log-softmax dim=2824 objective=linear
component name=lda type=FixedAffineComponent, input-dim=220, output-dim=220, linear-params-rms=0.005757, bias-{mean,stddev}=-0.001083,0.01285
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=220, output-dim=1024, learning-rate=3.22887e-06, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.0503, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.57,0.66,0.67,0.68 0.70,0.71,0.75,0.78,0.79 0.81,0.82,0.84,0.87), mean=0.745, stddev=0.0377], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.5,1.5,1.5 1.6,1.6,1.6,1.6,1.7 1.7,1.7,1.7,1.8), mean=1.61, stddev=0.0432], bias-{mean,stddev}=-0.0152,0.7369, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=3.2e+06, self-repaired-proportion=0.846357, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.03,0.62,0.95 1.2,1.5,1.7,2.6), mean=0.292, stddev=0.43], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.43,1.0,1.0 1.0,1.0,1.0,1.0), mean=0.489, stddev=0.47], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.03,0.03,0.04 0.05,0.06,0.12,0.17,0.18 0.18,0.19,0.20,0.24), mean=0.115, stddev=0.0529], oderiv-count=4.7625e+06
component name=tdnn1.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=46705, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.03,0.62,0.95 1.2,1.5,1.7,2.6), mean=0.292, stddev=0.429], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.05,0.08,0.10 0.12,0.14,0.15,0.22), mean=0.0443, stddev=0.0447]
component name=tdnn1.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.111111, continuous=true
component name=tdnnf2.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=3.22887e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.01638, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.74,0.74,0.74,0.74 0.74,0.74,0.74,0.74,0.74 0.74,0.74,0.74,0.74), mean=0.741, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.15,0.15,0.16 0.17,0.17,0.18,0.20,0.20 0.21,0.22,0.22,0.26), mean=0.185, stddev=0.0151], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=3.22887e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.04689, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.67,0.68,0.69 0.70,0.72,0.75,0.78,0.80 0.81,0.82,0.83,0.86), mean=0.749, stddev=0.0347], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.4,1.4 1.5,1.5,1.5,1.5,1.5 1.6,1.6,1.6,1.6), mean=1.5, stddev=0.0321], bias-{mean,stddev}=0.003593,0.721, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=3.17e+06, self-repaired-proportion=0.285124, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-07,5e-06,2e-05,6e-05 0.005,0.03,0.21,0.64,0.90 1.2,1.5,1.8,2.9), mean=0.354, stddev=0.405], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-06,7e-05,0.0002,0.0005 0.02,0.09,0.50,0.90,0.97 0.99,1.0,1.0,1.0), mean=0.5, stddev=0.353], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.005,0.005 0.006,0.007,0.01,0.03,0.06 0.09,0.10,0.10,0.11), mean=0.0218, stddev=0.0252], oderiv-count=4.62176e+06
component name=tdnnf2.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=46193, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-07,4e-06,2e-05,6e-05 0.005,0.03,0.21,0.64,0.90 1.2,1.5,1.8,2.9), mean=0.353, stddev=0.405], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0003,0.0008,0.002,0.003 0.04,0.12,0.29,0.42,0.48 0.54,0.60,0.64,0.88), mean=0.279, stddev=0.165]
component name=tdnnf2.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.111111, continuous=true
component name=tdnnf2.noop type=NoOpComponent, dim=1024
component name=tdnnf3.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=3.22887e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.01628, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.74,0.74,0.74,0.74 0.74,0.74,0.74,0.74,0.74 0.74,0.74,0.74,0.74), mean=0.737, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.15,0.15,0.16 0.17,0.17,0.18,0.19,0.20 0.21,0.22,0.23,0.26), mean=0.184, stddev=0.0147], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=3.22887e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.04681, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.67,0.68,0.69 0.70,0.72,0.75,0.78,0.79 0.81,0.82,0.83,0.86), mean=0.748, stddev=0.0346], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.4,1.4 1.5,1.5,1.5,1.5,1.5 1.6,1.6,1.6,1.6), mean=1.5, stddev=0.035], bias-{mean,stddev}=-0.005464,0.7205, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=2.96e+06, self-repaired-proportion=0.0949257, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(6e-07,6e-05,0.007,0.03 0.05,0.09,0.31,0.70,1.0 1.2,1.4,1.5,2.6), mean=0.418, stddev=0.381], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(5e-06,0.0006,0.02,0.06 0.10,0.18,0.51,0.80,0.90 0.95,0.98,0.99,1.0), mean=0.499, stddev=0.292], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.003,0.003 0.003,0.004,0.005,0.01,0.01 0.02,0.03,0.07,0.08), mean=0.00805, stddev=0.0097], oderiv-count=4.5575e+06
component name=tdnnf3.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=45681, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-06,8e-05,0.009,0.03 0.05,0.09,0.31,0.70,1.0 1.2,1.4,1.5,2.6), mean=0.416, stddev=0.38], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0007,0.005,0.08,0.15 0.19,0.27,0.46,0.61,0.69 0.74,0.80,0.86,1.1), mean=0.448, stddev=0.191]
component name=tdnnf3.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.111111, continuous=true
component name=tdnnf3.noop type=NoOpComponent, dim=1024
component name=tdnnf4.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=3.22887e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.01625, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.74,0.74,0.74,0.74 0.74,0.74,0.74,0.74,0.74 0.74,0.74,0.74,0.74), mean=0.735, stddev=0.000244], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.15,0.16,0.16 0.17,0.17,0.18,0.19,0.20 0.20,0.21,0.22,0.28), mean=0.183, stddev=0.0137], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=3.22887e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.0467, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.67,0.68,0.69 0.70,0.72,0.75,0.78,0.79 0.80,0.82,0.83,0.87), mean=0.746, stddev=0.0345], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.4,1.4 1.5,1.5,1.5,1.5,1.5 1.5,1.6,1.6,1.6), mean=1.49, stddev=0.0333], bias-{mean,stddev}=0.01013,0.7866, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=1.05e+06, self-repaired-proportion=0.0703278, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(8e-06,0.02,0.02,0.04 0.07,0.13,0.37,0.77,1.1 1.4,1.6,1.8,2.9), mean=0.483, stddev=0.421], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-05,0.03,0.03,0.06 0.12,0.21,0.50,0.80,0.89 0.93,0.96,0.98,1.0), mean=0.503, stddev=0.277], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.004,0.004 0.005,0.005,0.007,0.01,0.01 0.02,0.02,0.03,0.13), mean=0.00917, stddev=0.0106], oderiv-count=1.51488e+06
component name=tdnnf4.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=15227, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-05,0.02,0.02,0.04 0.07,0.13,0.37,0.77,1.1 1.4,1.6,1.8,2.9), mean=0.481, stddev=0.421], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.14,0.17,0.21 0.29,0.36,0.56,0.73,0.80 0.86,0.95,1.0,1.2), mean=0.551, stddev=0.202]
component name=tdnnf4.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.111111, continuous=true
component name=tdnnf4.noop type=NoOpComponent, dim=1024
component name=tdnnf5.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=3.22887e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=0, linear-params-rms=0.02258, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.72,0.72,0.72,0.72 0.72,0.72,0.72,0.72,0.72 0.72,0.72,0.72,0.72), mean=0.723, stddev=-nan], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.19,0.21,0.22,0.23 0.23,0.24,0.25,0.27,0.28 0.28,0.29,0.30,0.32), mean=0.255, stddev=0.0178], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=3.22887e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0, linear-params-rms=0.06612, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.59,0.63,0.64,0.67 0.69,0.71,0.74,0.79,0.81 0.83,0.85,0.86,0.89), mean=0.746, stddev=0.0492], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2.0,2.0,2.0,2.0 2.0,2.1,2.1,2.1,2.2 2.2,2.2,2.2,2.2), mean=2.12, stddev=0.0463], bias-{mean,stddev}=-0.0003718,0.7532, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.53e+05, self-repaired-proportion=0.0613985, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-05,0.01,0.03,0.06 0.09,0.15,0.36,0.78,1.0 1.3,1.6,1.8,2.5), mean=0.483, stddev=0.406], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.02,0.04,0.09 0.13,0.22,0.48,0.77,0.86 0.92,0.97,0.99,1.0), mean=0.495, stddev=0.267], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.003,0.003,0.004 0.004,0.005,0.006,0.009,0.01 0.01,0.02,0.03,0.11), mean=0.00793, stddev=0.00887], oderiv-count=1.39238e+06
component name=tdnnf5.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=15227, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-05,0.01,0.03,0.06 0.09,0.15,0.36,0.78,1.0 1.3,1.6,1.8,2.5), mean=0.482, stddev=0.406], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.13,0.17,0.25 0.32,0.40,0.59,0.78,0.87 0.95,1.0,1.0,1.2), mean=0.589, stddev=0.214]
component name=tdnnf5.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.111111, continuous=true
component name=tdnnf5.noop type=NoOpComponent, dim=1024
component name=tdnnf6.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=3.22887e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01608, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.73,0.73,0.73,0.73 0.73,0.73,0.73,0.73,0.73 0.73,0.73,0.73,0.73), mean=0.728, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.15,0.15,0.16 0.17,0.17,0.18,0.19,0.20 0.20,0.21,0.21,0.24), mean=0.181, stddev=0.0131], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=3.22887e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.04679, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.66,0.68,0.69 0.70,0.72,0.75,0.78,0.79 0.80,0.82,0.83,0.85), mean=0.748, stddev=0.034], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.4,1.4 1.5,1.5,1.5,1.5,1.5 1.6,1.6,1.6,1.6), mean=1.5, stddev=0.0327], bias-{mean,stddev}=-0.02135,0.7141, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=1.01e+06, self-repaired-proportion=0.0234844, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(6e-05,0.03,0.04,0.07 0.12,0.18,0.41,0.78,1.0 1.2,1.4,1.5,2.7), mean=0.494, stddev=0.371], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0004,0.04,0.06,0.10 0.16,0.25,0.48,0.73,0.83 0.88,0.92,0.95,1.0), mean=0.49, stddev=0.243], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.003,0.003 0.004,0.004,0.005,0.008,0.01 0.01,0.02,0.02,0.09), mean=0.0065, stddev=0.00529], oderiv-count=1.40826e+06
component name=tdnnf6.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=14715, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(7e-05,0.03,0.04,0.07 0.12,0.18,0.41,0.77,1.0 1.2,1.4,1.5,2.7), mean=0.491, stddev=0.37], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.20,0.24,0.31 0.38,0.46,0.65,0.81,0.90 0.98,1.1,1.1,1.3), mean=0.643, stddev=0.205]
component name=tdnnf6.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.111111, continuous=true
component name=tdnnf6.noop type=NoOpComponent, dim=1024
component name=tdnnf7.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=3.22887e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01613, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.73,0.73,0.73,0.73 0.73,0.73,0.73,0.73,0.73 0.73,0.73,0.73,0.73), mean=0.73, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.15,0.15,0.16 0.17,0.17,0.18,0.19,0.20 0.20,0.21,0.21,0.23), mean=0.182, stddev=0.0134], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=3.22887e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.04688, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.67,0.68,0.69 0.70,0.72,0.75,0.78,0.79 0.81,0.82,0.83,0.87), mean=0.749, stddev=0.0344], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.4,1.4 1.5,1.5,1.5,1.5,1.5 1.6,1.6,1.6,1.6), mean=1.5, stddev=0.0338], bias-{mean,stddev}=0.01347,0.7611, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.4e+05, self-repaired-proportion=0.0362413, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0006,0.03,0.05,0.07 0.11,0.18,0.41,0.81,1.1 1.3,1.6,1.8,2.6), mean=0.523, stddev=0.411], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.04,0.06,0.11 0.15,0.25,0.49,0.75,0.84 0.91,0.95,0.97,0.99), mean=0.501, stddev=0.253], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.003,0.003 0.003,0.004,0.005,0.008,0.01 0.01,0.02,0.02,0.09), mean=0.00628, stddev=0.00426], oderiv-count=1.44506e+06
component name=tdnnf7.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=14203, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0006,0.02,0.05,0.07 0.11,0.17,0.40,0.81,1.1 1.3,1.6,1.8,2.6), mean=0.521, stddev=0.411], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.17,0.21,0.30 0.37,0.45,0.65,0.83,0.92 1.0,1.1,1.1,1.3), mean=0.644, stddev=0.214]
component name=tdnnf7.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.111111, continuous=true
component name=tdnnf7.noop type=NoOpComponent, dim=1024
component name=tdnnf8.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=3.22887e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01612, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.73,0.73,0.73,0.73 0.73,0.73,0.73,0.73,0.73 0.73,0.73,0.73,0.73), mean=0.73, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.15,0.15,0.16 0.17,0.17,0.18,0.19,0.20 0.20,0.21,0.22,0.24), mean=0.182, stddev=0.0137], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=3.22887e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.04683, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.67,0.68,0.69 0.71,0.72,0.75,0.78,0.79 0.81,0.82,0.83,0.87), mean=0.749, stddev=0.0343], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.4,1.4 1.5,1.5,1.5,1.5,1.5 1.6,1.6,1.6,1.6), mean=1.5, stddev=0.0346], bias-{mean,stddev}=-0.01941,0.7741, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.57e+05, self-repaired-proportion=0.0420479, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-05,0.02,0.04,0.06 0.10,0.17,0.41,0.78,1.1 1.3,1.7,1.8,2.4), mean=0.51, stddev=0.403], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.03,0.05,0.09 0.15,0.25,0.49,0.74,0.84 0.89,0.95,0.97,0.99), mean=0.49, stddev=0.252], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.003,0.003 0.003,0.004,0.005,0.008,0.009 0.01,0.02,0.02,0.10), mean=0.00638, stddev=0.00715], oderiv-count=1.32442e+06
component name=tdnnf8.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=13691, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-05,0.02,0.04,0.06 0.10,0.17,0.41,0.78,1.1 1.3,1.7,1.8,2.4), mean=0.508, stddev=0.403], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.17,0.22,0.29 0.35,0.45,0.65,0.83,0.94 1.0,1.1,1.2,1.5), mean=0.646, stddev=0.225]
component name=tdnnf8.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.111111, continuous=true
component name=tdnnf8.noop type=NoOpComponent, dim=1024
component name=tdnnf9.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=3.22887e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01606, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.73,0.73,0.73,0.73 0.73,0.73,0.73,0.73,0.73 0.73,0.73,0.73,0.73), mean=0.727, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.14,0.15,0.16 0.17,0.17,0.18,0.19,0.20 0.20,0.21,0.22,0.24), mean=0.181, stddev=0.0138], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=3.22887e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.04682, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.61,0.67,0.68,0.69 0.70,0.72,0.75,0.78,0.79 0.80,0.82,0.83,0.85), mean=0.748, stddev=0.0341], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.4,1.4 1.5,1.5,1.5,1.5,1.5 1.6,1.6,1.6,1.6), mean=1.5, stddev=0.0338], bias-{mean,stddev}=-0.008287,0.7567, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.45e+05, self-repaired-proportion=0.0323331, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-05,0.03,0.04,0.07 0.11,0.18,0.43,0.80,1.1 1.3,1.6,1.7,2.6), mean=0.519, stddev=0.391], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.04,0.05,0.10 0.15,0.26,0.50,0.73,0.83 0.89,0.94,0.95,0.99), mean=0.495, stddev=0.246], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.003,0.003 0.003,0.003,0.005,0.007,0.009 0.01,0.01,0.02,0.11), mean=0.00581, stddev=0.00562], oderiv-count=1.29824e+06
component name=tdnnf9.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=13179, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-05,0.03,0.04,0.07 0.11,0.18,0.43,0.80,1.1 1.3,1.6,1.7,2.6), mean=0.517, stddev=0.391], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.18,0.24,0.29 0.36,0.45,0.66,0.84,0.94 1.0,1.1,1.1,1.4), mean=0.652, stddev=0.222]
component name=tdnnf9.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.111111, continuous=true
component name=tdnnf9.noop type=NoOpComponent, dim=1024
component name=tdnnf10.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=3.22887e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01597, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.72,0.72,0.72,0.72 0.72,0.72,0.72,0.72,0.72 0.72,0.72,0.72,0.72), mean=0.723, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.14,0.15,0.16 0.16,0.17,0.18,0.19,0.20 0.20,0.21,0.21,0.23), mean=0.18, stddev=0.0137], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=3.22887e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.04678, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.68,0.68,0.69 0.71,0.72,0.75,0.77,0.79 0.80,0.82,0.83,0.86), mean=0.748, stddev=0.0334], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.4,1.4 1.5,1.5,1.5,1.5,1.5 1.5,1.6,1.6,1.6), mean=1.5, stddev=0.0329], bias-{mean,stddev}=0.05119,0.7603, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.41e+05, self-repaired-proportion=0.0329457, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-05,0.03,0.05,0.08 0.12,0.19,0.44,0.87,1.1 1.3,1.7,1.9,2.4), mean=0.549, stddev=0.414], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0003,0.05,0.07,0.12 0.18,0.26,0.51,0.77,0.85 0.90,0.95,0.97,1.0), mean=0.513, stddev=0.249], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.003 0.003,0.003,0.004,0.006,0.008 0.01,0.01,0.02,0.09), mean=0.0053, stddev=0.00504], oderiv-count=1.28442e+06
component name=tdnnf10.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=12667, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-05,0.03,0.05,0.08 0.11,0.19,0.44,0.87,1.1 1.3,1.7,1.8,2.4), mean=0.547, stddev=0.414], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.18,0.24,0.30 0.38,0.46,0.66,0.86,0.96 1.0,1.1,1.2,1.6), mean=0.663, stddev=0.23]
component name=tdnnf10.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.111111, continuous=true
component name=tdnnf10.noop type=NoOpComponent, dim=1024
component name=tdnnf11.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=3.22887e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01597, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.72,0.72,0.72,0.72 0.72,0.72,0.72,0.72,0.72 0.72,0.72,0.72,0.72), mean=0.723, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.15,0.15,0.16 0.16,0.17,0.18,0.19,0.20 0.20,0.21,0.22,0.24), mean=0.18, stddev=0.0134], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=3.22887e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.0467, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.67,0.68,0.69 0.70,0.72,0.75,0.78,0.79 0.80,0.82,0.82,0.87), mean=0.746, stddev=0.035], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.4,1.4 1.5,1.5,1.5,1.5,1.5 1.5,1.6,1.6,1.6), mean=1.49, stddev=0.0322], bias-{mean,stddev}=-0.0399,0.7793, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.07e+05, self-repaired-proportion=0.0244104, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-05,0.03,0.05,0.08 0.11,0.17,0.41,0.82,1.1 1.3,1.5,1.7,2.4), mean=0.518, stddev=0.397], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0003,0.04,0.07,0.11 0.15,0.23,0.48,0.74,0.83 0.88,0.93,0.95,1.0), mean=0.486, stddev=0.249], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.003 0.003,0.003,0.004,0.006,0.008 0.01,0.01,0.01,0.09), mean=0.00528, stddev=0.0059], oderiv-count=1.12864e+06
component name=tdnnf11.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=12155, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-05,0.03,0.05,0.07 0.10,0.17,0.41,0.82,1.1 1.3,1.5,1.6,2.4), mean=0.516, stddev=0.397], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.21,0.25,0.29 0.34,0.45,0.66,0.85,0.94 1.0,1.1,1.2,1.5), mean=0.653, stddev=0.226]
component name=tdnnf11.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.111111, continuous=true
component name=tdnnf11.noop type=NoOpComponent, dim=1024
component name=tdnnf12.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=3.22887e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01591, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.72,0.72,0.72,0.72 0.72,0.72,0.72,0.72,0.72 0.72,0.72,0.72,0.72), mean=0.72, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.14,0.15,0.16 0.16,0.17,0.18,0.19,0.20 0.20,0.21,0.21,0.24), mean=0.179, stddev=0.0136], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=3.22887e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.04659, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.67,0.68,0.69 0.70,0.72,0.74,0.77,0.79 0.80,0.81,0.82,0.85), mean=0.745, stddev=0.0336], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.4,1.4 1.4,1.5,1.5,1.5,1.5 1.5,1.6,1.6,1.6), mean=1.49, stddev=0.0313], bias-{mean,stddev}=-0.0205,0.7577, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.34e+05, self-repaired-proportion=0.0216797, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-05,0.04,0.05,0.08 0.12,0.18,0.42,0.83,1.1 1.3,1.6,1.8,2.4), mean=0.523, stddev=0.398], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.05,0.07,0.11 0.16,0.25,0.48,0.72,0.83 0.90,0.94,0.95,0.99), mean=0.489, stddev=0.242], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.003,0.003,0.004,0.006,0.007 0.008,0.01,0.01,0.07), mean=0.00477, stddev=0.00459], oderiv-count=1.17683e+06
component name=tdnnf12.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11643, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(6e-06,0.04,0.05,0.07 0.12,0.18,0.41,0.83,1.1 1.3,1.6,1.7,2.4), mean=0.521, stddev=0.398], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0007,0.23,0.26,0.31 0.37,0.46,0.65,0.84,0.93 1.0,1.1,1.1,1.4), mean=0.653, stddev=0.218]
component name=tdnnf12.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.111111, continuous=true
component name=tdnnf12.noop type=NoOpComponent, dim=1024
component name=tdnnf13.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=3.22887e-06, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01577, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.71,0.71,0.71,0.71 0.71,0.71,0.71,0.71,0.71 0.71,0.71,0.71,0.71), mean=0.714, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.15,0.15,0.16 0.16,0.17,0.18,0.19,0.19 0.20,0.21,0.21,0.23), mean=0.178, stddev=0.0135], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=3.22887e-06, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.04663, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.67,0.68,0.69 0.70,0.72,0.75,0.77,0.79 0.80,0.82,0.83,0.88), mean=0.745, stddev=0.0352], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.4,1.4 1.4,1.5,1.5,1.5,1.5 1.5,1.6,1.6,1.6), mean=1.49, stddev=0.0337], bias-{mean,stddev}=-0.009672,0.7515, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.21e+05, self-repaired-proportion=0.0186776, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-05,0.04,0.06,0.09 0.14,0.20,0.44,0.86,1.1 1.3,1.6,1.7,2.2), mean=0.542, stddev=0.39], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.05,0.08,0.13 0.18,0.27,0.48,0.72,0.81 0.87,0.92,0.95,0.98), mean=0.493, stddev=0.232], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.003,0.003,0.004,0.005,0.006 0.007,0.009,0.01,0.07), mean=0.00424, stddev=0.00374], oderiv-count=1.08307e+06
component name=tdnnf13.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11131, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(8e-06,0.04,0.06,0.09 0.14,0.20,0.44,0.85,1.1 1.3,1.6,1.7,2.2), mean=0.541, stddev=0.389], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0008,0.23,0.26,0.32 0.39,0.47,0.67,0.87,0.96 1.1,1.1,1.2,1.3), mean=0.676, stddev=0.222]
component name=tdnnf13.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0.111111, continuous=true
component name=tdnnf13.noop type=NoOpComponent, dim=1024
component name=prefinal-l type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=3.22887e-06, l2-regularize=0.008, max-change=0.75, params-rms=0.02124, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.68,0.68,0.68,0.68 0.68,0.68,0.68,0.68,0.68 0.68,0.68,0.68,0.68), mean=0.68, stddev=0], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.27,0.29,0.30,0.31 0.31,0.32,0.34,0.36,0.36 0.37,0.38,0.39,0.40), mean=0.339, stddev=0.0209], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=3.22887e-06, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.04646, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.66,0.67,0.69 0.70,0.71,0.74,0.77,0.79 0.79,0.81,0.81,0.84), mean=0.743, stddev=0.0334], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.4,1.4 1.4,1.5,1.5,1.5,1.5 1.5,1.5,1.6,1.6), mean=1.49, stddev=0.0319], bias-{mean,stddev}=-0.005649,0.7657, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.89e+05, self-repaired-proportion=0.0367636, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-06,3e-05,0.03,0.07 0.10,0.17,0.40,0.79,1.1 1.3,1.7,1.9,2.3), mean=0.507, stddev=0.407], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-05,0.0002,0.06,0.10 0.16,0.25,0.48,0.74,0.84 0.91,0.95,0.97,0.99), mean=0.494, stddev=0.253], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.002,0.002,0.002 0.003,0.003,0.004,0.006,0.007 0.009,0.01,0.05,0.07), mean=0.00524, stddev=0.00637], oderiv-count=1.15424e+06
component name=prefinal-chain.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11131, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-07,5e-05,0.03,0.06 0.10,0.17,0.40,0.79,1.1 1.3,1.7,1.9,2.3), mean=0.506, stddev=0.407], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(8e-05,0.003,0.18,0.27 0.33,0.42,0.60,0.78,0.88 0.95,1.1,1.1,1.3), mean=0.604, stddev=0.215]
component name=prefinal-chain.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=3.22887e-06, l2-regularize=0.008, max-change=0.75, params-rms=0.02271, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.73,0.73,0.73,0.73 0.73,0.73,0.73,0.73,0.73 0.73,0.73,0.73,0.73), mean=0.727, stddev=0], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.26,0.30,0.31,0.32 0.33,0.34,0.36,0.38,0.39 0.40,0.41,0.42,0.46), mean=0.363, stddev=0.0256], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=11131, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-8e-08,-7e-08,-6e-08,-5e-08 -4e-08,-3e-08,2e-09,3e-08,4e-08 6e-08,7e-08,8e-08,1e-07), mean=1.75e-09, stddev=3.32e-08], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.65,0.68,0.69 0.70,0.72,0.76,0.80,0.83 0.86,0.88,0.91,0.99), mean=0.765, stddev=0.0548]
component name=output.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=2824, learning-rate=3.22887e-06, l2-regularize=0.002, max-change=1.5, linear-params-rms=0.01073, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0003,0.003,0.007,0.02 0.04,0.07,0.16,0.22,0.25 0.28,0.31,0.33,0.48), mean=0.151, stddev=0.0807], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.44,0.47,0.47,0.49 0.51,0.54,0.57,0.60,0.62 0.63,0.65,0.66,0.69), mean=0.568, stddev=0.0428], bias-{mean,stddev}=2.313e-05,0.03334, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=3.22887e-06, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.0461, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.66,0.67,0.68 0.69,0.71,0.74,0.77,0.78 0.79,0.81,0.82,0.86), mean=0.737, stddev=0.0351], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.4,1.4 1.4,1.5,1.5,1.5,1.5 1.5,1.5,1.6,1.6), mean=1.47, stddev=0.0326], bias-{mean,stddev}=0.0001972,0.7439, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.3e+05, self-repaired-proportion=0.0303268, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-07,0.04,0.05,0.09 0.12,0.19,0.41,0.78,1.1 1.3,1.6,1.7,2.6), mean=0.512, stddev=0.384], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(8e-06,0.04,0.07,0.12 0.17,0.26,0.48,0.72,0.84 0.91,0.95,0.96,1.0), mean=0.491, stddev=0.243], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0006,0.0008,0.0008,0.0009 0.001,0.001,0.001,0.002,0.002 0.003,0.003,0.004,0.03), mean=0.00171, stddev=0.00195], oderiv-count=1.12429e+06
component name=prefinal-xent.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11131, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-33,0.04,0.05,0.09 0.12,0.19,0.41,0.78,1.1 1.3,1.6,1.7,2.6), mean=0.511, stddev=0.384], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-17,0.21,0.26,0.33 0.39,0.46,0.63,0.81,0.90 0.96,1.0,1.0,1.2), mean=0.634, stddev=0.197]
component name=prefinal-xent.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=3.22887e-06, l2-regularize=0.008, max-change=0.75, params-rms=0.0212, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.68,0.68,0.68,0.68 0.68,0.68,0.68,0.68,0.68 0.68,0.68,0.68,0.68), mean=0.679, stddev=0.000173], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.25,0.27,0.28,0.29 0.30,0.32,0.34,0.36,0.37 0.38,0.39,0.40,0.41), mean=0.338, stddev=0.0262], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=11131, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1e-07,-8e-08,-7e-08,-6e-08 -4e-08,-3e-08,-3e-09,3e-08,4e-08 5e-08,6e-08,7e-08,9e-08), mean=-8.84e-10, stddev=3.13e-08], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.60,0.60,0.62,0.64 0.66,0.69,0.74,0.79,0.81 0.83,0.86,0.87,1.0), mean=0.741, stddev=0.0602]
component name=output-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=2824, learning-rate=1.61444e-05, l2-regularize=0.002, learning-rate-factor=5, max-change=1.5, linear-params-rms=0.0258, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.02,0.02,0.02 0.03,0.05,0.22,0.60,0.71 0.79,0.86,0.90,1.2), mean=0.313, stddev=0.269], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.85,0.88,0.90,0.96 1.0,1.2,1.4,1.5,1.6 1.6,1.7,1.7,1.7), mean=1.36, stddev=0.206], bias-{mean,stddev}=6.793e-09,0.07319, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-xent.log-softmax type=LogSoftmaxComponent, dim=2824, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,5e-08,3e-05,9e-05 0.0001,0.0002,0.0007,0.001,0.002 0.003,0.004,0.004,0.04), mean=0.000938, stddev=0.00118], oderiv-count=1.09702e+06
nnet3-show-progress --use-gpu=no telugu_exp/chain_cleaned_1d/tdnn1d_sp/48.mdl telugu_exp/chain_cleaned_1d/tdnn1d_sp/49.mdl 
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:SelectGpuId():cu-device.cc:168) Manually selected to compute on CPU.
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:0.0681711 tdnnf2.linear:0.0670648 tdnnf2.affine:0.0658098 tdnnf3.linear:0.0514191 tdnnf3.affine:0.0621607 tdnnf4.linear:0.0425124 tdnnf4.affine:0.0625469 tdnnf5.linear:0.0297198 tdnnf5.affine:0.0599447 tdnnf6.linear:0.0382348 tdnnf6.affine:0.0591617 tdnnf7.linear:0.0388529 tdnnf7.affine:0.0609862 tdnnf8.linear:0.0381553 tdnnf8.affine:0.0613634 tdnnf9.linear:0.0371001 tdnnf9.affine:0.0605846 tdnnf10.linear:0.0366698 tdnnf10.affine:0.0606728 tdnnf11.linear:0.0349417 tdnnf11.affine:0.0612232 tdnnf12.linear:0.0352471 tdnnf12.affine:0.0603159 tdnnf13.linear:0.0339995 tdnnf13.affine:0.0601304 prefinal-l:0.0359128 prefinal-chain.affine:0.0607976 prefinal-chain.linear:0.0278688 output.affine:0.0443604 prefinal-xent.affine:0.0593944 prefinal-xent.linear:0.0251039 output-xent.affine:0.0830401 ]
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:33.5585 tdnnf2.linear:8.38853 tdnnf2.affine:33.2965 tdnnf3.linear:8.336 tdnnf3.affine:33.2573 tdnnf4.linear:8.31988 tdnnf4.affine:34.7195 tdnnf5.linear:8.17535 tdnnf5.affine:33.9701 tdnnf6.linear:8.23378 tdnnf6.affine:33.1155 tdnnf7.linear:8.25878 tdnnf7.affine:34.1978 tdnnf8.linear:8.25483 tdnnf8.affine:34.4817 tdnnf9.linear:8.22433 tdnnf9.affine:34.0751 tdnnf10.linear:8.17736 tdnnf10.affine:34.1791 tdnnf11.linear:8.17908 tdnnf11.affine:34.573 tdnnf12.linear:8.14635 tdnnf12.affine:34.0199 tdnnf13.linear:8.07275 tdnnf13.affine:33.886 prefinal-l:10.8765 prefinal-chain.affine:34.1502 prefinal-chain.linear:11.6291 output.affine:9.29167 prefinal-xent.affine:33.5234 prefinal-xent.linear:10.8567 output-xent.affine:22.2763 ]
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.00202788 tdnnf2.linear:0.00798436 tdnnf2.affine:0.00197292 tdnnf3.linear:0.00615921 tdnnf3.affine:0.00186578 tdnnf4.linear:0.00510172 tdnnf4.affine:0.00179837 tdnnf5.linear:0.00362945 tdnnf5.affine:0.00176157 tdnnf6.linear:0.00463643 tdnnf6.affine:0.00178345 tdnnf7.linear:0.00469726 tdnnf7.affine:0.00178027 tdnnf8.linear:0.0046153 tdnnf8.affine:0.00177653 tdnnf9.linear:0.00450428 tdnnf9.affine:0.00177491 tdnnf10.linear:0.00447772 tdnnf10.affine:0.00177209 tdnnf11.linear:0.00426585 tdnnf11.affine:0.00176779 tdnnf12.linear:0.00432043 tdnnf12.affine:0.00176991 tdnnf13.linear:0.00420552 tdnnf13.affine:0.00177143 prefinal-l:0.00329671 prefinal-chain.affine:0.00177722 prefinal-chain.linear:0.00239248 output.affine:0.00478049 prefinal-xent.affine:0.00176865 prefinal-xent.linear:0.00230853 output-xent.affine:0.00373189 ]
# Accounting: time=0 threads=1
# Ended (code 0) at Mon Jul 18 21:06:54 EDT 2022, elapsed time 0 seconds
