# nnet3-am-info telugu_exp/chain_cleaned_1d/tdnn1d_sp/6.mdl && nnet3-show-progress --use-gpu=no telugu_exp/chain_cleaned_1d/tdnn1d_sp/5.mdl telugu_exp/chain_cleaned_1d/tdnn1d_sp/6.mdl 
# Started at Wed Jul 20 03:12:14 EDT 2022
#
nnet3-am-info telugu_exp/chain_cleaned_1d/tdnn1d_sp/6.mdl 
input-dim: 40
ivector-dim: 100
num-pdfs: 2824
prior-dimension: 0
# Nnet info follows.
left-context: 28
right-context: 28
num-parameters: 9032208
modulus: 1
input-node name=ivector dim=100
input-node name=input dim=40
component-node name=lda component=lda input=Append(Offset(input, -1), input, Offset(input, 1), ReplaceIndex(ivector, t, 0)) input-dim=220 output-dim=220
component-node name=tdnn1.affine component=tdnn1.affine input=lda input-dim=220 output-dim=1024
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=1024 output-dim=1024
component-node name=tdnn1.batchnorm component=tdnn1.batchnorm input=tdnn1.relu input-dim=1024 output-dim=1024
component-node name=tdnn1.dropout component=tdnn1.dropout input=tdnn1.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.linear component=tdnnf2.linear input=tdnn1.dropout input-dim=1024 output-dim=128
component-node name=tdnnf2.affine component=tdnnf2.affine input=tdnnf2.linear input-dim=128 output-dim=1024
component-node name=tdnnf2.relu component=tdnnf2.relu input=tdnnf2.affine input-dim=1024 output-dim=1024
component-node name=tdnnf2.batchnorm component=tdnnf2.batchnorm input=tdnnf2.relu input-dim=1024 output-dim=1024
component-node name=tdnnf2.dropout component=tdnnf2.dropout input=tdnnf2.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.noop component=tdnnf2.noop input=Sum(Scale(0.66, tdnn1.dropout), tdnnf2.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf3.linear component=tdnnf3.linear input=tdnnf2.noop input-dim=1024 output-dim=128
component-node name=tdnnf3.affine component=tdnnf3.affine input=tdnnf3.linear input-dim=128 output-dim=1024
component-node name=tdnnf3.relu component=tdnnf3.relu input=tdnnf3.affine input-dim=1024 output-dim=1024
component-node name=tdnnf3.batchnorm component=tdnnf3.batchnorm input=tdnnf3.relu input-dim=1024 output-dim=1024
component-node name=tdnnf3.dropout component=tdnnf3.dropout input=tdnnf3.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf3.noop component=tdnnf3.noop input=Sum(Scale(0.66, tdnnf2.noop), tdnnf3.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf4.linear component=tdnnf4.linear input=tdnnf3.noop input-dim=1024 output-dim=128
component-node name=tdnnf4.affine component=tdnnf4.affine input=tdnnf4.linear input-dim=128 output-dim=1024
component-node name=tdnnf4.relu component=tdnnf4.relu input=tdnnf4.affine input-dim=1024 output-dim=1024
component-node name=tdnnf4.batchnorm component=tdnnf4.batchnorm input=tdnnf4.relu input-dim=1024 output-dim=1024
component-node name=tdnnf4.dropout component=tdnnf4.dropout input=tdnnf4.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf4.noop component=tdnnf4.noop input=Sum(Scale(0.66, tdnnf3.noop), tdnnf4.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf5.linear component=tdnnf5.linear input=tdnnf4.noop input-dim=1024 output-dim=128
component-node name=tdnnf5.affine component=tdnnf5.affine input=tdnnf5.linear input-dim=128 output-dim=1024
component-node name=tdnnf5.relu component=tdnnf5.relu input=tdnnf5.affine input-dim=1024 output-dim=1024
component-node name=tdnnf5.batchnorm component=tdnnf5.batchnorm input=tdnnf5.relu input-dim=1024 output-dim=1024
component-node name=tdnnf5.dropout component=tdnnf5.dropout input=tdnnf5.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf5.noop component=tdnnf5.noop input=Sum(Scale(0.66, tdnnf4.noop), tdnnf5.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf6.linear component=tdnnf6.linear input=tdnnf5.noop input-dim=1024 output-dim=128
component-node name=tdnnf6.affine component=tdnnf6.affine input=tdnnf6.linear input-dim=128 output-dim=1024
component-node name=tdnnf6.relu component=tdnnf6.relu input=tdnnf6.affine input-dim=1024 output-dim=1024
component-node name=tdnnf6.batchnorm component=tdnnf6.batchnorm input=tdnnf6.relu input-dim=1024 output-dim=1024
component-node name=tdnnf6.dropout component=tdnnf6.dropout input=tdnnf6.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf6.noop component=tdnnf6.noop input=Sum(Scale(0.66, tdnnf5.noop), tdnnf6.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf7.linear component=tdnnf7.linear input=tdnnf6.noop input-dim=1024 output-dim=128
component-node name=tdnnf7.affine component=tdnnf7.affine input=tdnnf7.linear input-dim=128 output-dim=1024
component-node name=tdnnf7.relu component=tdnnf7.relu input=tdnnf7.affine input-dim=1024 output-dim=1024
component-node name=tdnnf7.batchnorm component=tdnnf7.batchnorm input=tdnnf7.relu input-dim=1024 output-dim=1024
component-node name=tdnnf7.dropout component=tdnnf7.dropout input=tdnnf7.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf7.noop component=tdnnf7.noop input=Sum(Scale(0.66, tdnnf6.noop), tdnnf7.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf8.linear component=tdnnf8.linear input=tdnnf7.noop input-dim=1024 output-dim=128
component-node name=tdnnf8.affine component=tdnnf8.affine input=tdnnf8.linear input-dim=128 output-dim=1024
component-node name=tdnnf8.relu component=tdnnf8.relu input=tdnnf8.affine input-dim=1024 output-dim=1024
component-node name=tdnnf8.batchnorm component=tdnnf8.batchnorm input=tdnnf8.relu input-dim=1024 output-dim=1024
component-node name=tdnnf8.dropout component=tdnnf8.dropout input=tdnnf8.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf8.noop component=tdnnf8.noop input=Sum(Scale(0.66, tdnnf7.noop), tdnnf8.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf9.linear component=tdnnf9.linear input=tdnnf8.noop input-dim=1024 output-dim=128
component-node name=tdnnf9.affine component=tdnnf9.affine input=tdnnf9.linear input-dim=128 output-dim=1024
component-node name=tdnnf9.relu component=tdnnf9.relu input=tdnnf9.affine input-dim=1024 output-dim=1024
component-node name=tdnnf9.batchnorm component=tdnnf9.batchnorm input=tdnnf9.relu input-dim=1024 output-dim=1024
component-node name=tdnnf9.dropout component=tdnnf9.dropout input=tdnnf9.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf9.noop component=tdnnf9.noop input=Sum(Scale(0.66, tdnnf8.noop), tdnnf9.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf10.linear component=tdnnf10.linear input=tdnnf9.noop input-dim=1024 output-dim=128
component-node name=tdnnf10.affine component=tdnnf10.affine input=tdnnf10.linear input-dim=128 output-dim=1024
component-node name=tdnnf10.relu component=tdnnf10.relu input=tdnnf10.affine input-dim=1024 output-dim=1024
component-node name=tdnnf10.batchnorm component=tdnnf10.batchnorm input=tdnnf10.relu input-dim=1024 output-dim=1024
component-node name=tdnnf10.dropout component=tdnnf10.dropout input=tdnnf10.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf10.noop component=tdnnf10.noop input=Sum(Scale(0.66, tdnnf9.noop), tdnnf10.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf11.linear component=tdnnf11.linear input=tdnnf10.noop input-dim=1024 output-dim=128
component-node name=tdnnf11.affine component=tdnnf11.affine input=tdnnf11.linear input-dim=128 output-dim=1024
component-node name=tdnnf11.relu component=tdnnf11.relu input=tdnnf11.affine input-dim=1024 output-dim=1024
component-node name=tdnnf11.batchnorm component=tdnnf11.batchnorm input=tdnnf11.relu input-dim=1024 output-dim=1024
component-node name=tdnnf11.dropout component=tdnnf11.dropout input=tdnnf11.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf11.noop component=tdnnf11.noop input=Sum(Scale(0.66, tdnnf10.noop), tdnnf11.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf12.linear component=tdnnf12.linear input=tdnnf11.noop input-dim=1024 output-dim=128
component-node name=tdnnf12.affine component=tdnnf12.affine input=tdnnf12.linear input-dim=128 output-dim=1024
component-node name=tdnnf12.relu component=tdnnf12.relu input=tdnnf12.affine input-dim=1024 output-dim=1024
component-node name=tdnnf12.batchnorm component=tdnnf12.batchnorm input=tdnnf12.relu input-dim=1024 output-dim=1024
component-node name=tdnnf12.dropout component=tdnnf12.dropout input=tdnnf12.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf12.noop component=tdnnf12.noop input=Sum(Scale(0.66, tdnnf11.noop), tdnnf12.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf13.linear component=tdnnf13.linear input=tdnnf12.noop input-dim=1024 output-dim=128
component-node name=tdnnf13.affine component=tdnnf13.affine input=tdnnf13.linear input-dim=128 output-dim=1024
component-node name=tdnnf13.relu component=tdnnf13.relu input=tdnnf13.affine input-dim=1024 output-dim=1024
component-node name=tdnnf13.batchnorm component=tdnnf13.batchnorm input=tdnnf13.relu input-dim=1024 output-dim=1024
component-node name=tdnnf13.dropout component=tdnnf13.dropout input=tdnnf13.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf13.noop component=tdnnf13.noop input=Sum(Scale(0.66, tdnnf12.noop), tdnnf13.dropout) input-dim=1024 output-dim=1024
component-node name=prefinal-l component=prefinal-l input=tdnnf13.noop input-dim=1024 output-dim=256
component-node name=prefinal-chain.affine component=prefinal-chain.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-chain.relu component=prefinal-chain.relu input=prefinal-chain.affine input-dim=1024 output-dim=1024
component-node name=prefinal-chain.batchnorm1 component=prefinal-chain.batchnorm1 input=prefinal-chain.relu input-dim=1024 output-dim=1024
component-node name=prefinal-chain.linear component=prefinal-chain.linear input=prefinal-chain.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-chain.batchnorm2 component=prefinal-chain.batchnorm2 input=prefinal-chain.linear input-dim=256 output-dim=256
component-node name=output.affine component=output.affine input=prefinal-chain.batchnorm2 input-dim=256 output-dim=2824
output-node name=output input=output.affine dim=2824 objective=linear
component-node name=prefinal-xent.affine component=prefinal-xent.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-xent.relu component=prefinal-xent.relu input=prefinal-xent.affine input-dim=1024 output-dim=1024
component-node name=prefinal-xent.batchnorm1 component=prefinal-xent.batchnorm1 input=prefinal-xent.relu input-dim=1024 output-dim=1024
component-node name=prefinal-xent.linear component=prefinal-xent.linear input=prefinal-xent.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-xent.batchnorm2 component=prefinal-xent.batchnorm2 input=prefinal-xent.linear input-dim=256 output-dim=256
component-node name=output-xent.affine component=output-xent.affine input=prefinal-xent.batchnorm2 input-dim=256 output-dim=2824
component-node name=output-xent.log-softmax component=output-xent.log-softmax input=output-xent.affine input-dim=2824 output-dim=2824
output-node name=output-xent input=output-xent.log-softmax dim=2824 objective=linear
component name=lda type=FixedAffineComponent, input-dim=220, output-dim=220, linear-params-rms=0.005753, bias-{mean,stddev}=-0.001002,0.01283
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=220, output-dim=1024, learning-rate=0.000235226, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.03188, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.38,0.41,0.41,0.43 0.43,0.44,0.47,0.50,0.52 0.54,0.57,0.59,0.67), mean=0.471, stddev=0.037], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.93,0.93,0.93,0.95 0.96,0.97,1.0,1.0,1.1 1.2,1.2,1.2,1.4), mean=1.02, stddev=0.0702], bias-{mean,stddev}=-0.007705,0.4322, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=3.08e+06, self-repaired-proportion=0.805567, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.03,0.39,0.60 0.77,0.97,1.1,1.7), mean=0.184, stddev=0.271], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.47,1.0,1.0 1.0,1.0,1.0,1.0), mean=0.487, stddev=0.464], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.04,0.04,0.05 0.06,0.07,0.10,0.12,0.14 0.16,0.20,0.22,0.34), mean=0.0994, stddev=0.0348], oderiv-count=4.72704e+06
component name=tdnn1.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=47651.7, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.03,0.36,0.56 0.72,0.91,0.99,1.6), mean=0.172, stddev=0.253], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.04,0.07,0.08 0.09,0.10,0.10,0.14), mean=0.0349, stddev=0.0334]
component name=tdnn1.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf2.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000235226, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.0166, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.75,0.75,0.75,0.75 0.75,0.75,0.75,0.75,0.75 0.75,0.75,0.75,0.75), mean=0.751, stddev=0.00106], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.13,0.14,0.14 0.15,0.16,0.18,0.21,0.23 0.24,0.26,0.27,0.32), mean=0.185, stddev=0.0306], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000235226, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.02918, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.39,0.41,0.41,0.42 0.43,0.44,0.46,0.49,0.50 0.51,0.53,0.55,0.60), mean=0.466, stddev=0.0291], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.87,0.88,0.88,0.90 0.91,0.92,0.93,0.95,0.96 0.97,0.97,0.98,0.99), mean=0.933, stddev=0.0216], bias-{mean,stddev}=-0.0003145,0.415, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=3.01e+06, self-repaired-proportion=0.120304, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(7e-06,0.0002,0.0003,0.002 0.02,0.05,0.17,0.44,0.59 0.70,0.86,1.1,1.8), mean=0.251, stddev=0.242], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.002,0.003,0.01 0.08,0.16,0.49,0.83,0.92 0.95,0.98,0.99,1.0), mean=0.496, stddev=0.309], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.005,0.005,0.006 0.006,0.007,0.01,0.02,0.03 0.06,0.06,0.07,0.08), mean=0.017, stddev=0.0144], oderiv-count=4.64038e+06
component name=tdnnf2.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=47139.7, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(6e-06,0.0001,0.0002,0.002 0.02,0.04,0.16,0.41,0.55 0.66,0.79,0.99,1.6), mean=0.235, stddev=0.224], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0007,0.004,0.006,0.02 0.09,0.14,0.25,0.33,0.37 0.40,0.43,0.45,0.56), mean=0.236, stddev=0.108]
component name=tdnnf2.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf2.noop type=NoOpComponent, dim=1024
component name=tdnnf3.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000235226, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.0146, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.66,0.66,0.66,0.66 0.66,0.66,0.66,0.66,0.66 0.66,0.66,0.66,0.66), mean=0.661, stddev=0.000573], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.13,0.13,0.14 0.14,0.15,0.16,0.18,0.19 0.20,0.22,0.22,0.28), mean=0.164, stddev=0.0196], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000235226, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.02878, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.38,0.41,0.41,0.42 0.43,0.44,0.46,0.48,0.49 0.50,0.51,0.52,0.54), mean=0.46, stddev=0.0227], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.85,0.87,0.88,0.89 0.89,0.90,0.92,0.94,0.95 0.96,0.96,0.97,1.0), mean=0.921, stddev=0.0225], bias-{mean,stddev}=-0.004948,0.4293, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=2.94e+06, self-repaired-proportion=0.042503, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(6e-06,0.01,0.02,0.03 0.05,0.08,0.23,0.47,0.66 0.77,0.90,0.95,1.6), mean=0.29, stddev=0.238], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(6e-05,0.04,0.05,0.10 0.14,0.21,0.50,0.77,0.88 0.92,0.95,0.96,0.99), mean=0.498, stddev=0.268], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.003,0.004,0.004 0.004,0.005,0.007,0.01,0.01 0.02,0.02,0.03,0.07), mean=0.0086, stddev=0.00606], oderiv-count=4.52832e+06
component name=tdnnf3.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=46627.7, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(8e-06,0.01,0.02,0.03 0.05,0.07,0.21,0.44,0.61 0.72,0.84,0.89,1.5), mean=0.27, stddev=0.222], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0009,0.07,0.10,0.13 0.17,0.21,0.32,0.42,0.46 0.49,0.52,0.54,0.62), mean=0.315, stddev=0.113]
component name=tdnnf3.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf3.noop type=NoOpComponent, dim=1024
component name=tdnnf4.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000235226, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.01355, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.61,0.61,0.61,0.61 0.61,0.61,0.61,0.61,0.61 0.61,0.61,0.61,0.61), mean=0.613, stddev=0.000573], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.12,0.13,0.13 0.14,0.14,0.15,0.16,0.17 0.18,0.18,0.19,0.25), mean=0.153, stddev=0.0132], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000235226, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.02859, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.40,0.40,0.41,0.42 0.43,0.44,0.46,0.48,0.48 0.49,0.50,0.51,0.53), mean=0.457, stddev=0.022], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.85,0.86,0.87,0.88 0.89,0.90,0.91,0.93,0.94 0.95,0.95,0.96,0.98), mean=0.915, stddev=0.0205], bias-{mean,stddev}=0.005693,0.4733, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=1.05e+06, self-repaired-proportion=0.0484743, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-05,0.02,0.02,0.04 0.06,0.10,0.25,0.50,0.68 0.88,0.99,1.1,1.8), mean=0.321, stddev=0.266], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.03,0.05,0.09 0.13,0.23,0.50,0.77,0.87 0.93,0.95,0.97,1.0), mean=0.501, stddev=0.265], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.005,0.006,0.006 0.007,0.008,0.01,0.02,0.02 0.02,0.03,0.03,0.11), mean=0.0122, stddev=0.00892], oderiv-count=1.49587e+06
component name=tdnnf4.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=15542.6, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-05,0.01,0.02,0.04 0.05,0.09,0.23,0.47,0.64 0.83,0.93,1.1,1.7), mean=0.301, stddev=0.25], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.11,0.13,0.16 0.20,0.25,0.35,0.46,0.50 0.54,0.57,0.59,0.72), mean=0.353, stddev=0.118]
component name=tdnnf4.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf4.noop type=NoOpComponent, dim=1024
component name=tdnnf5.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000235226, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=0, linear-params-rms=0.01692, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.54,0.54,0.54,0.54 0.54,0.54,0.54,0.54,0.54 0.54,0.54,0.54,0.54), mean=0.542, stddev=0.000732], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.16,0.16,0.17 0.18,0.18,0.19,0.20,0.21 0.21,0.22,0.22,0.23), mean=0.191, stddev=0.0126], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000235226, l2-regularize=0.008, max-change=0.75, time-offsets=0, linear-params-rms=0.04017, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.36,0.38,0.39,0.41 0.42,0.43,0.45,0.48,0.49 0.51,0.52,0.52,0.54), mean=0.453, stddev=0.0304], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.2,1.2,1.2,1.2 1.2,1.3,1.3,1.3,1.3 1.3,1.3,1.3,1.4), mean=1.28, stddev=0.0286], bias-{mean,stddev}=-0.0004083,0.4518, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=1.02e+06, self-repaired-proportion=0.0635248, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(5e-06,0.005,0.01,0.03 0.05,0.08,0.22,0.48,0.64 0.83,1.0,1.1,1.6), mean=0.296, stddev=0.261], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(6e-05,0.01,0.04,0.08 0.12,0.21,0.48,0.78,0.87 0.93,0.96,0.98,1.0), mean=0.492, stddev=0.276], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.005,0.006,0.006 0.007,0.008,0.01,0.02,0.02 0.03,0.04,0.05,0.11), mean=0.0133, stddev=0.00986], oderiv-count=1.5168e+06
component name=tdnnf5.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=15542.6, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(8e-10,0.004,0.01,0.03 0.04,0.08,0.20,0.45,0.60 0.78,0.97,1.0,1.5), mean=0.275, stddev=0.244], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(5e-06,0.04,0.08,0.12 0.16,0.21,0.32,0.42,0.47 0.51,0.54,0.57,0.64), mean=0.316, stddev=0.119]
component name=tdnnf5.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf5.noop type=NoOpComponent, dim=1024
component name=tdnnf6.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000235226, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01294, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.58,0.58,0.58,0.58 0.58,0.59,0.59,0.59,0.59 0.59,0.59,0.59,0.59), mean=0.586, stddev=0.000598], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.12,0.12,0.13 0.13,0.14,0.15,0.15,0.16 0.16,0.17,0.17,0.19), mean=0.146, stddev=0.0109], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000235226, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.02865, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.39,0.40,0.41,0.42 0.43,0.44,0.46,0.47,0.48 0.49,0.50,0.51,0.52), mean=0.458, stddev=0.0208], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.87,0.88,0.88,0.88 0.89,0.90,0.92,0.93,0.94 0.95,0.96,0.96,0.99), mean=0.917, stddev=0.0203], bias-{mean,stddev}=-0.01443,0.431, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.74e+05, self-repaired-proportion=0.0187471, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.02,0.03,0.05 0.08,0.12,0.26,0.50,0.64 0.76,0.92,0.99,1.7), mean=0.318, stddev=0.238], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0007,0.05,0.07,0.11 0.17,0.25,0.48,0.72,0.81 0.87,0.91,0.94,0.99), mean=0.487, stddev=0.237], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.004,0.005,0.005 0.006,0.006,0.009,0.01,0.02 0.02,0.02,0.03,0.08), mean=0.0101, stddev=0.0052], oderiv-count=1.53766e+06
component name=tdnnf6.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=15030.6, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.02,0.03,0.04 0.07,0.11,0.24,0.46,0.60 0.72,0.86,0.94,1.6), mean=0.297, stddev=0.223], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.12,0.14,0.19 0.22,0.27,0.39,0.49,0.53 0.58,0.63,0.64,0.74), mean=0.382, stddev=0.121]
component name=tdnnf6.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf6.noop type=NoOpComponent, dim=1024
component name=tdnnf7.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000235226, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01302, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.59,0.59,0.59,0.59 0.59,0.59,0.59,0.59,0.59 0.59,0.59,0.59,0.59), mean=0.589, stddev=0.000244], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.12,0.13,0.13 0.13,0.14,0.15,0.16,0.16 0.17,0.17,0.17,0.22), mean=0.147, stddev=0.0114], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000235226, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.02871, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.38,0.41,0.42,0.42 0.43,0.44,0.46,0.48,0.49 0.49,0.50,0.51,0.53), mean=0.459, stddev=0.021], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.86,0.87,0.88,0.89 0.89,0.90,0.92,0.93,0.94 0.95,0.96,0.97,0.97), mean=0.918, stddev=0.0203], bias-{mean,stddev}=0.006456,0.4596, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.04e+05, self-repaired-proportion=0.0276515, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.02,0.03,0.05 0.07,0.11,0.26,0.53,0.70 0.85,1.1,1.2,1.7), mean=0.337, stddev=0.263], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.05,0.07,0.12 0.15,0.24,0.49,0.75,0.84 0.90,0.94,0.96,0.99), mean=0.497, stddev=0.251], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.004,0.005,0.005 0.006,0.006,0.008,0.01,0.02 0.02,0.03,0.03,0.06), mean=0.00999, stddev=0.00545], oderiv-count=1.39821e+06
component name=tdnnf7.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=14518.6, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.02,0.03,0.05 0.06,0.10,0.24,0.49,0.66 0.80,0.99,1.1,1.6), mean=0.315, stddev=0.247], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.12,0.13,0.18 0.21,0.27,0.38,0.49,0.54 0.58,0.62,0.65,0.72), mean=0.383, stddev=0.124]
component name=tdnnf7.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf7.noop type=NoOpComponent, dim=1024
component name=tdnnf8.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000235226, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01296, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.59,0.59,0.59,0.59 0.59,0.59,0.59,0.59,0.59 0.59,0.59,0.59,0.59), mean=0.587, stddev=0.000173], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.12,0.12,0.13 0.13,0.14,0.15,0.16,0.16 0.17,0.17,0.18,0.20), mean=0.146, stddev=0.0117], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000235226, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.02868, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.39,0.41,0.42,0.43 0.43,0.44,0.46,0.48,0.49 0.50,0.50,0.51,0.53), mean=0.458, stddev=0.0211], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.87,0.87,0.88,0.88 0.89,0.90,0.92,0.93,0.94 0.95,0.97,0.97,0.99), mean=0.917, stddev=0.0206], bias-{mean,stddev}=-0.01323,0.4668, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.43e+05, self-repaired-proportion=0.0370547, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-05,0.02,0.03,0.04 0.06,0.11,0.26,0.50,0.69 0.85,1.1,1.2,1.5), mean=0.325, stddev=0.259], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.04,0.06,0.09 0.14,0.24,0.49,0.73,0.83 0.90,0.95,0.97,0.99), mean=0.488, stddev=0.251], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.004,0.005,0.005 0.006,0.006,0.008,0.01,0.02 0.02,0.03,0.03,0.09), mean=0.0104, stddev=0.00727], oderiv-count=1.34016e+06
component name=tdnnf8.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=14006.6, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-05,0.01,0.02,0.04 0.06,0.10,0.24,0.47,0.65 0.79,1.0,1.1,1.4), mean=0.303, stddev=0.243], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.10,0.12,0.16 0.20,0.26,0.37,0.48,0.53 0.57,0.61,0.63,0.70), mean=0.371, stddev=0.126]
component name=tdnnf8.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf8.noop type=NoOpComponent, dim=1024
component name=tdnnf9.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000235226, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01288, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.58,0.58,0.58,0.58 0.58,0.58,0.58,0.58,0.58 0.58,0.58,0.58,0.58), mean=0.583, stddev=0.000299], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.12,0.12,0.13 0.13,0.14,0.14,0.15,0.16 0.16,0.17,0.18,0.20), mean=0.145, stddev=0.0118], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000235226, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.02869, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.39,0.41,0.41,0.42 0.43,0.44,0.46,0.48,0.48 0.49,0.50,0.51,0.53), mean=0.459, stddev=0.0209], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.86,0.87,0.87,0.88 0.89,0.90,0.92,0.93,0.94 0.95,0.96,0.97,1.0), mean=0.918, stddev=0.0219], bias-{mean,stddev}=-0.006371,0.4568, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.94e+05, self-repaired-proportion=0.026859, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(7e-05,0.02,0.02,0.04 0.06,0.11,0.26,0.51,0.67 0.80,1.0,1.1,1.6), mean=0.325, stddev=0.25], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0005,0.05,0.06,0.09 0.14,0.24,0.49,0.74,0.83 0.90,0.94,0.95,0.99), mean=0.491, stddev=0.249], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.004,0.004,0.005 0.005,0.006,0.008,0.01,0.02 0.02,0.03,0.03,0.09), mean=0.00986, stddev=0.0063], oderiv-count=1.28262e+06
component name=tdnnf9.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=13494.6, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(9e-05,0.02,0.02,0.04 0.06,0.10,0.24,0.48,0.63 0.75,0.95,1.0,1.5), mean=0.304, stddev=0.236], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.12,0.13,0.16 0.20,0.26,0.38,0.48,0.53 0.56,0.60,0.61,0.69), mean=0.37, stddev=0.124]
component name=tdnnf9.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf9.noop type=NoOpComponent, dim=1024
component name=tdnnf10.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000235226, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01284, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.58,0.58,0.58,0.58 0.58,0.58,0.58,0.58,0.58 0.58,0.58,0.58,0.58), mean=0.581, stddev=0.000863], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.12,0.12,0.13 0.13,0.13,0.14,0.15,0.16 0.16,0.17,0.18,0.20), mean=0.145, stddev=0.0121], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000235226, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.02868, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.40,0.41,0.42,0.43 0.43,0.44,0.46,0.47,0.49 0.49,0.50,0.51,0.53), mean=0.458, stddev=0.0203], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.84,0.87,0.88,0.88 0.89,0.90,0.92,0.94,0.95 0.95,0.96,0.97,0.99), mean=0.918, stddev=0.0222], bias-{mean,stddev}=0.02986,0.4581, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.73e+05, self-repaired-proportion=0.0350972, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-05,0.02,0.03,0.05 0.07,0.12,0.27,0.56,0.72 0.84,1.1,1.2,1.5), mean=0.345, stddev=0.266], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.05,0.07,0.11 0.17,0.26,0.51,0.77,0.85 0.91,0.96,0.97,1.0), mean=0.51, stddev=0.252], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.004,0.004,0.005 0.005,0.006,0.008,0.01,0.01 0.02,0.02,0.03,0.10), mean=0.00927, stddev=0.00551], oderiv-count=1.22298e+06
component name=tdnnf10.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=12982.6, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-05,0.02,0.03,0.04 0.07,0.11,0.25,0.52,0.67 0.78,0.98,1.1,1.4), mean=0.322, stddev=0.249], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.12,0.14,0.17 0.21,0.26,0.38,0.49,0.54 0.58,0.61,0.63,0.72), mean=0.378, stddev=0.125]
component name=tdnnf10.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf10.noop type=NoOpComponent, dim=1024
component name=tdnnf11.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000235226, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01274, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.58,0.58,0.58,0.58 0.58,0.58,0.58,0.58,0.58 0.58,0.58,0.58,0.58), mean=0.577, stddev=0.000646], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.12,0.12,0.12 0.13,0.13,0.14,0.15,0.16 0.16,0.17,0.18,0.19), mean=0.144, stddev=0.0122], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000235226, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.02864, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.40,0.41,0.42,0.42 0.43,0.44,0.46,0.48,0.48 0.49,0.50,0.50,0.53), mean=0.458, stddev=0.021], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.86,0.87,0.87,0.88 0.89,0.90,0.91,0.93,0.95 0.95,0.96,0.96,0.97), mean=0.916, stddev=0.0214], bias-{mean,stddev}=-0.02471,0.47, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.86e+05, self-repaired-proportion=0.0268698, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.02,0.03,0.04 0.06,0.09,0.25,0.51,0.68 0.83,0.96,1.1,1.5), mean=0.319, stddev=0.254], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.04,0.06,0.10 0.15,0.21,0.48,0.74,0.85 0.90,0.94,0.95,1.0), mean=0.484, stddev=0.257], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.004,0.004,0.005 0.005,0.006,0.008,0.01,0.02 0.02,0.02,0.03,0.08), mean=0.00947, stddev=0.00582], oderiv-count=1.18682e+06
component name=tdnnf11.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=12470.6, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(9e-05,0.01,0.03,0.04 0.06,0.09,0.23,0.48,0.64 0.77,0.90,0.99,1.4), mean=0.297, stddev=0.239], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.10,0.13,0.16 0.19,0.24,0.36,0.47,0.52 0.56,0.60,0.61,0.66), mean=0.359, stddev=0.123]
component name=tdnnf11.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf11.noop type=NoOpComponent, dim=1024
component name=tdnnf12.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000235226, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.0128, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.58,0.58,0.58,0.58 0.58,0.58,0.58,0.58,0.58 0.58,0.58,0.58,0.58), mean=0.579, stddev=0.000345], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.12,0.12,0.13 0.13,0.13,0.14,0.15,0.16 0.17,0.17,0.18,0.20), mean=0.144, stddev=0.0124], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000235226, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.02862, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.39,0.41,0.42,0.42 0.43,0.44,0.46,0.47,0.48 0.49,0.50,0.51,0.52), mean=0.457, stddev=0.0207], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.85,0.87,0.88,0.88 0.89,0.90,0.91,0.93,0.94 0.95,0.96,0.96,1.0), mean=0.915, stddev=0.0211], bias-{mean,stddev}=-0.01245,0.457, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.52e+05, self-repaired-proportion=0.0286982, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(8e-05,0.02,0.03,0.05 0.06,0.11,0.25,0.51,0.69 0.83,1.0,1.1,1.5), mean=0.32, stddev=0.255], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0006,0.05,0.07,0.11 0.15,0.24,0.48,0.73,0.84 0.90,0.95,0.96,0.99), mean=0.489, stddev=0.25], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.004,0.005 0.005,0.006,0.008,0.01,0.01 0.02,0.02,0.02,0.08), mean=0.00879, stddev=0.00529], oderiv-count=1.14131e+06
component name=tdnnf12.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11958.6, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.02,0.03,0.04 0.06,0.10,0.23,0.48,0.64 0.79,0.95,1.0,1.4), mean=0.299, stddev=0.24], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.12,0.14,0.17 0.20,0.25,0.36,0.47,0.52 0.55,0.59,0.61,0.72), mean=0.358, stddev=0.119]
component name=tdnnf12.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf12.noop type=NoOpComponent, dim=1024
component name=tdnnf13.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000235226, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01276, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.58,0.58,0.58,0.58 0.58,0.58,0.58,0.58,0.58 0.58,0.58,0.58,0.58), mean=0.578, stddev=0.000299], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.12,0.12,0.13 0.13,0.13,0.14,0.15,0.16 0.16,0.17,0.17,0.21), mean=0.144, stddev=0.012], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000235226, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.0286, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.39,0.41,0.42,0.42 0.43,0.44,0.46,0.47,0.48 0.49,0.50,0.51,0.53), mean=0.457, stddev=0.021], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.86,0.86,0.87,0.88 0.89,0.90,0.91,0.93,0.94 0.95,0.96,0.97,0.97), mean=0.915, stddev=0.0218], bias-{mean,stddev}=-0.005559,0.4529, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.88e+05, self-repaired-proportion=0.0200352, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0003,0.02,0.03,0.05 0.08,0.11,0.26,0.52,0.69 0.82,1.0,1.1,1.4), mean=0.327, stddev=0.249], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.06,0.08,0.12 0.17,0.26,0.48,0.74,0.83 0.89,0.93,0.95,0.99), mean=0.494, stddev=0.245], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.004,0.004 0.005,0.005,0.007,0.01,0.01 0.01,0.02,0.02,0.08), mean=0.00777, stddev=0.00391], oderiv-count=1.11962e+06
component name=tdnnf13.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11446.6, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0003,0.02,0.03,0.05 0.07,0.10,0.24,0.49,0.65 0.77,0.94,1.0,1.3), mean=0.306, stddev=0.234], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.13,0.15,0.18 0.21,0.25,0.37,0.48,0.52 0.57,0.61,0.63,0.69), mean=0.367, stddev=0.12]
component name=tdnnf13.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf13.noop type=NoOpComponent, dim=1024
component name=prefinal-l type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000235226, l2-regularize=0.008, max-change=0.75, params-rms=0.01651, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.53,0.53,0.53,0.53 0.53,0.53,0.53,0.53,0.53 0.53,0.53,0.53,0.53), mean=0.528, stddev=0.000646], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.21,0.23,0.23,0.24 0.24,0.25,0.26,0.28,0.28 0.29,0.29,0.30,0.31), mean=0.264, stddev=0.0152], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=0.000235226, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.02862, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.39,0.41,0.42,0.43 0.43,0.44,0.46,0.48,0.48 0.49,0.50,0.50,0.52), mean=0.458, stddev=0.0198], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.86,0.87,0.88,0.88 0.89,0.90,0.92,0.93,0.94 0.95,0.95,0.96,0.97), mean=0.916, stddev=0.0192], bias-{mean,stddev}=-0.004608,0.4594, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.37e+05, self-repaired-proportion=0.0635466, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-07,0.01,0.02,0.03 0.05,0.08,0.21,0.47,0.65 0.82,1.1,1.2,1.5), mean=0.293, stddev=0.262], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(5e-06,0.03,0.05,0.08 0.13,0.21,0.48,0.78,0.88 0.94,0.97,0.98,1.0), mean=0.493, stddev=0.277], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.004,0.005 0.005,0.006,0.008,0.01,0.02 0.02,0.02,0.03,0.07), mean=0.0101, stddev=0.00651], oderiv-count=1.13754e+06
component name=prefinal-chain.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11446.6, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-21,0.01,0.01,0.03 0.04,0.07,0.19,0.44,0.61 0.77,0.99,1.1,1.4), mean=0.273, stddev=0.246], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(9e-12,0.07,0.09,0.13 0.16,0.20,0.30,0.40,0.45 0.48,0.51,0.53,0.61), mean=0.301, stddev=0.111]
component name=prefinal-chain.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000235226, l2-regularize=0.008, max-change=0.75, params-rms=0.01609, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.51,0.51,0.51,0.51 0.51,0.51,0.51,0.52,0.52 0.52,0.52,0.52,0.52), mean=0.515, stddev=0.000423], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.19,0.21,0.22,0.23 0.23,0.24,0.26,0.27,0.28 0.28,0.29,0.29,0.31), mean=0.257, stddev=0.0176], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=11446.6, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-7e-08,-6e-08,-5e-08,-4e-08 -3e-08,-2e-08,4e-09,2e-08,3e-08 4e-08,5e-08,6e-08,8e-08), mean=2.62e-09, stddev=2.44e-08], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.54,0.55,0.55,0.56 0.57,0.58,0.61,0.64,0.65 0.66,0.67,0.67,0.72), mean=0.61, stddev=0.0311]
component name=output.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=2824, learning-rate=0.000235226, l2-regularize=0.002, max-change=1.5, linear-params-rms=0.01435, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.005,0.02,0.05 0.09,0.15,0.22,0.28,0.31 0.34,0.37,0.39,0.88), mean=0.213, stddev=0.0849], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.65,0.67,0.69 0.71,0.73,0.76,0.80,0.81 0.83,0.84,0.85,0.89), mean=0.761, stddev=0.0422], bias-{mean,stddev}=5.837e-05,0.04133, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=0.000235226, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.02786, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.38,0.40,0.40,0.41 0.42,0.43,0.44,0.46,0.47 0.48,0.49,0.50,0.51), mean=0.445, stddev=0.0216], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.84,0.85,0.85,0.86 0.87,0.87,0.89,0.91,0.91 0.92,0.93,0.94,0.97), mean=0.891, stddev=0.0199], bias-{mean,stddev}=0.001712,0.4442, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=6.84e+05, self-repaired-proportion=0.0719367, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-08,0.02,0.03,0.04 0.06,0.08,0.21,0.45,0.66 0.79,0.99,1.1,1.7), mean=0.288, stddev=0.248], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-06,0.03,0.06,0.10 0.14,0.23,0.48,0.79,0.89 0.95,0.98,0.99,1.0), mean=0.5, stddev=0.274], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.002,0.002,0.002 0.002,0.002,0.003,0.004,0.005 0.006,0.006,0.008,0.02), mean=0.0034, stddev=0.00192], oderiv-count=1.10701e+06
component name=prefinal-xent.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11446.6, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(9e-24,0.01,0.02,0.04 0.05,0.08,0.19,0.42,0.61 0.73,0.92,1.0,1.6), mean=0.267, stddev=0.233], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(7e-13,0.11,0.13,0.15 0.17,0.20,0.29,0.38,0.43 0.46,0.48,0.50,0.58), mean=0.294, stddev=0.0984]
component name=prefinal-xent.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000235226, l2-regularize=0.008, max-change=0.75, params-rms=0.0132, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.42,0.42,0.42,0.42 0.42,0.42,0.42,0.42,0.42 0.42,0.42,0.42,0.42), mean=0.422, stddev=0.000122], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.17,0.17,0.18 0.19,0.19,0.21,0.23,0.23 0.24,0.24,0.25,0.26), mean=0.21, stddev=0.0184], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=11446.6, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-6e-08,-5e-08,-4e-08,-4e-08 -3e-08,-2e-08,-8e-10,1e-08,2e-08 3e-08,4e-08,5e-08,6e-08), mean=-2.22e-09, stddev=2.12e-08], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.37,0.41,0.41,0.42 0.43,0.45,0.47,0.50,0.51 0.52,0.54,0.54,0.57), mean=0.473, stddev=0.0308]
component name=output-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=2824, learning-rate=0.00117613, l2-regularize=0.002, learning-rate-factor=5, max-change=1.5, linear-params-rms=0.03109, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.02,0.02,0.03 0.06,0.13,0.46,0.66,0.76 0.82,0.89,0.92,1.3), mean=0.425, stddev=0.259], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.2,1.3,1.3,1.4 1.4,1.5,1.7,1.8,1.8 1.9,1.9,1.9,2.0), mean=1.64, stddev=0.161], bias-{mean,stddev}=1.14e-08,0.0728, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-xent.log-softmax type=LogSoftmaxComponent, dim=2824, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,4e-08,3e-05,0.0001 0.0002,0.0003,0.0007,0.001,0.002 0.003,0.004,0.004,0.04), mean=0.000971, stddev=0.00118], oderiv-count=1.11802e+06
nnet3-show-progress --use-gpu=no telugu_exp/chain_cleaned_1d/tdnn1d_sp/5.mdl telugu_exp/chain_cleaned_1d/tdnn1d_sp/6.mdl 
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:SelectGpuId():cu-device.cc:168) Manually selected to compute on CPU.
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:3.87452 tdnnf2.linear:2.43573 tdnnf2.affine:3.37684 tdnnf3.linear:2.24629 tdnnf3.affine:3.14057 tdnnf4.linear:2.05148 tdnnf4.affine:3.16133 tdnnf5.linear:1.65944 tdnnf5.affine:2.94273 tdnnf6.linear:1.91888 tdnnf6.affine:2.9677 tdnnf7.linear:1.88397 tdnnf7.affine:3.02821 tdnnf8.linear:1.82648 tdnnf8.affine:3.03854 tdnnf9.linear:1.74795 tdnnf9.affine:2.991 tdnnf10.linear:1.69111 tdnnf10.affine:2.97812 tdnnf11.linear:1.63346 tdnnf11.affine:2.99912 tdnnf12.linear:1.59314 tdnnf12.affine:2.94223 tdnnf13.linear:1.52711 tdnnf13.affine:2.92098 prefinal-l:1.65856 prefinal-chain.affine:2.95114 prefinal-chain.linear:1.39739 output.affine:1.97399 prefinal-xent.affine:2.84472 prefinal-xent.linear:1.1161 output-xent.affine:2.45304 ]
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:20.5027 tdnnf2.linear:8.49951 tdnnf2.affine:19.9881 tdnnf3.linear:7.47572 tdnnf3.affine:20.1463 tdnnf4.linear:6.93994 tdnnf4.affine:21.0655 tdnnf5.linear:6.12747 tdnnf5.affine:20.5062 tdnnf6.linear:6.62493 tdnnf6.affine:20.1406 tdnnf7.linear:6.66521 tdnnf7.affine:20.7936 tdnnf8.linear:6.63566 tdnnf8.affine:20.95 tdnnf9.linear:6.59243 tdnnf9.affine:20.7235 tdnnf10.linear:6.57304 tdnnf10.affine:20.7716 tdnnf11.linear:6.52329 tdnnf11.affine:21.0196 tdnnf12.linear:6.55423 tdnnf12.affine:20.7037 tdnnf13.linear:6.53546 tdnnf13.affine:20.6028 prefinal-l:8.45181 prefinal-chain.affine:20.7579 prefinal-chain.linear:8.23632 output.affine:12.3988 prefinal-xent.affine:20.1368 prefinal-xent.linear:6.75797 output-xent.affine:26.7182 ]
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.167605 tdnnf2.linear:0.27775 tdnnf2.affine:0.148834 tdnnf3.linear:0.28806 tdnnf3.affine:0.137395 tdnnf4.linear:0.279854 tdnnf4.affine:0.132323 tdnnf5.linear:0.25168 tdnnf5.affine:0.126338 tdnnf6.linear:0.27262 tdnnf6.affine:0.130082 tdnnf7.linear:0.267082 tdnnf7.affine:0.128563 tdnnf8.linear:0.260114 tdnnf8.affine:0.127999 tdnnf9.linear:0.250709 tdnnf9.affine:0.127395 tdnnf10.linear:0.243482 tdnnf10.affine:0.12653 tdnnf11.linear:0.236781 tdnnf11.affine:0.125945 tdnnf12.linear:0.230345 tdnnf12.affine:0.125436 tdnnf13.linear:0.221826 tdnnf13.affine:0.125121 prefinal-l:0.184853 prefinal-chain.affine:0.125417 prefinal-chain.linear:0.156673 output.affine:0.165498 prefinal-xent.affine:0.124161 prefinal-xent.linear:0.147315 output-xent.affine:0.0940285 ]
# Accounting: time=1 threads=1
# Ended (code 0) at Wed Jul 20 03:12:15 EDT 2022, elapsed time 1 seconds
