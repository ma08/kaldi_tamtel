# nnet3-info --verbose=2 telugu_exp/chain_cleaned_1d/tdnn1d_sp/20.mdl 
# Started at Wed Jul 20 03:40:15 EDT 2022
#
nnet3-info --verbose=2 telugu_exp/chain_cleaned_1d/tdnn1d_sp/20.mdl 
left-context: 28
right-context: 28
num-parameters: 9032208
modulus: 1
input-node name=ivector dim=100
input-node name=input dim=40
component-node name=lda component=lda input=Append(Offset(input, -1), input, Offset(input, 1), ReplaceIndex(ivector, t, 0)) input-dim=220 output-dim=220
component-node name=tdnn1.affine component=tdnn1.affine input=lda input-dim=220 output-dim=1024
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=1024 output-dim=1024
component-node name=tdnn1.batchnorm component=tdnn1.batchnorm input=tdnn1.relu input-dim=1024 output-dim=1024
component-node name=tdnn1.dropout component=tdnn1.dropout input=tdnn1.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.linear component=tdnnf2.linear input=tdnn1.dropout input-dim=1024 output-dim=128
component-node name=tdnnf2.affine component=tdnnf2.affine input=tdnnf2.linear input-dim=128 output-dim=1024
component-node name=tdnnf2.relu component=tdnnf2.relu input=tdnnf2.affine input-dim=1024 output-dim=1024
component-node name=tdnnf2.batchnorm component=tdnnf2.batchnorm input=tdnnf2.relu input-dim=1024 output-dim=1024
component-node name=tdnnf2.dropout component=tdnnf2.dropout input=tdnnf2.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.noop component=tdnnf2.noop input=Sum(Scale(0.66, tdnn1.dropout), tdnnf2.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf3.linear component=tdnnf3.linear input=tdnnf2.noop input-dim=1024 output-dim=128
component-node name=tdnnf3.affine component=tdnnf3.affine input=tdnnf3.linear input-dim=128 output-dim=1024
component-node name=tdnnf3.relu component=tdnnf3.relu input=tdnnf3.affine input-dim=1024 output-dim=1024
component-node name=tdnnf3.batchnorm component=tdnnf3.batchnorm input=tdnnf3.relu input-dim=1024 output-dim=1024
component-node name=tdnnf3.dropout component=tdnnf3.dropout input=tdnnf3.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf3.noop component=tdnnf3.noop input=Sum(Scale(0.66, tdnnf2.noop), tdnnf3.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf4.linear component=tdnnf4.linear input=tdnnf3.noop input-dim=1024 output-dim=128
component-node name=tdnnf4.affine component=tdnnf4.affine input=tdnnf4.linear input-dim=128 output-dim=1024
component-node name=tdnnf4.relu component=tdnnf4.relu input=tdnnf4.affine input-dim=1024 output-dim=1024
component-node name=tdnnf4.batchnorm component=tdnnf4.batchnorm input=tdnnf4.relu input-dim=1024 output-dim=1024
component-node name=tdnnf4.dropout component=tdnnf4.dropout input=tdnnf4.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf4.noop component=tdnnf4.noop input=Sum(Scale(0.66, tdnnf3.noop), tdnnf4.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf5.linear component=tdnnf5.linear input=tdnnf4.noop input-dim=1024 output-dim=128
component-node name=tdnnf5.affine component=tdnnf5.affine input=tdnnf5.linear input-dim=128 output-dim=1024
component-node name=tdnnf5.relu component=tdnnf5.relu input=tdnnf5.affine input-dim=1024 output-dim=1024
component-node name=tdnnf5.batchnorm component=tdnnf5.batchnorm input=tdnnf5.relu input-dim=1024 output-dim=1024
component-node name=tdnnf5.dropout component=tdnnf5.dropout input=tdnnf5.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf5.noop component=tdnnf5.noop input=Sum(Scale(0.66, tdnnf4.noop), tdnnf5.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf6.linear component=tdnnf6.linear input=tdnnf5.noop input-dim=1024 output-dim=128
component-node name=tdnnf6.affine component=tdnnf6.affine input=tdnnf6.linear input-dim=128 output-dim=1024
component-node name=tdnnf6.relu component=tdnnf6.relu input=tdnnf6.affine input-dim=1024 output-dim=1024
component-node name=tdnnf6.batchnorm component=tdnnf6.batchnorm input=tdnnf6.relu input-dim=1024 output-dim=1024
component-node name=tdnnf6.dropout component=tdnnf6.dropout input=tdnnf6.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf6.noop component=tdnnf6.noop input=Sum(Scale(0.66, tdnnf5.noop), tdnnf6.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf7.linear component=tdnnf7.linear input=tdnnf6.noop input-dim=1024 output-dim=128
component-node name=tdnnf7.affine component=tdnnf7.affine input=tdnnf7.linear input-dim=128 output-dim=1024
component-node name=tdnnf7.relu component=tdnnf7.relu input=tdnnf7.affine input-dim=1024 output-dim=1024
component-node name=tdnnf7.batchnorm component=tdnnf7.batchnorm input=tdnnf7.relu input-dim=1024 output-dim=1024
component-node name=tdnnf7.dropout component=tdnnf7.dropout input=tdnnf7.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf7.noop component=tdnnf7.noop input=Sum(Scale(0.66, tdnnf6.noop), tdnnf7.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf8.linear component=tdnnf8.linear input=tdnnf7.noop input-dim=1024 output-dim=128
component-node name=tdnnf8.affine component=tdnnf8.affine input=tdnnf8.linear input-dim=128 output-dim=1024
component-node name=tdnnf8.relu component=tdnnf8.relu input=tdnnf8.affine input-dim=1024 output-dim=1024
component-node name=tdnnf8.batchnorm component=tdnnf8.batchnorm input=tdnnf8.relu input-dim=1024 output-dim=1024
component-node name=tdnnf8.dropout component=tdnnf8.dropout input=tdnnf8.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf8.noop component=tdnnf8.noop input=Sum(Scale(0.66, tdnnf7.noop), tdnnf8.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf9.linear component=tdnnf9.linear input=tdnnf8.noop input-dim=1024 output-dim=128
component-node name=tdnnf9.affine component=tdnnf9.affine input=tdnnf9.linear input-dim=128 output-dim=1024
component-node name=tdnnf9.relu component=tdnnf9.relu input=tdnnf9.affine input-dim=1024 output-dim=1024
component-node name=tdnnf9.batchnorm component=tdnnf9.batchnorm input=tdnnf9.relu input-dim=1024 output-dim=1024
component-node name=tdnnf9.dropout component=tdnnf9.dropout input=tdnnf9.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf9.noop component=tdnnf9.noop input=Sum(Scale(0.66, tdnnf8.noop), tdnnf9.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf10.linear component=tdnnf10.linear input=tdnnf9.noop input-dim=1024 output-dim=128
component-node name=tdnnf10.affine component=tdnnf10.affine input=tdnnf10.linear input-dim=128 output-dim=1024
component-node name=tdnnf10.relu component=tdnnf10.relu input=tdnnf10.affine input-dim=1024 output-dim=1024
component-node name=tdnnf10.batchnorm component=tdnnf10.batchnorm input=tdnnf10.relu input-dim=1024 output-dim=1024
component-node name=tdnnf10.dropout component=tdnnf10.dropout input=tdnnf10.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf10.noop component=tdnnf10.noop input=Sum(Scale(0.66, tdnnf9.noop), tdnnf10.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf11.linear component=tdnnf11.linear input=tdnnf10.noop input-dim=1024 output-dim=128
component-node name=tdnnf11.affine component=tdnnf11.affine input=tdnnf11.linear input-dim=128 output-dim=1024
component-node name=tdnnf11.relu component=tdnnf11.relu input=tdnnf11.affine input-dim=1024 output-dim=1024
component-node name=tdnnf11.batchnorm component=tdnnf11.batchnorm input=tdnnf11.relu input-dim=1024 output-dim=1024
component-node name=tdnnf11.dropout component=tdnnf11.dropout input=tdnnf11.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf11.noop component=tdnnf11.noop input=Sum(Scale(0.66, tdnnf10.noop), tdnnf11.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf12.linear component=tdnnf12.linear input=tdnnf11.noop input-dim=1024 output-dim=128
component-node name=tdnnf12.affine component=tdnnf12.affine input=tdnnf12.linear input-dim=128 output-dim=1024
component-node name=tdnnf12.relu component=tdnnf12.relu input=tdnnf12.affine input-dim=1024 output-dim=1024
component-node name=tdnnf12.batchnorm component=tdnnf12.batchnorm input=tdnnf12.relu input-dim=1024 output-dim=1024
component-node name=tdnnf12.dropout component=tdnnf12.dropout input=tdnnf12.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf12.noop component=tdnnf12.noop input=Sum(Scale(0.66, tdnnf11.noop), tdnnf12.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf13.linear component=tdnnf13.linear input=tdnnf12.noop input-dim=1024 output-dim=128
component-node name=tdnnf13.affine component=tdnnf13.affine input=tdnnf13.linear input-dim=128 output-dim=1024
component-node name=tdnnf13.relu component=tdnnf13.relu input=tdnnf13.affine input-dim=1024 output-dim=1024
component-node name=tdnnf13.batchnorm component=tdnnf13.batchnorm input=tdnnf13.relu input-dim=1024 output-dim=1024
component-node name=tdnnf13.dropout component=tdnnf13.dropout input=tdnnf13.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf13.noop component=tdnnf13.noop input=Sum(Scale(0.66, tdnnf12.noop), tdnnf13.dropout) input-dim=1024 output-dim=1024
component-node name=prefinal-l component=prefinal-l input=tdnnf13.noop input-dim=1024 output-dim=256
component-node name=prefinal-chain.affine component=prefinal-chain.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-chain.relu component=prefinal-chain.relu input=prefinal-chain.affine input-dim=1024 output-dim=1024
component-node name=prefinal-chain.batchnorm1 component=prefinal-chain.batchnorm1 input=prefinal-chain.relu input-dim=1024 output-dim=1024
component-node name=prefinal-chain.linear component=prefinal-chain.linear input=prefinal-chain.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-chain.batchnorm2 component=prefinal-chain.batchnorm2 input=prefinal-chain.linear input-dim=256 output-dim=256
component-node name=output.affine component=output.affine input=prefinal-chain.batchnorm2 input-dim=256 output-dim=2824
output-node name=output input=output.affine dim=2824 objective=linear
component-node name=prefinal-xent.affine component=prefinal-xent.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-xent.relu component=prefinal-xent.relu input=prefinal-xent.affine input-dim=1024 output-dim=1024
component-node name=prefinal-xent.batchnorm1 component=prefinal-xent.batchnorm1 input=prefinal-xent.relu input-dim=1024 output-dim=1024
component-node name=prefinal-xent.linear component=prefinal-xent.linear input=prefinal-xent.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-xent.batchnorm2 component=prefinal-xent.batchnorm2 input=prefinal-xent.linear input-dim=256 output-dim=256
component-node name=output-xent.affine component=output-xent.affine input=prefinal-xent.batchnorm2 input-dim=256 output-dim=2824
component-node name=output-xent.log-softmax component=output-xent.log-softmax input=output-xent.affine input-dim=2824 output-dim=2824
output-node name=output-xent input=output-xent.log-softmax dim=2824 objective=linear
component name=lda type=FixedAffineComponent, input-dim=220, output-dim=220, linear-params-rms=0.005753, bias-{mean,stddev}=-0.001002,0.01283
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=220, output-dim=1024, learning-rate=0.00019834, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.02021, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.08,0.08,0.09 0.09,0.09,0.27,0.36,0.45 0.56,0.64,0.68,1.0), mean=0.256, stddev=0.155], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.38,0.40,0.41,0.43 0.44,0.48,0.61,0.75,0.86 0.98,1.0,1.0,1.1), mean=0.626, stddev=0.163], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.17,0.18,0.19 0.21,0.26,0.43,0.83,1.1 1.2,1.4,1.5,1.8), mean=0.547, stddev=0.344], bias-{mean,stddev}=0.004181,0.06363, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=3.23e+06, self-repaired-proportion=0.450677, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,3e-06,0.02,0.06,0.08 0.11,0.14,0.17,0.27), mean=0.0337, stddev=0.0405], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0.001,0.44,0.92,0.98 1.0,1.0,1.0,1.0), mean=0.452, stddev=0.404], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.04,0.05,0.05 0.05,0.06,0.09,0.14,0.19 0.22,0.27,0.30,0.41), mean=0.107, stddev=0.0573], oderiv-count=4.71616e+06
component name=tdnn1.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=46011.6, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,5e-06,0.02,0.06,0.08 0.11,0.13,0.16,0.25), mean=0.0323, stddev=0.0381], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0.0002,0.02,0.04,0.05 0.05,0.06,0.06,0.10), mean=0.0229, stddev=0.0205]
component name=tdnn1.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf2.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.00019834, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.01488, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.67,0.67,0.67,0.67 0.67,0.67,0.67,0.67,0.67 0.67,0.67,0.67,0.67), mean=0.673, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.10,0.10,0.11 0.11,0.12,0.16,0.19,0.22 0.25,0.28,0.30,0.34), mean=0.162, stddev=0.0453], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.67,0.67,0.67,0.67 0.67,0.67,0.67,0.67,0.67 0.67,0.67,0.67,0.67), mean=0.673, stddev=0.000173], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.00019834, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.01333, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.10,0.11,0.11 0.12,0.14,0.19,0.26,0.30 0.33,0.36,0.40,0.42), mean=0.202, stddev=0.0677], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.37,0.38,0.39,0.39 0.40,0.41,0.42,0.45,0.45 0.46,0.47,0.48,0.49), mean=0.426, stddev=0.0218], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.11,0.12,0.13 0.14,0.16,0.24,0.56,0.75 0.85,0.93,0.97,1.2), mean=0.353, stddev=0.239], bias-{mean,stddev}=-0.02741,0.09812, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=2.99e+06, self-repaired-proportion=0.00172668, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.004,0.007,0.01 0.02,0.04,0.08,0.11,0.13 0.14,0.16,0.17,0.23), mean=0.0775, stddev=0.0393], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.07,0.09,0.14 0.19,0.27,0.44,0.68,0.80 0.86,0.89,0.90,0.95), mean=0.468, stddev=0.219], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.008,0.01,0.01,0.01 0.01,0.02,0.02,0.03,0.04 0.04,0.05,0.05,0.08), mean=0.0228, stddev=0.00932], oderiv-count=4.68621e+06
component name=tdnnf2.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=45499.6, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0008,0.004,0.007,0.01 0.02,0.04,0.08,0.11,0.12 0.14,0.15,0.16,0.22), mean=0.0761, stddev=0.0378], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.007,0.02,0.03,0.05 0.07,0.08,0.11,0.14,0.15 0.16,0.18,0.18,0.21), mean=0.112, stddev=0.0339]
component name=tdnnf2.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf2.noop type=NoOpComponent, dim=1024
component name=tdnnf3.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.00019834, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.0121, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.55,0.55,0.55,0.55 0.55,0.55,0.55,0.55,0.55 0.55,0.55,0.55,0.55), mean=0.548, stddev=0.000828], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.09,0.09,0.10 0.10,0.11,0.13,0.16,0.17 0.18,0.19,0.20,0.23), mean=0.134, stddev=0.0258], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.53,0.53,0.53,0.54 0.54,0.54,0.55,0.55,0.56 0.56,0.56,0.56,0.57), mean=0.547, stddev=0.00689], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.00019834, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.01108, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.12,0.12,0.13 0.13,0.15,0.17,0.20,0.22 0.23,0.25,0.25,0.31), mean=0.174, stddev=0.0329], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.30,0.31,0.32,0.32 0.33,0.34,0.35,0.37,0.38 0.38,0.39,0.39,0.40), mean=0.354, stddev=0.0177], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.12,0.12,0.13 0.14,0.17,0.25,0.46,0.59 0.67,0.72,0.77,0.82), mean=0.31, stddev=0.172], bias-{mean,stddev}=-0.01758,0.09349, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=2.81e+06, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.02,0.02,0.03 0.04,0.05,0.09,0.13,0.15 0.17,0.19,0.20,0.25), mean=0.0911, stddev=0.0418], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.13,0.15,0.20 0.24,0.30,0.47,0.63,0.73 0.78,0.83,0.84,0.90), mean=0.471, stddev=0.177], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.008,0.008,0.009 0.009,0.01,0.01,0.02,0.02 0.02,0.02,0.03,0.05), mean=0.0135, stddev=0.00436], oderiv-count=4.63315e+06
component name=tdnnf3.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=44987.6, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.02,0.02,0.03 0.04,0.05,0.09,0.12,0.14 0.16,0.18,0.19,0.24), mean=0.0898, stddev=0.0398], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.07,0.07,0.09 0.10,0.11,0.14,0.16,0.17 0.18,0.19,0.20,0.23), mean=0.136, stddev=0.0271]
component name=tdnnf3.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf3.noop type=NoOpComponent, dim=1024
component name=tdnnf4.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.00019834, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.01035, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.47,0.47,0.47,0.47 0.47,0.47,0.47,0.47,0.47 0.47,0.47,0.47,0.47), mean=0.468, stddev=0.00044], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.09,0.09,0.09 0.10,0.10,0.11,0.13,0.14 0.14,0.15,0.16,0.21), mean=0.116, stddev=0.0163], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.46,0.46,0.46,0.46 0.46,0.47,0.47,0.47,0.47 0.47,0.48,0.48,0.48), mean=0.468, stddev=0.00373], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.00019834, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.01033, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.11,0.12,0.13 0.13,0.14,0.16,0.18,0.20 0.21,0.22,0.22,0.26), mean=0.163, stddev=0.0255], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.29,0.30,0.30,0.30 0.31,0.32,0.33,0.34,0.35 0.36,0.36,0.38,0.38), mean=0.33, stddev=0.0165], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.11,0.12,0.13 0.14,0.16,0.23,0.43,0.54 0.61,0.67,0.71,0.79), mean=0.292, stddev=0.156], bias-{mean,stddev}=-0.009499,0.0965, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=1.01e+06, self-repaired-proportion=0.0078125, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-06,0.01,0.02,0.03 0.04,0.05,0.09,0.13,0.16 0.19,0.21,0.22,0.31), mean=0.0947, stddev=0.0473], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.10,0.13,0.19 0.23,0.30,0.46,0.63,0.74 0.80,0.85,0.87,0.97), mean=0.471, stddev=0.186], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.01,0.01,0.01 0.02,0.02,0.02,0.03,0.03 0.03,0.04,0.05,0.10), mean=0.0218, stddev=0.00754], oderiv-count=1.57517e+06
component name=tdnnf4.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=14995.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(7e-07,0.01,0.02,0.03 0.04,0.05,0.09,0.13,0.15 0.18,0.20,0.21,0.29), mean=0.0931, stddev=0.0449], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.05,0.07,0.09 0.11,0.12,0.14,0.16,0.17 0.18,0.19,0.20,0.24), mean=0.14, stddev=0.0288]
component name=tdnnf4.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf4.noop type=NoOpComponent, dim=1024
component name=tdnnf5.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.00019834, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=0, linear-params-rms=0.01114, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.36,0.36,0.36,0.36 0.36,0.36,0.36,0.36,0.36 0.36,0.36,0.36,0.36), mean=0.357, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.10,0.10,0.11 0.11,0.12,0.13,0.14,0.14 0.15,0.15,0.15,0.17), mean=0.125, stddev=0.0123], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.36,0.36,0.36,0.36 0.36,0.36,0.36,0.36,0.36 0.36,0.36,0.36,0.36), mean=0.357, stddev=0], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.00019834, l2-regularize=0.008, max-change=0.75, time-offsets=0, linear-params-rms=0.01212, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.09,0.10,0.10 0.11,0.12,0.13,0.15,0.16 0.17,0.18,0.18,0.22), mean=0.135, stddev=0.0213], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.34,0.34,0.34,0.35 0.36,0.37,0.39,0.40,0.42 0.42,0.43,0.43,0.44), mean=0.387, stddev=0.0209], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.19,0.19,0.19,0.20 0.22,0.24,0.32,0.48,0.58 0.62,0.67,0.69,0.74), mean=0.362, stddev=0.138], bias-{mean,stddev}=-0.008392,0.08802, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.09e+05, self-repaired-proportion=0.0215806, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(6e-07,0.002,0.004,0.009 0.02,0.03,0.06,0.10,0.13 0.16,0.18,0.20,0.25), mean=0.0666, stddev=0.046], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-05,0.03,0.06,0.09 0.15,0.23,0.43,0.69,0.80 0.86,0.90,0.92,0.99), mean=0.452, stddev=0.236], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.02,0.02,0.02 0.02,0.02,0.03,0.04,0.05 0.06,0.07,0.08,0.10), mean=0.0342, stddev=0.0137], oderiv-count=1.48493e+06
component name=tdnnf5.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=14995.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-07,0.002,0.004,0.008 0.02,0.03,0.06,0.10,0.12 0.15,0.17,0.19,0.24), mean=0.0647, stddev=0.0437], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(5e-05,0.01,0.02,0.04 0.05,0.07,0.09,0.11,0.12 0.13,0.14,0.14,0.16), mean=0.091, stddev=0.0275]
component name=tdnnf5.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf5.noop type=NoOpComponent, dim=1024
component name=tdnnf6.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.00019834, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.00992, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.45,0.45,0.45,0.45 0.45,0.45,0.45,0.45,0.45 0.45,0.45,0.45,0.45), mean=0.449, stddev=0.000122], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.09,0.09,0.09 0.10,0.10,0.11,0.12,0.13 0.13,0.14,0.14,0.17), mean=0.111, stddev=0.0128], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.45,0.45,0.45,0.45 0.45,0.45,0.45,0.45,0.45 0.45,0.45,0.45,0.45), mean=0.449, stddev=0], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.00019834, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.01046, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.12,0.13,0.13 0.14,0.15,0.16,0.18,0.19 0.20,0.21,0.22,0.25), mean=0.166, stddev=0.0214], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.29,0.30,0.30,0.31 0.31,0.32,0.33,0.35,0.36 0.36,0.37,0.37,0.41), mean=0.334, stddev=0.0166], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.12,0.12,0.13 0.14,0.17,0.25,0.43,0.54 0.61,0.66,0.68,0.72), mean=0.298, stddev=0.152], bias-{mean,stddev}=-0.01956,0.09129, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.39e+05, self-repaired-proportion=0.000980438, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.02,0.02,0.03 0.04,0.05,0.08,0.12,0.15 0.17,0.19,0.21,0.31), mean=0.0885, stddev=0.0445], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.11,0.14,0.18 0.23,0.30,0.45,0.61,0.69 0.74,0.80,0.83,0.92), mean=0.452, stddev=0.171], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.01,0.01,0.01 0.01,0.02,0.02,0.03,0.03 0.04,0.04,0.04,0.07), mean=0.0223, stddev=0.00716], oderiv-count=1.44013e+06
component name=tdnnf6.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=14483.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.02,0.02,0.03 0.04,0.05,0.08,0.12,0.14 0.16,0.19,0.20,0.29), mean=0.0874, stddev=0.0425], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.06,0.07,0.09 0.10,0.12,0.14,0.16,0.17 0.18,0.19,0.19,0.21), mean=0.136, stddev=0.027]
component name=tdnnf6.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf6.noop type=NoOpComponent, dim=1024
component name=tdnnf7.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.00019834, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01002, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.45,0.45,0.45,0.45 0.45,0.45,0.45,0.45,0.45 0.45,0.45,0.45,0.45), mean=0.454, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.09,0.09,0.09 0.10,0.10,0.11,0.12,0.13 0.13,0.14,0.15,0.20), mean=0.113, stddev=0.0131], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.45,0.45,0.45,0.45 0.45,0.45,0.45,0.45,0.45 0.45,0.45,0.45,0.45), mean=0.454, stddev=0.000122], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.00019834, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.01041, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.12,0.13,0.13 0.14,0.15,0.16,0.18,0.19 0.20,0.21,0.22,0.26), mean=0.165, stddev=0.0207], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.29,0.30,0.30 0.31,0.32,0.33,0.35,0.36 0.36,0.37,0.37,0.39), mean=0.333, stddev=0.0188], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.12,0.12,0.13 0.15,0.17,0.25,0.43,0.53 0.59,0.65,0.66,0.70), mean=0.299, stddev=0.146], bias-{mean,stddev}=-0.01688,0.09921, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.43e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.02,0.02,0.02 0.03,0.05,0.08,0.13,0.15 0.19,0.21,0.23,0.29), mean=0.0899, stddev=0.0492], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.12,0.14,0.17 0.20,0.28,0.44,0.63,0.72 0.77,0.83,0.85,0.94), mean=0.456, stddev=0.187], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.01,0.01,0.01 0.01,0.02,0.02,0.03,0.03 0.04,0.04,0.05,0.07), mean=0.0219, stddev=0.00785], oderiv-count=1.42682e+06
component name=tdnnf7.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=13971.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.02,0.02,0.03 0.03,0.05,0.08,0.12,0.15 0.18,0.21,0.22,0.28), mean=0.0882, stddev=0.0467], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.06,0.07,0.08 0.10,0.11,0.14,0.16,0.17 0.17,0.18,0.19,0.26), mean=0.133, stddev=0.0274]
component name=tdnnf7.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf7.noop type=NoOpComponent, dim=1024
component name=tdnnf8.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.00019834, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.009897, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.45,0.45,0.45,0.45 0.45,0.45,0.45,0.45,0.45 0.45,0.45,0.45,0.45), mean=0.448, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.08,0.09,0.09 0.09,0.10,0.11,0.12,0.13 0.14,0.14,0.15,0.18), mean=0.111, stddev=0.0142], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.45,0.45,0.45,0.45 0.45,0.45,0.45,0.45,0.45 0.45,0.45,0.45,0.45), mean=0.448, stddev=0], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.00019834, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.01033, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.12,0.13,0.13 0.14,0.15,0.16,0.18,0.19 0.20,0.20,0.21,0.23), mean=0.164, stddev=0.0197], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.27,0.28,0.29,0.30 0.31,0.32,0.33,0.34,0.35 0.36,0.37,0.37,0.39), mean=0.33, stddev=0.019], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.12,0.12,0.13 0.15,0.17,0.25,0.42,0.52 0.59,0.63,0.66,0.73), mean=0.298, stddev=0.144], bias-{mean,stddev}=-0.02102,0.09999, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.13e+05, self-repaired-proportion=0.00418139, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-06,0.01,0.01,0.02 0.03,0.04,0.08,0.12,0.15 0.18,0.21,0.23,0.27), mean=0.0867, stddev=0.0489], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.09,0.10,0.15 0.19,0.27,0.44,0.61,0.70 0.77,0.83,0.86,0.90), mean=0.445, stddev=0.19], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.01,0.01,0.01 0.01,0.02,0.02,0.03,0.03 0.04,0.05,0.05,0.08), mean=0.0222, stddev=0.00871], oderiv-count=1.36858e+06
component name=tdnnf8.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=13459.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-06,0.01,0.01,0.02 0.03,0.05,0.08,0.12,0.15 0.18,0.20,0.22,0.26), mean=0.0851, stddev=0.0463], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.05,0.06,0.08 0.09,0.11,0.13,0.16,0.17 0.18,0.19,0.19,0.27), mean=0.131, stddev=0.0307]
component name=tdnnf8.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf8.noop type=NoOpComponent, dim=1024
component name=tdnnf9.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.00019834, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.009946, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.45,0.45,0.45,0.45 0.45,0.45,0.45,0.45,0.45 0.45,0.45,0.45,0.45), mean=0.45, stddev=0.000743], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.08,0.09,0.09 0.09,0.10,0.11,0.12,0.13 0.14,0.14,0.15,0.19), mean=0.112, stddev=0.0144], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.43,0.44,0.44,0.44 0.44,0.45,0.45,0.45,0.46 0.46,0.46,0.46,0.47), mean=0.45, stddev=0.00635], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.00019834, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.01034, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.13,0.13,0.13 0.14,0.15,0.16,0.18,0.19 0.19,0.21,0.21,0.24), mean=0.164, stddev=0.0187], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.29,0.30,0.30 0.31,0.31,0.33,0.35,0.36 0.36,0.37,0.37,0.39), mean=0.33, stddev=0.0185], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.12,0.13,0.13 0.15,0.17,0.25,0.42,0.52 0.59,0.63,0.67,0.73), mean=0.298, stddev=0.144], bias-{mean,stddev}=-0.0195,0.09834, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.67e+05, self-repaired-proportion=0.00312649, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-05,0.01,0.01,0.02 0.03,0.04,0.08,0.12,0.15 0.18,0.21,0.22,0.30), mean=0.0865, stddev=0.0483], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0004,0.08,0.10,0.15 0.19,0.27,0.44,0.62,0.70 0.77,0.82,0.86,0.93), mean=0.446, stddev=0.19], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.009,0.01,0.01,0.01 0.01,0.02,0.02,0.03,0.03 0.04,0.04,0.05,0.07), mean=0.0214, stddev=0.0083], oderiv-count=1.28109e+06
component name=tdnnf9.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=12947.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-07,0.01,0.01,0.02 0.03,0.05,0.08,0.12,0.15 0.17,0.20,0.21,0.28), mean=0.0849, stddev=0.0459], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(6e-05,0.05,0.06,0.08 0.09,0.11,0.13,0.15,0.16 0.17,0.18,0.18,0.20), mean=0.129, stddev=0.0294]
component name=tdnnf9.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf9.noop type=NoOpComponent, dim=1024
component name=tdnnf10.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.00019834, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.009947, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.45,0.45,0.45,0.45 0.45,0.45,0.45,0.45,0.45 0.45,0.45,0.45,0.45), mean=0.45, stddev=0.000299], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.09,0.09,0.09 0.10,0.10,0.11,0.12,0.13 0.14,0.14,0.15,0.19), mean=0.112, stddev=0.0139], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.44,0.44,0.44,0.45 0.45,0.45,0.45,0.45,0.45 0.45,0.46,0.46,0.46), mean=0.45, stddev=0.0025], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.00019834, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.01036, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.13,0.13,0.14 0.14,0.15,0.16,0.18,0.19 0.20,0.21,0.21,0.23), mean=0.165, stddev=0.0186], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.29,0.29,0.30 0.31,0.31,0.33,0.35,0.36 0.36,0.37,0.37,0.39), mean=0.331, stddev=0.0195], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.12,0.12,0.13 0.15,0.17,0.25,0.43,0.52 0.59,0.64,0.67,0.74), mean=0.298, stddev=0.145], bias-{mean,stddev}=-0.01109,0.09855, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.35e+05, self-repaired-proportion=0.000976562, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.01,0.02,0.03 0.03,0.05,0.08,0.13,0.16 0.18,0.21,0.23,0.29), mean=0.0907, stddev=0.0496], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.10,0.13,0.16 0.21,0.28,0.45,0.64,0.72 0.78,0.84,0.87,0.92), mean=0.461, stddev=0.191], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.01,0.01,0.01 0.01,0.01,0.02,0.03,0.03 0.03,0.04,0.04,0.07), mean=0.0203, stddev=0.0074], oderiv-count=1.27507e+06
component name=tdnnf10.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=12435.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0006,0.01,0.02,0.03 0.03,0.05,0.08,0.13,0.16 0.18,0.20,0.22,0.28), mean=0.0892, stddev=0.0471], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.008,0.05,0.07,0.08 0.09,0.11,0.13,0.16,0.17 0.17,0.18,0.18,0.21), mean=0.131, stddev=0.0287]
component name=tdnnf10.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf10.noop type=NoOpComponent, dim=1024
component name=tdnnf11.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.00019834, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.009986, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.45,0.45,0.45,0.45 0.45,0.45,0.45,0.45,0.45 0.45,0.45,0.45,0.45), mean=0.452, stddev=0.00061], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.09,0.09,0.09 0.10,0.10,0.11,0.12,0.13 0.14,0.15,0.15,0.19), mean=0.112, stddev=0.0142], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.44,0.44,0.44,0.44 0.45,0.45,0.45,0.46,0.46 0.46,0.46,0.46,0.46), mean=0.452, stddev=0.00504], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.00019834, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.0104, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.13,0.13,0.14 0.14,0.15,0.17,0.18,0.19 0.19,0.20,0.20,0.22), mean=0.166, stddev=0.0172], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.29,0.30,0.30,0.30 0.31,0.32,0.33,0.35,0.36 0.37,0.38,0.38,0.40), mean=0.332, stddev=0.0199], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.12,0.13,0.14 0.15,0.17,0.25,0.43,0.53 0.60,0.64,0.67,0.74), mean=0.299, stddev=0.145], bias-{mean,stddev}=-0.02042,0.1002, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.34e+05, self-repaired-proportion=0.00360551, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0008,0.01,0.01,0.02 0.03,0.04,0.08,0.13,0.16 0.18,0.20,0.22,0.27), mean=0.0859, stddev=0.0489], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.08,0.10,0.14 0.18,0.26,0.44,0.62,0.72 0.78,0.83,0.85,0.93), mean=0.442, stddev=0.196], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.009,0.01,0.01,0.01 0.01,0.01,0.02,0.03,0.03 0.03,0.04,0.05,0.06), mean=0.0206, stddev=0.00772], oderiv-count=1.24499e+06
component name=tdnnf11.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11923.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0005,0.01,0.01,0.02 0.03,0.04,0.08,0.12,0.15 0.17,0.20,0.21,0.26), mean=0.0843, stddev=0.0465], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.008,0.05,0.06,0.07 0.09,0.10,0.13,0.15,0.16 0.17,0.18,0.18,0.19), mean=0.126, stddev=0.0292]
component name=tdnnf11.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf11.noop type=NoOpComponent, dim=1024
component name=tdnnf12.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.00019834, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01015, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.46,0.46,0.46,0.46 0.46,0.46,0.46,0.46,0.46 0.46,0.46,0.46,0.46), mean=0.459, stddev=0.000299], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.09,0.09,0.09 0.10,0.10,0.11,0.12,0.13 0.14,0.15,0.16,0.21), mean=0.114, stddev=0.015], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.45,0.45,0.45,0.45 0.46,0.46,0.46,0.46,0.46 0.46,0.46,0.46,0.47), mean=0.459, stddev=0.00248], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.00019834, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.01052, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.13,0.14,0.14 0.15,0.15,0.17,0.18,0.19 0.19,0.20,0.21,0.23), mean=0.167, stddev=0.0162], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.29,0.30,0.30,0.31 0.31,0.32,0.34,0.35,0.36 0.37,0.37,0.37,0.39), mean=0.336, stddev=0.0186], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.12,0.13,0.14 0.15,0.17,0.26,0.43,0.53 0.60,0.65,0.68,0.71), mean=0.303, stddev=0.146], bias-{mean,stddev}=-0.01669,0.09694, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.55e+05, self-repaired-proportion=0.00127475, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.01,0.02,0.02 0.03,0.05,0.08,0.13,0.16 0.18,0.21,0.22,0.26), mean=0.0883, stddev=0.0484], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.09,0.12,0.16 0.20,0.28,0.45,0.63,0.71 0.79,0.83,0.85,0.93), mean=0.452, stddev=0.19], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.01,0.01,0.01 0.01,0.01,0.02,0.02,0.03 0.03,0.04,0.04,0.06), mean=0.0195, stddev=0.00615], oderiv-count=1.1401e+06
component name=tdnnf12.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11411.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.01,0.02,0.03 0.03,0.05,0.08,0.12,0.15 0.17,0.20,0.21,0.25), mean=0.0868, stddev=0.0459], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.06,0.07,0.08 0.09,0.11,0.13,0.15,0.16 0.17,0.18,0.18,0.20), mean=0.129, stddev=0.0269]
component name=tdnnf12.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf12.noop type=NoOpComponent, dim=1024
component name=tdnnf13.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.00019834, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01031, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.47,0.47,0.47,0.47 0.47,0.47,0.47,0.47,0.47 0.47,0.47,0.47,0.47), mean=0.467, stddev=0.00061], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.09,0.09,0.10 0.10,0.10,0.11,0.13,0.13 0.14,0.15,0.16,0.22), mean=0.116, stddev=0.0144], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.45,0.45,0.46,0.46 0.46,0.46,0.47,0.47,0.47 0.48,0.48,0.48,0.48), mean=0.467, stddev=0.00501], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.00019834, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.01051, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.13,0.14,0.14 0.15,0.15,0.17,0.18,0.19 0.19,0.20,0.20,0.23), mean=0.167, stddev=0.0152], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.30,0.30,0.31 0.31,0.32,0.33,0.35,0.36 0.37,0.38,0.38,0.38), mean=0.336, stddev=0.0187], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.13,0.13,0.14 0.15,0.18,0.26,0.44,0.52 0.58,0.63,0.66,0.70), mean=0.305, stddev=0.142], bias-{mean,stddev}=-0.01735,0.09577, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.79e+05, self-repaired-proportion=0.00189256, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.02,0.02,0.03 0.04,0.05,0.08,0.13,0.16 0.18,0.21,0.22,0.26), mean=0.092, stddev=0.0484], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.11,0.13,0.18 0.22,0.29,0.45,0.62,0.70 0.75,0.80,0.83,0.89), mean=0.454, stddev=0.177], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.009,0.01,0.01,0.01 0.01,0.01,0.02,0.02,0.02 0.03,0.03,0.03,0.06), mean=0.0182, stddev=0.0051], oderiv-count=1.1321e+06
component name=tdnnf13.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=10899.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.02,0.02,0.03 0.04,0.05,0.08,0.13,0.16 0.18,0.20,0.21,0.25), mean=0.0903, stddev=0.0459], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.06,0.07,0.08 0.10,0.11,0.14,0.16,0.17 0.17,0.18,0.19,0.21), mean=0.133, stddev=0.0272]
component name=tdnnf13.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf13.noop type=NoOpComponent, dim=1024
component name=prefinal-l type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.00019834, l2-regularize=0.008, max-change=0.75, params-rms=0.01336, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.43,0.43,0.43,0.43 0.43,0.43,0.43,0.43,0.43 0.43,0.43,0.43,0.43), mean=0.428, stddev=0.000559], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.18,0.19,0.19,0.19 0.20,0.20,0.21,0.22,0.23 0.23,0.24,0.24,0.26), mean=0.213, stddev=0.0116], params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.41,0.41,0.41,0.41 0.42,0.42,0.43,0.43,0.44 0.44,0.44,0.45,0.45), mean=0.428, stddev=0.00679], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=0.00019834, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.01033, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.12,0.13,0.14 0.15,0.15,0.17,0.18,0.18 0.19,0.19,0.20,0.21), mean=0.164, stddev=0.0161], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.30,0.30,0.31 0.31,0.32,0.33,0.34,0.35 0.35,0.36,0.36,0.36), mean=0.33, stddev=0.0137], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.12,0.12,0.13 0.15,0.17,0.26,0.43,0.51 0.57,0.60,0.63,0.84), mean=0.299, stddev=0.141], bias-{mean,stddev}=-0.01478,0.09438, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.54e+05, self-repaired-proportion=0.0120934, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-07,0.004,0.01,0.02 0.03,0.04,0.07,0.12,0.15 0.17,0.20,0.22,0.26), mean=0.0791, stddev=0.0484], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-05,0.05,0.11,0.14 0.19,0.25,0.43,0.65,0.74 0.80,0.87,0.89,0.95), mean=0.451, stddev=0.209], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.01,0.01,0.01 0.02,0.02,0.02,0.03,0.03 0.03,0.04,0.04,0.05), mean=0.0232, stddev=0.00658], oderiv-count=1.10016e+06
component name=prefinal-chain.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=10899.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-12,0.004,0.01,0.02 0.03,0.04,0.07,0.11,0.14 0.17,0.20,0.21,0.25), mean=0.0776, stddev=0.0461], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-07,0.02,0.06,0.07 0.08,0.09,0.12,0.13,0.14 0.15,0.15,0.16,0.18), mean=0.113, stddev=0.0258]
component name=prefinal-chain.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.00019834, l2-regularize=0.008, max-change=0.75, params-rms=0.01236, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.39,0.39,0.39,0.39 0.39,0.40,0.40,0.40,0.40 0.40,0.40,0.40,0.40), mean=0.396, stddev=0.000518], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.16,0.17,0.17 0.18,0.19,0.20,0.21,0.21 0.22,0.22,0.23,0.24), mean=0.197, stddev=0.0136], params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.37,0.37,0.37,0.38 0.38,0.39,0.40,0.40,0.41 0.41,0.42,0.42,0.42), mean=0.396, stddev=0.00919], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=10899.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-4e-08,-4e-08,-3e-08,-3e-08 -2e-08,-1e-08,1e-09,2e-08,2e-08 3e-08,4e-08,4e-08,5e-08), mean=1.68e-09, stddev=1.69e-08], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.46,0.47,0.47,0.48 0.49,0.50,0.52,0.54,0.55 0.57,0.57,0.58,0.60), mean=0.522, stddev=0.0251]
component name=output.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=2824, learning-rate=0.00019834, l2-regularize=0.002, max-change=1.5, linear-params-rms=0.01724, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0009,0.01,0.03,0.10 0.16,0.21,0.27,0.32,0.36 0.39,0.43,0.46,0.89), mean=0.262, stddev=0.0854], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.79,0.82,0.84,0.85 0.87,0.88,0.91,0.95,0.97 0.98,0.99,0.99,1.0), mean=0.915, stddev=0.0389], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.17,0.17,0.18,0.20 0.22,0.27,0.49,1.3,1.7 1.9,2.0,2.0,2.2), mean=0.728, stddev=0.555], bias-{mean,stddev}=0.0001374,0.04539, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=0.00019834, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.007608, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.08,0.08,0.09 0.09,0.10,0.12,0.14,0.14 0.15,0.16,0.16,0.27), mean=0.12, stddev=0.0189], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.21,0.22,0.22,0.22 0.23,0.23,0.24,0.25,0.26 0.26,0.27,0.28,0.34), mean=0.243, stddev=0.0129], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.09,0.10,0.10 0.11,0.14,0.20,0.30,0.36 0.40,0.43,0.45,0.83), mean=0.222, stddev=0.0999], bias-{mean,stddev}=-0.01659,0.09006, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.26e+05, self-repaired-proportion=0.0229794, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-08,0.004,0.005,0.008 0.01,0.02,0.05,0.10,0.13 0.15,0.17,0.19,0.28), mean=0.0584, stddev=0.0462], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-06,0.05,0.06,0.09 0.12,0.18,0.39,0.69,0.80 0.86,0.92,0.94,1.0), mean=0.428, stddev=0.252], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.005,0.006,0.006 0.007,0.008,0.01,0.02,0.02 0.02,0.02,0.02,0.03), mean=0.0126, stddev=0.00465], oderiv-count=1.1463e+06
component name=prefinal-xent.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=10899.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-07,0.003,0.005,0.008 0.01,0.02,0.04,0.09,0.12 0.14,0.16,0.18,0.26), mean=0.0564, stddev=0.0438], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-05,0.02,0.03,0.04 0.04,0.05,0.08,0.10,0.11 0.11,0.12,0.12,0.23), mean=0.0763, stddev=0.025]
component name=prefinal-xent.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.00019834, l2-regularize=0.008, max-change=0.75, params-rms=0.008255, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.26,0.26,0.26,0.26 0.26,0.26,0.26,0.26,0.26 0.26,0.26,0.26,0.26), mean=0.264, stddev=0.000122], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.10,0.10,0.11 0.11,0.12,0.13,0.14,0.15 0.16,0.17,0.17,0.21), mean=0.131, stddev=0.0164], params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.26,0.26,0.26,0.26 0.26,0.26,0.26,0.26,0.27 0.27,0.27,0.27,0.27), mean=0.264, stddev=0.00188], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=10899.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-4e-08,-3e-08,-2e-08,-2e-08 -1e-08,-1e-08,-1e-10,1e-08,1e-08 2e-08,2e-08,2e-08,4e-08), mean=-2.32e-10, stddev=1.14e-08], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.24,0.25,0.25,0.26 0.26,0.27,0.28,0.29,0.29 0.30,0.30,0.30,0.31), mean=0.276, stddev=0.0122]
component name=output-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=2824, learning-rate=0.000991701, l2-regularize=0.002, learning-rate-factor=5, max-change=1.5, linear-params-rms=0.03357, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.02,0.02,0.06 0.13,0.26,0.51,0.68,0.77 0.84,0.91,0.93,1.3), mean=0.484, stddev=0.233], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.6,1.6,1.7 1.7,1.7,1.8,1.8,1.9 1.9,1.9,1.9,1.9), mean=1.78, stddev=0.0694], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.19,0.20,0.21,0.24 0.28,0.38,0.99,2.6,3.2 3.4,3.5,3.5,3.6), mean=1.41, stddev=1.09], bias-{mean,stddev}=6.307e-09,0.06148, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-xent.log-softmax type=LogSoftmaxComponent, dim=2824, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,3e-07,4e-05,0.0001 0.0002,0.0004,0.0007,0.001,0.002 0.003,0.004,0.004,0.04), mean=0.00101, stddev=0.00117], oderiv-count=1.09562e+06
# Accounting: time=22 threads=1
# Ended (code 0) at Wed Jul 20 03:40:37 EDT 2022, elapsed time 22 seconds
