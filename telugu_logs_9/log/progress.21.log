# nnet3-am-info telugu_exp/chain_cleaned_1d/tdnn1d_sp/21.mdl && nnet3-show-progress --use-gpu=no telugu_exp/chain_cleaned_1d/tdnn1d_sp/20.mdl telugu_exp/chain_cleaned_1d/tdnn1d_sp/21.mdl 
# Started at Wed Jul 20 03:42:25 EDT 2022
#
nnet3-am-info telugu_exp/chain_cleaned_1d/tdnn1d_sp/21.mdl 
input-dim: 40
ivector-dim: 100
num-pdfs: 2824
prior-dimension: 0
# Nnet info follows.
left-context: 28
right-context: 28
num-parameters: 9032208
modulus: 1
input-node name=ivector dim=100
input-node name=input dim=40
component-node name=lda component=lda input=Append(Offset(input, -1), input, Offset(input, 1), ReplaceIndex(ivector, t, 0)) input-dim=220 output-dim=220
component-node name=tdnn1.affine component=tdnn1.affine input=lda input-dim=220 output-dim=1024
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=1024 output-dim=1024
component-node name=tdnn1.batchnorm component=tdnn1.batchnorm input=tdnn1.relu input-dim=1024 output-dim=1024
component-node name=tdnn1.dropout component=tdnn1.dropout input=tdnn1.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.linear component=tdnnf2.linear input=tdnn1.dropout input-dim=1024 output-dim=128
component-node name=tdnnf2.affine component=tdnnf2.affine input=tdnnf2.linear input-dim=128 output-dim=1024
component-node name=tdnnf2.relu component=tdnnf2.relu input=tdnnf2.affine input-dim=1024 output-dim=1024
component-node name=tdnnf2.batchnorm component=tdnnf2.batchnorm input=tdnnf2.relu input-dim=1024 output-dim=1024
component-node name=tdnnf2.dropout component=tdnnf2.dropout input=tdnnf2.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.noop component=tdnnf2.noop input=Sum(Scale(0.66, tdnn1.dropout), tdnnf2.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf3.linear component=tdnnf3.linear input=tdnnf2.noop input-dim=1024 output-dim=128
component-node name=tdnnf3.affine component=tdnnf3.affine input=tdnnf3.linear input-dim=128 output-dim=1024
component-node name=tdnnf3.relu component=tdnnf3.relu input=tdnnf3.affine input-dim=1024 output-dim=1024
component-node name=tdnnf3.batchnorm component=tdnnf3.batchnorm input=tdnnf3.relu input-dim=1024 output-dim=1024
component-node name=tdnnf3.dropout component=tdnnf3.dropout input=tdnnf3.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf3.noop component=tdnnf3.noop input=Sum(Scale(0.66, tdnnf2.noop), tdnnf3.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf4.linear component=tdnnf4.linear input=tdnnf3.noop input-dim=1024 output-dim=128
component-node name=tdnnf4.affine component=tdnnf4.affine input=tdnnf4.linear input-dim=128 output-dim=1024
component-node name=tdnnf4.relu component=tdnnf4.relu input=tdnnf4.affine input-dim=1024 output-dim=1024
component-node name=tdnnf4.batchnorm component=tdnnf4.batchnorm input=tdnnf4.relu input-dim=1024 output-dim=1024
component-node name=tdnnf4.dropout component=tdnnf4.dropout input=tdnnf4.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf4.noop component=tdnnf4.noop input=Sum(Scale(0.66, tdnnf3.noop), tdnnf4.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf5.linear component=tdnnf5.linear input=tdnnf4.noop input-dim=1024 output-dim=128
component-node name=tdnnf5.affine component=tdnnf5.affine input=tdnnf5.linear input-dim=128 output-dim=1024
component-node name=tdnnf5.relu component=tdnnf5.relu input=tdnnf5.affine input-dim=1024 output-dim=1024
component-node name=tdnnf5.batchnorm component=tdnnf5.batchnorm input=tdnnf5.relu input-dim=1024 output-dim=1024
component-node name=tdnnf5.dropout component=tdnnf5.dropout input=tdnnf5.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf5.noop component=tdnnf5.noop input=Sum(Scale(0.66, tdnnf4.noop), tdnnf5.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf6.linear component=tdnnf6.linear input=tdnnf5.noop input-dim=1024 output-dim=128
component-node name=tdnnf6.affine component=tdnnf6.affine input=tdnnf6.linear input-dim=128 output-dim=1024
component-node name=tdnnf6.relu component=tdnnf6.relu input=tdnnf6.affine input-dim=1024 output-dim=1024
component-node name=tdnnf6.batchnorm component=tdnnf6.batchnorm input=tdnnf6.relu input-dim=1024 output-dim=1024
component-node name=tdnnf6.dropout component=tdnnf6.dropout input=tdnnf6.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf6.noop component=tdnnf6.noop input=Sum(Scale(0.66, tdnnf5.noop), tdnnf6.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf7.linear component=tdnnf7.linear input=tdnnf6.noop input-dim=1024 output-dim=128
component-node name=tdnnf7.affine component=tdnnf7.affine input=tdnnf7.linear input-dim=128 output-dim=1024
component-node name=tdnnf7.relu component=tdnnf7.relu input=tdnnf7.affine input-dim=1024 output-dim=1024
component-node name=tdnnf7.batchnorm component=tdnnf7.batchnorm input=tdnnf7.relu input-dim=1024 output-dim=1024
component-node name=tdnnf7.dropout component=tdnnf7.dropout input=tdnnf7.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf7.noop component=tdnnf7.noop input=Sum(Scale(0.66, tdnnf6.noop), tdnnf7.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf8.linear component=tdnnf8.linear input=tdnnf7.noop input-dim=1024 output-dim=128
component-node name=tdnnf8.affine component=tdnnf8.affine input=tdnnf8.linear input-dim=128 output-dim=1024
component-node name=tdnnf8.relu component=tdnnf8.relu input=tdnnf8.affine input-dim=1024 output-dim=1024
component-node name=tdnnf8.batchnorm component=tdnnf8.batchnorm input=tdnnf8.relu input-dim=1024 output-dim=1024
component-node name=tdnnf8.dropout component=tdnnf8.dropout input=tdnnf8.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf8.noop component=tdnnf8.noop input=Sum(Scale(0.66, tdnnf7.noop), tdnnf8.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf9.linear component=tdnnf9.linear input=tdnnf8.noop input-dim=1024 output-dim=128
component-node name=tdnnf9.affine component=tdnnf9.affine input=tdnnf9.linear input-dim=128 output-dim=1024
component-node name=tdnnf9.relu component=tdnnf9.relu input=tdnnf9.affine input-dim=1024 output-dim=1024
component-node name=tdnnf9.batchnorm component=tdnnf9.batchnorm input=tdnnf9.relu input-dim=1024 output-dim=1024
component-node name=tdnnf9.dropout component=tdnnf9.dropout input=tdnnf9.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf9.noop component=tdnnf9.noop input=Sum(Scale(0.66, tdnnf8.noop), tdnnf9.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf10.linear component=tdnnf10.linear input=tdnnf9.noop input-dim=1024 output-dim=128
component-node name=tdnnf10.affine component=tdnnf10.affine input=tdnnf10.linear input-dim=128 output-dim=1024
component-node name=tdnnf10.relu component=tdnnf10.relu input=tdnnf10.affine input-dim=1024 output-dim=1024
component-node name=tdnnf10.batchnorm component=tdnnf10.batchnorm input=tdnnf10.relu input-dim=1024 output-dim=1024
component-node name=tdnnf10.dropout component=tdnnf10.dropout input=tdnnf10.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf10.noop component=tdnnf10.noop input=Sum(Scale(0.66, tdnnf9.noop), tdnnf10.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf11.linear component=tdnnf11.linear input=tdnnf10.noop input-dim=1024 output-dim=128
component-node name=tdnnf11.affine component=tdnnf11.affine input=tdnnf11.linear input-dim=128 output-dim=1024
component-node name=tdnnf11.relu component=tdnnf11.relu input=tdnnf11.affine input-dim=1024 output-dim=1024
component-node name=tdnnf11.batchnorm component=tdnnf11.batchnorm input=tdnnf11.relu input-dim=1024 output-dim=1024
component-node name=tdnnf11.dropout component=tdnnf11.dropout input=tdnnf11.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf11.noop component=tdnnf11.noop input=Sum(Scale(0.66, tdnnf10.noop), tdnnf11.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf12.linear component=tdnnf12.linear input=tdnnf11.noop input-dim=1024 output-dim=128
component-node name=tdnnf12.affine component=tdnnf12.affine input=tdnnf12.linear input-dim=128 output-dim=1024
component-node name=tdnnf12.relu component=tdnnf12.relu input=tdnnf12.affine input-dim=1024 output-dim=1024
component-node name=tdnnf12.batchnorm component=tdnnf12.batchnorm input=tdnnf12.relu input-dim=1024 output-dim=1024
component-node name=tdnnf12.dropout component=tdnnf12.dropout input=tdnnf12.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf12.noop component=tdnnf12.noop input=Sum(Scale(0.66, tdnnf11.noop), tdnnf12.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf13.linear component=tdnnf13.linear input=tdnnf12.noop input-dim=1024 output-dim=128
component-node name=tdnnf13.affine component=tdnnf13.affine input=tdnnf13.linear input-dim=128 output-dim=1024
component-node name=tdnnf13.relu component=tdnnf13.relu input=tdnnf13.affine input-dim=1024 output-dim=1024
component-node name=tdnnf13.batchnorm component=tdnnf13.batchnorm input=tdnnf13.relu input-dim=1024 output-dim=1024
component-node name=tdnnf13.dropout component=tdnnf13.dropout input=tdnnf13.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf13.noop component=tdnnf13.noop input=Sum(Scale(0.66, tdnnf12.noop), tdnnf13.dropout) input-dim=1024 output-dim=1024
component-node name=prefinal-l component=prefinal-l input=tdnnf13.noop input-dim=1024 output-dim=256
component-node name=prefinal-chain.affine component=prefinal-chain.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-chain.relu component=prefinal-chain.relu input=prefinal-chain.affine input-dim=1024 output-dim=1024
component-node name=prefinal-chain.batchnorm1 component=prefinal-chain.batchnorm1 input=prefinal-chain.relu input-dim=1024 output-dim=1024
component-node name=prefinal-chain.linear component=prefinal-chain.linear input=prefinal-chain.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-chain.batchnorm2 component=prefinal-chain.batchnorm2 input=prefinal-chain.linear input-dim=256 output-dim=256
component-node name=output.affine component=output.affine input=prefinal-chain.batchnorm2 input-dim=256 output-dim=2824
output-node name=output input=output.affine dim=2824 objective=linear
component-node name=prefinal-xent.affine component=prefinal-xent.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-xent.relu component=prefinal-xent.relu input=prefinal-xent.affine input-dim=1024 output-dim=1024
component-node name=prefinal-xent.batchnorm1 component=prefinal-xent.batchnorm1 input=prefinal-xent.relu input-dim=1024 output-dim=1024
component-node name=prefinal-xent.linear component=prefinal-xent.linear input=prefinal-xent.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-xent.batchnorm2 component=prefinal-xent.batchnorm2 input=prefinal-xent.linear input-dim=256 output-dim=256
component-node name=output-xent.affine component=output-xent.affine input=prefinal-xent.batchnorm2 input-dim=256 output-dim=2824
component-node name=output-xent.log-softmax component=output-xent.log-softmax input=output-xent.affine input-dim=2824 output-dim=2824
output-node name=output-xent input=output-xent.log-softmax dim=2824 objective=linear
component name=lda type=FixedAffineComponent, input-dim=220, output-dim=220, linear-params-rms=0.005753, bias-{mean,stddev}=-0.001002,0.01283
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=220, output-dim=1024, learning-rate=0.000195939, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.02017, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.07,0.08,0.08 0.08,0.08,0.27,0.35,0.46 0.56,0.64,0.69,1.0), mean=0.254, stddev=0.158], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.37,0.39,0.40,0.42 0.44,0.48,0.61,0.74,0.85 0.97,1.0,1.0,1.1), mean=0.625, stddev=0.162], bias-{mean,stddev}=0.004682,0.05622, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=2.96e+06, self-repaired-proportion=0.426988, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,2e-05,0.02,0.06,0.07 0.10,0.12,0.15,0.23), mean=0.031, stddev=0.0359], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0.005,0.42,0.90,0.96 0.99,1.0,1.0,1.0), mean=0.45, stddev=0.398], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.04,0.05,0.05 0.05,0.06,0.09,0.15,0.19 0.23,0.27,0.30,0.39), mean=0.108, stddev=0.0575], oderiv-count=4.72704e+06
component name=tdnn1.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=47656.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,2e-05,0.02,0.06,0.07 0.09,0.11,0.14,0.22), mean=0.0299, stddev=0.0339], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0.0003,0.02,0.04,0.05 0.05,0.06,0.06,0.10), mean=0.0229, stddev=0.0203]
component name=tdnn1.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf2.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000195939, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.01482, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.67,0.67,0.67,0.67 0.67,0.67,0.67,0.67,0.67 0.67,0.67,0.67,0.67), mean=0.671, stddev=0.000791], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.10,0.10,0.11 0.11,0.12,0.16,0.19,0.22 0.25,0.28,0.30,0.35), mean=0.161, stddev=0.0455], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000195939, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.01321, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.10,0.10,0.11 0.12,0.14,0.19,0.25,0.29 0.33,0.36,0.39,0.43), mean=0.2, stddev=0.0687], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.37,0.37,0.38,0.39 0.39,0.40,0.42,0.44,0.45 0.46,0.47,0.47,0.49), mean=0.422, stddev=0.022], bias-{mean,stddev}=-0.02816,0.09218, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=3.09e+06, self-repaired-proportion=0.00275583, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.005,0.008,0.01 0.02,0.04,0.07,0.11,0.12 0.13,0.15,0.16,0.21), mean=0.0745, stddev=0.036], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.07,0.10,0.15 0.20,0.27,0.44,0.66,0.79 0.85,0.88,0.90,0.95), mean=0.466, stddev=0.212], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.007,0.01,0.01,0.01 0.01,0.02,0.02,0.03,0.03 0.04,0.05,0.05,0.08), mean=0.0229, stddev=0.00904], oderiv-count=4.47181e+06
component name=tdnnf2.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=47144.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.005,0.008,0.01 0.02,0.04,0.07,0.10,0.12 0.13,0.14,0.15,0.20), mean=0.0734, stddev=0.0346], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.007,0.02,0.03,0.05 0.07,0.08,0.11,0.14,0.15 0.16,0.17,0.18,0.21), mean=0.11, stddev=0.033]
component name=tdnnf2.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf2.noop type=NoOpComponent, dim=1024
component name=tdnnf3.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000195939, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.01204, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.54,0.54,0.54,0.54 0.54,0.54,0.55,0.55,0.55 0.55,0.55,0.55,0.55), mean=0.545, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.09,0.09,0.10 0.10,0.11,0.13,0.16,0.17 0.18,0.19,0.20,0.24), mean=0.134, stddev=0.0258], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000195939, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.01089, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.11,0.11,0.12 0.13,0.14,0.17,0.20,0.22 0.23,0.24,0.25,0.31), mean=0.171, stddev=0.0333], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.30,0.31,0.31,0.32 0.33,0.33,0.35,0.36,0.37 0.38,0.38,0.39,0.40), mean=0.348, stddev=0.0178], bias-{mean,stddev}=-0.01863,0.08673, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=2.82e+06, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.007,0.02,0.02,0.03 0.04,0.05,0.09,0.12,0.14 0.16,0.18,0.18,0.23), mean=0.0881, stddev=0.0381], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.14,0.17,0.21 0.26,0.31,0.47,0.61,0.71 0.77,0.81,0.83,0.87), mean=0.468, stddev=0.168], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.007,0.008,0.008,0.009 0.009,0.01,0.01,0.02,0.02 0.02,0.02,0.03,0.05), mean=0.0136, stddev=0.00413], oderiv-count=4.69978e+06
component name=tdnnf3.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=46632.1, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.02,0.02,0.03 0.04,0.05,0.08,0.12,0.14 0.15,0.17,0.18,0.22), mean=0.0863, stddev=0.0365], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.07,0.08,0.09 0.10,0.11,0.13,0.15,0.16 0.17,0.18,0.19,0.23), mean=0.132, stddev=0.0259]
component name=tdnnf3.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf3.noop type=NoOpComponent, dim=1024
component name=tdnnf4.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000195939, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.0103, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.46,0.47,0.47,0.47 0.47,0.47,0.47,0.47,0.47 0.47,0.47,0.47,0.47), mean=0.466, stddev=0.000405], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.08,0.09,0.09 0.10,0.10,0.11,0.13,0.14 0.14,0.15,0.16,0.20), mean=0.115, stddev=0.0164], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000195939, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.01015, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.10,0.11,0.12 0.13,0.14,0.16,0.18,0.19 0.20,0.22,0.22,0.26), mean=0.16, stddev=0.0259], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.29,0.29,0.30 0.30,0.31,0.32,0.34,0.34 0.35,0.36,0.36,0.38), mean=0.324, stddev=0.0165], bias-{mean,stddev}=-0.01033,0.08837, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=1.06e+06, self-repaired-proportion=0.0077593, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-06,0.01,0.02,0.03 0.04,0.05,0.09,0.12,0.15 0.17,0.19,0.20,0.27), mean=0.0912, stddev=0.0428], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(7e-05,0.11,0.15,0.20 0.24,0.31,0.46,0.61,0.72 0.78,0.83,0.85,0.95), mean=0.467, stddev=0.176], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.01,0.01,0.01 0.02,0.02,0.02,0.03,0.03 0.03,0.04,0.05,0.10), mean=0.022, stddev=0.00754], oderiv-count=1.46528e+06
component name=tdnnf4.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=15544, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-06,0.01,0.02,0.03 0.04,0.05,0.08,0.12,0.14 0.17,0.19,0.20,0.25), mean=0.0899, stddev=0.0409], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.05,0.07,0.10 0.11,0.12,0.14,0.16,0.17 0.18,0.19,0.19,0.26), mean=0.137, stddev=0.0276]
component name=tdnnf4.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf4.noop type=NoOpComponent, dim=1024
component name=tdnnf5.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000195939, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=0, linear-params-rms=0.01103, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.35,0.35,0.35,0.35 0.35,0.35,0.35,0.35,0.35 0.35,0.35,0.35,0.35), mean=0.353, stddev=-nan], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.10,0.10,0.10 0.11,0.11,0.12,0.13,0.14 0.15,0.15,0.15,0.17), mean=0.124, stddev=0.0123], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000195939, l2-regularize=0.008, max-change=0.75, time-offsets=0, linear-params-rms=0.01175, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.08,0.09,0.10 0.10,0.11,0.13,0.15,0.16 0.17,0.18,0.18,0.21), mean=0.131, stddev=0.0216], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.33,0.33,0.33,0.34 0.35,0.36,0.37,0.39,0.40 0.41,0.41,0.42,0.43), mean=0.376, stddev=0.0209], bias-{mean,stddev}=-0.009177,0.08041, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=1e+06, self-repaired-proportion=0.0201768, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(7e-07,0.002,0.004,0.008 0.02,0.03,0.05,0.10,0.12 0.15,0.16,0.18,0.22), mean=0.0625, stddev=0.0414], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(6e-05,0.04,0.06,0.10 0.15,0.23,0.43,0.67,0.78 0.84,0.89,0.92,0.97), mean=0.448, stddev=0.229], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.02,0.02,0.02 0.02,0.02,0.03,0.04,0.05 0.06,0.08,0.08,0.11), mean=0.0355, stddev=0.0137], oderiv-count=1.46746e+06
component name=tdnnf5.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=15544, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-06,0.001,0.003,0.009 0.02,0.03,0.05,0.09,0.12 0.14,0.15,0.17,0.21), mean=0.0605, stddev=0.0395], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.009,0.02,0.04 0.05,0.07,0.09,0.11,0.12 0.12,0.13,0.13,0.15), mean=0.0866, stddev=0.0257]
component name=tdnnf5.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf5.noop type=NoOpComponent, dim=1024
component name=tdnnf6.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000195939, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.009907, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.45,0.45,0.45,0.45 0.45,0.45,0.45,0.45,0.45 0.45,0.45,0.45,0.45), mean=0.448, stddev=0.000732], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.08,0.09,0.09 0.09,0.10,0.11,0.12,0.13 0.13,0.14,0.14,0.17), mean=0.111, stddev=0.013], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000195939, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.01028, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.12,0.12,0.13 0.13,0.14,0.16,0.18,0.19 0.20,0.21,0.21,0.25), mean=0.163, stddev=0.0219], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.29,0.29,0.30 0.31,0.31,0.33,0.34,0.35 0.36,0.36,0.37,0.40), mean=0.329, stddev=0.0178], bias-{mean,stddev}=-0.02057,0.08397, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.59e+05, self-repaired-proportion=0.000976562, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0003,0.02,0.02,0.03 0.04,0.05,0.08,0.12,0.14 0.16,0.18,0.20,0.28), mean=0.0851, stddev=0.0402], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.008,0.13,0.14,0.18 0.24,0.30,0.45,0.59,0.67 0.73,0.78,0.81,0.92), mean=0.448, stddev=0.163], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.01,0.01,0.01 0.02,0.02,0.02,0.03,0.03 0.04,0.04,0.04,0.06), mean=0.0227, stddev=0.00689], oderiv-count=1.39667e+06
component name=tdnnf6.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=15032, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0004,0.02,0.02,0.03 0.04,0.05,0.08,0.11,0.13 0.15,0.17,0.19,0.27), mean=0.0832, stddev=0.0385], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.06,0.07,0.09 0.10,0.11,0.13,0.15,0.16 0.17,0.18,0.18,0.20), mean=0.132, stddev=0.0246]
component name=tdnnf6.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf6.noop type=NoOpComponent, dim=1024
component name=tdnnf7.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000195939, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.009994, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.45,0.45,0.45,0.45 0.45,0.45,0.45,0.45,0.45 0.45,0.45,0.45,0.45), mean=0.452, stddev=0.000762], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.08,0.09,0.09 0.10,0.10,0.11,0.12,0.13 0.13,0.14,0.15,0.20), mean=0.112, stddev=0.0133], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000195939, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.0102, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.12,0.12,0.13 0.14,0.14,0.16,0.18,0.19 0.20,0.21,0.21,0.26), mean=0.162, stddev=0.0211], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.27,0.28,0.29,0.30 0.30,0.31,0.32,0.34,0.35 0.36,0.36,0.37,0.38), mean=0.326, stddev=0.0197], bias-{mean,stddev}=-0.01853,0.09166, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.17e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.009,0.02,0.02,0.03 0.03,0.05,0.08,0.12,0.14 0.17,0.20,0.21,0.26), mean=0.0857, stddev=0.0445], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.13,0.14,0.18 0.21,0.28,0.44,0.62,0.70 0.76,0.81,0.84,0.92), mean=0.452, stddev=0.179], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.01,0.01,0.01 0.01,0.02,0.02,0.03,0.03 0.04,0.04,0.05,0.07), mean=0.0224, stddev=0.00761], oderiv-count=1.40371e+06
component name=tdnnf7.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=14520, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.02,0.02,0.03 0.03,0.05,0.08,0.12,0.14 0.16,0.19,0.20,0.25), mean=0.0834, stddev=0.0423], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.06,0.07,0.08 0.09,0.11,0.13,0.15,0.16 0.17,0.17,0.18,0.20), mean=0.129, stddev=0.0251]
component name=tdnnf7.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf7.noop type=NoOpComponent, dim=1024
component name=tdnnf8.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000195939, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.00985, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.44,0.44,0.44,0.44 0.44,0.45,0.45,0.45,0.45 0.45,0.45,0.45,0.45), mean=0.446, stddev=0.000669], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.08,0.09,0.09 0.09,0.10,0.11,0.12,0.13 0.14,0.14,0.15,0.18), mean=0.111, stddev=0.0143], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000195939, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.01013, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.12,0.12,0.13 0.14,0.14,0.16,0.18,0.19 0.19,0.20,0.21,0.23), mean=0.161, stddev=0.0199], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.26,0.27,0.28,0.29 0.30,0.31,0.32,0.34,0.35 0.36,0.36,0.37,0.38), mean=0.324, stddev=0.0199], bias-{mean,stddev}=-0.02225,0.09215, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.39e+05, self-repaired-proportion=0.00398469, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(6e-06,0.01,0.02,0.02 0.03,0.04,0.08,0.12,0.14 0.17,0.19,0.21,0.25), mean=0.0829, stddev=0.0442], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0005,0.09,0.11,0.16 0.21,0.28,0.43,0.60,0.69 0.76,0.81,0.85,0.88), mean=0.442, stddev=0.181], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.01,0.01,0.01 0.01,0.02,0.02,0.03,0.03 0.04,0.05,0.05,0.08), mean=0.0227, stddev=0.00839], oderiv-count=1.3872e+06
component name=tdnnf8.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=14008, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(6e-06,0.01,0.02,0.02 0.03,0.04,0.08,0.11,0.14 0.16,0.19,0.20,0.24), mean=0.0811, stddev=0.0422], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0003,0.05,0.07,0.08 0.09,0.11,0.13,0.15,0.16 0.17,0.18,0.18,0.22), mean=0.127, stddev=0.0281]
component name=tdnnf8.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf8.noop type=NoOpComponent, dim=1024
component name=tdnnf9.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000195939, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.00992, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.45,0.45,0.45,0.45 0.45,0.45,0.45,0.45,0.45 0.45,0.45,0.45,0.45), mean=0.449, stddev=0.000722], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.08,0.09,0.09 0.09,0.10,0.11,0.12,0.13 0.14,0.14,0.15,0.19), mean=0.111, stddev=0.0146], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000195939, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.01013, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.12,0.13,0.13 0.14,0.14,0.16,0.18,0.19 0.19,0.20,0.21,0.23), mean=0.161, stddev=0.0191], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.29,0.29,0.29 0.30,0.31,0.32,0.34,0.35 0.36,0.36,0.37,0.38), mean=0.324, stddev=0.0193], bias-{mean,stddev}=-0.02081,0.09069, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.69e+05, self-repaired-proportion=0.00385704, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(6e-06,0.01,0.01,0.02 0.03,0.04,0.08,0.12,0.14 0.16,0.19,0.20,0.27), mean=0.0826, stddev=0.0439], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0003,0.08,0.11,0.15 0.20,0.27,0.43,0.61,0.69 0.75,0.81,0.84,0.92), mean=0.442, stddev=0.182], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.01,0.01,0.01 0.01,0.02,0.02,0.03,0.03 0.04,0.05,0.05,0.08), mean=0.0219, stddev=0.00819], oderiv-count=1.34502e+06
component name=tdnnf9.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=13496, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-06,0.01,0.01,0.02 0.03,0.04,0.08,0.11,0.14 0.16,0.18,0.19,0.26), mean=0.0806, stddev=0.042], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0003,0.05,0.06,0.08 0.09,0.10,0.13,0.15,0.16 0.17,0.17,0.18,0.20), mean=0.125, stddev=0.0275]
component name=tdnnf9.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf9.noop type=NoOpComponent, dim=1024
component name=tdnnf10.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000195939, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.009913, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.45,0.45,0.45,0.45 0.45,0.45,0.45,0.45,0.45 0.45,0.45,0.45,0.45), mean=0.449, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.09,0.09,0.09 0.09,0.10,0.11,0.12,0.13 0.14,0.14,0.15,0.19), mean=0.111, stddev=0.0141], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000195939, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.01015, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.13,0.13,0.13 0.14,0.14,0.16,0.18,0.19 0.19,0.20,0.21,0.22), mean=0.161, stddev=0.0189], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.27,0.28,0.28,0.29 0.30,0.31,0.32,0.34,0.35 0.36,0.37,0.37,0.39), mean=0.324, stddev=0.0205], bias-{mean,stddev}=-0.01301,0.09097, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.25e+05, self-repaired-proportion=0.000976562, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0005,0.01,0.02,0.03 0.03,0.05,0.08,0.12,0.15 0.17,0.19,0.21,0.26), mean=0.0866, stddev=0.045], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.11,0.14,0.17 0.22,0.28,0.44,0.63,0.71 0.75,0.82,0.85,0.92), mean=0.456, stddev=0.183], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.01,0.01,0.01 0.01,0.01,0.02,0.03,0.03 0.03,0.04,0.04,0.07), mean=0.0206, stddev=0.00714], oderiv-count=1.21504e+06
component name=tdnnf10.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=12984, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0007,0.01,0.02,0.03 0.03,0.05,0.08,0.12,0.15 0.16,0.19,0.20,0.25), mean=0.0846, stddev=0.0431], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.008,0.06,0.07,0.08 0.09,0.11,0.13,0.15,0.16 0.17,0.17,0.18,0.20), mean=0.127, stddev=0.0264]
component name=tdnnf10.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf10.noop type=NoOpComponent, dim=1024
component name=tdnnf11.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000195939, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.009958, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.45,0.45,0.45,0.45 0.45,0.45,0.45,0.45,0.45 0.45,0.45,0.45,0.45), mean=0.451, stddev=0.000488], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.09,0.09,0.09 0.09,0.10,0.11,0.12,0.13 0.14,0.15,0.15,0.19), mean=0.112, stddev=0.0143], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000195939, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.0102, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.13,0.13,0.13 0.14,0.15,0.16,0.18,0.18 0.19,0.20,0.20,0.22), mean=0.162, stddev=0.0174], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.29,0.29,0.29 0.30,0.31,0.32,0.34,0.35 0.36,0.37,0.38,0.40), mean=0.326, stddev=0.0206], bias-{mean,stddev}=-0.02122,0.09231, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.26e+05, self-repaired-proportion=0.00292969, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0007,0.01,0.02,0.02 0.03,0.04,0.07,0.12,0.15 0.16,0.18,0.20,0.25), mean=0.0823, stddev=0.0444], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.10,0.11,0.16 0.19,0.26,0.44,0.61,0.70 0.76,0.81,0.83,0.91), mean=0.438, stddev=0.186], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.01,0.01,0.01 0.01,0.02,0.02,0.03,0.03 0.03,0.04,0.05,0.07), mean=0.0209, stddev=0.00738], oderiv-count=1.24992e+06
component name=tdnnf11.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=12472, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0007,0.01,0.01,0.02 0.03,0.04,0.07,0.12,0.14 0.16,0.18,0.19,0.24), mean=0.0806, stddev=0.0424], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.007,0.05,0.06,0.07 0.09,0.10,0.13,0.15,0.16 0.16,0.17,0.18,0.19), mean=0.124, stddev=0.0272]
component name=tdnnf11.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf11.noop type=NoOpComponent, dim=1024
component name=tdnnf12.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000195939, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01012, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.46,0.46,0.46,0.46 0.46,0.46,0.46,0.46,0.46 0.46,0.46,0.46,0.46), mean=0.458, stddev=0.00068], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.09,0.09,0.09 0.10,0.10,0.11,0.12,0.13 0.14,0.15,0.16,0.21), mean=0.114, stddev=0.0151], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000195939, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.01034, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.13,0.13,0.14 0.14,0.15,0.16,0.18,0.18 0.19,0.20,0.21,0.22), mean=0.165, stddev=0.0164], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.29,0.29,0.29,0.30 0.31,0.31,0.33,0.35,0.36 0.36,0.37,0.37,0.38), mean=0.33, stddev=0.0197], bias-{mean,stddev}=-0.01766,0.08922, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.9e+05, self-repaired-proportion=0.000720354, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.01,0.02,0.03 0.03,0.05,0.08,0.12,0.15 0.17,0.19,0.21,0.23), mean=0.0847, stddev=0.0439], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.11,0.13,0.17 0.21,0.28,0.44,0.61,0.69 0.77,0.81,0.83,0.91), mean=0.447, stddev=0.181], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.01,0.01,0.01 0.01,0.02,0.02,0.02,0.03 0.03,0.04,0.04,0.06), mean=0.02, stddev=0.00606], oderiv-count=1.16544e+06
component name=tdnnf12.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11960, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.01,0.02,0.03 0.03,0.05,0.08,0.12,0.14 0.16,0.19,0.20,0.22), mean=0.0835, stddev=0.042], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.06,0.07,0.08 0.09,0.11,0.13,0.15,0.16 0.16,0.17,0.18,0.20), mean=0.127, stddev=0.0252]
component name=tdnnf12.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf12.noop type=NoOpComponent, dim=1024
component name=tdnnf13.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000195939, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01028, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.46,0.46,0.46,0.46 0.46,0.46,0.47,0.47,0.47 0.47,0.47,0.47,0.47), mean=0.465, stddev=0.000634], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.09,0.09,0.10 0.10,0.10,0.11,0.13,0.13 0.14,0.15,0.16,0.22), mean=0.115, stddev=0.0147], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000195939, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.01035, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.13,0.13,0.14 0.15,0.15,0.16,0.18,0.18 0.19,0.20,0.20,0.22), mean=0.165, stddev=0.0154], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.29,0.30,0.30 0.31,0.31,0.33,0.35,0.36 0.37,0.37,0.37,0.38), mean=0.33, stddev=0.0194], bias-{mean,stddev}=-0.01857,0.08809, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.4e+05, self-repaired-proportion=1.96888e-05, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.02,0.02,0.03 0.04,0.05,0.08,0.13,0.15 0.17,0.19,0.20,0.24), mean=0.0886, stddev=0.044], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.12,0.14,0.19 0.23,0.29,0.44,0.61,0.68 0.73,0.79,0.82,0.87), mean=0.45, stddev=0.169], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.01,0.01,0.01 0.01,0.01,0.02,0.02,0.03 0.03,0.03,0.03,0.05), mean=0.0186, stddev=0.00497], oderiv-count=1.13574e+06
component name=tdnnf13.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11448, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.02,0.02,0.03 0.04,0.05,0.08,0.12,0.15 0.16,0.18,0.20,0.23), mean=0.0875, stddev=0.0424], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.07,0.07,0.09 0.10,0.11,0.13,0.15,0.16 0.17,0.18,0.18,0.20), mean=0.131, stddev=0.0253]
component name=tdnnf13.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf13.noop type=NoOpComponent, dim=1024
component name=prefinal-l type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000195939, l2-regularize=0.008, max-change=0.75, params-rms=0.01335, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.43,0.43,0.43,0.43 0.43,0.43,0.43,0.43,0.43 0.43,0.43,0.43,0.43), mean=0.427, stddev=0.00044], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.17,0.19,0.19,0.19 0.20,0.20,0.21,0.22,0.23 0.23,0.24,0.24,0.26), mean=0.213, stddev=0.0117], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=0.000195939, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.01016, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.12,0.13,0.14 0.14,0.15,0.16,0.17,0.18 0.19,0.19,0.19,0.20), mean=0.162, stddev=0.0166], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.29,0.29,0.30 0.31,0.31,0.33,0.34,0.34 0.35,0.35,0.35,0.36), mean=0.325, stddev=0.0141], bias-{mean,stddev}=-0.0158,0.08675, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7e+05, self-repaired-proportion=0.00986398, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-07,0.005,0.01,0.02 0.03,0.04,0.07,0.11,0.14 0.16,0.19,0.20,0.24), mean=0.0756, stddev=0.0441], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-05,0.06,0.11,0.15 0.19,0.26,0.43,0.63,0.72 0.79,0.85,0.87,0.94), mean=0.447, stddev=0.201], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.01,0.01,0.01 0.02,0.02,0.02,0.03,0.03 0.03,0.04,0.04,0.05), mean=0.0236, stddev=0.00637], oderiv-count=1.09843e+06
component name=prefinal-chain.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11448, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-08,0.006,0.01,0.02 0.03,0.04,0.06,0.11,0.13 0.15,0.18,0.19,0.22), mean=0.074, stddev=0.0422], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-05,0.03,0.06,0.07 0.08,0.09,0.11,0.13,0.14 0.14,0.15,0.15,0.19), mean=0.11, stddev=0.0239]
component name=prefinal-chain.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000195939, l2-regularize=0.008, max-change=0.75, params-rms=0.01236, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.40,0.40,0.40,0.40 0.40,0.40,0.40,0.40,0.40 0.40,0.40,0.40,0.40), mean=0.396, stddev=0], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.16,0.17,0.17 0.18,0.19,0.20,0.21,0.21 0.22,0.22,0.22,0.24), mean=0.197, stddev=0.0137], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=11448, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-5e-08,-4e-08,-4e-08,-3e-08 -2e-08,-2e-08,1e-09,1e-08,2e-08 3e-08,4e-08,4e-08,5e-08), mean=-3.26e-11, stddev=1.84e-08], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.46,0.46,0.47,0.48 0.49,0.50,0.52,0.54,0.55 0.56,0.57,0.58,0.61), mean=0.519, stddev=0.0247]
component name=output.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=2824, learning-rate=0.000195939, l2-regularize=0.002, max-change=1.5, linear-params-rms=0.01732, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0009,0.01,0.03,0.10 0.16,0.21,0.27,0.33,0.36 0.39,0.44,0.46,0.89), mean=0.264, stddev=0.0855], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.80,0.82,0.84,0.86 0.87,0.89,0.92,0.95,0.97 0.98,0.99,0.99,1.0), mean=0.92, stddev=0.0387], bias-{mean,stddev}=0.0001413,0.04538, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=0.000195939, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.007345, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.07,0.08,0.08 0.09,0.10,0.12,0.13,0.14 0.15,0.15,0.16,0.25), mean=0.116, stddev=0.0203], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.20,0.21,0.21,0.22 0.22,0.23,0.23,0.24,0.25 0.25,0.26,0.27,0.31), mean=0.235, stddev=0.0121], bias-{mean,stddev}=-0.0181,0.08371, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.33e+05, self-repaired-proportion=0.0189224, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(5e-08,0.003,0.005,0.008 0.01,0.02,0.04,0.09,0.12 0.14,0.16,0.17,0.25), mean=0.0544, stddev=0.042], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-06,0.05,0.05,0.09 0.12,0.17,0.38,0.68,0.78 0.85,0.91,0.93,1.0), mean=0.421, stddev=0.248], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.006,0.006,0.006 0.007,0.009,0.01,0.02,0.02 0.02,0.02,0.02,0.03), mean=0.0132, stddev=0.00472], oderiv-count=1.08243e+06
component name=prefinal-xent.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11448, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-12,0.004,0.005,0.008 0.01,0.02,0.04,0.09,0.12 0.13,0.15,0.16,0.23), mean=0.0527, stddev=0.0404], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-07,0.02,0.03,0.04 0.04,0.05,0.07,0.09,0.10 0.11,0.11,0.12,0.26), mean=0.0731, stddev=0.0246]
component name=prefinal-xent.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000195939, l2-regularize=0.008, max-change=0.75, params-rms=0.008239, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.26,0.26,0.26,0.26 0.26,0.26,0.26,0.26,0.26 0.26,0.26,0.26,0.26), mean=0.264, stddev=-nan], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.10,0.10,0.11 0.11,0.12,0.13,0.14,0.15 0.16,0.17,0.17,0.22), mean=0.131, stddev=0.017], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=11448, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-4e-08,-3e-08,-2e-08,-2e-08 -1e-08,-8e-09,5e-10,9e-09,1e-08 2e-08,2e-08,3e-08,3e-08), mean=-1.1e-10, stddev=1.06e-08], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.25,0.25,0.25,0.25 0.26,0.26,0.27,0.28,0.29 0.29,0.29,0.30,0.31), mean=0.271, stddev=0.0117]
component name=output-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=2824, learning-rate=0.000979693, l2-regularize=0.002, learning-rate-factor=5, max-change=1.5, linear-params-rms=0.03361, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.02,0.02,0.06 0.13,0.26,0.51,0.68,0.77 0.84,0.90,0.93,1.3), mean=0.485, stddev=0.232], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.6,1.6,1.6,1.7 1.7,1.7,1.8,1.8,1.9 1.9,1.9,1.9,1.9), mean=1.78, stddev=0.0676], bias-{mean,stddev}=5.762e-09,0.06102, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-xent.log-softmax type=LogSoftmaxComponent, dim=2824, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,7e-08,3e-05,0.0001 0.0002,0.0004,0.0007,0.001,0.002 0.003,0.004,0.004,0.04), mean=0.00101, stddev=0.00117], oderiv-count=1.09459e+06
nnet3-show-progress --use-gpu=no telugu_exp/chain_cleaned_1d/tdnn1d_sp/20.mdl telugu_exp/chain_cleaned_1d/tdnn1d_sp/21.mdl 
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:SelectGpuId():cu-device.cc:168) Manually selected to compute on CPU.
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:3.17227 tdnnf2.linear:1.86787 tdnnf2.affine:2.19214 tdnnf3.linear:1.70421 tdnnf3.affine:1.82886 tdnnf4.linear:1.50212 tdnnf4.affine:1.70403 tdnnf5.linear:1.17025 tdnnf5.affine:1.32934 tdnnf6.linear:1.44473 tdnnf6.affine:1.66687 tdnnf7.linear:1.39694 tdnnf7.affine:1.59639 tdnnf8.linear:1.328 tdnnf8.affine:1.53885 tdnnf9.linear:1.29572 tdnnf9.affine:1.489 tdnnf10.linear:1.25328 tdnnf10.affine:1.44441 tdnnf11.linear:1.22992 tdnnf11.affine:1.42893 tdnnf12.linear:1.20277 tdnnf12.affine:1.40644 tdnnf13.linear:1.16161 tdnnf13.affine:1.41059 prefinal-l:1.28638 prefinal-chain.affine:1.49511 prefinal-chain.linear:1.18047 output.affine:1.47993 prefinal-xent.affine:0.862662 prefinal-xent.linear:0.597667 output-xent.affine:1.29053 ]
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:9.74208 tdnnf2.linear:7.58761 tdnnf2.affine:7.43158 tdnnf3.linear:6.16632 tdnnf3.affine:6.25739 tdnnf4.linear:5.27294 tdnnf4.affine:5.9242 tdnnf5.linear:3.99252 tdnnf5.affine:4.98168 tdnnf6.linear:5.07262 tdnnf6.affine:5.94834 tdnnf7.linear:5.11703 tdnnf7.affine:6.02092 tdnnf8.linear:5.04338 tdnnf8.affine:6.00884 tdnnf9.linear:5.07881 tdnnf9.affine:5.98057 tdnnf10.linear:5.07557 tdnnf10.affine:5.97075 tdnnf11.linear:5.09858 tdnnf11.affine:6.04005 tdnnf12.linear:5.18202 tdnnf12.affine:6.03949 tdnnf13.linear:5.26534 tdnnf13.affine:6.02963 prefinal-l:6.83474 prefinal-chain.affine:5.91652 prefinal-chain.linear:6.32923 output.affine:14.9234 prefinal-xent.affine:4.65351 prefinal-xent.linear:4.2186 output-xent.affine:28.7611 ]
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.323421 tdnnf2.linear:0.245218 tdnnf2.affine:0.289908 tdnnf3.linear:0.27512 tdnnf3.affine:0.28397 tdnnf4.linear:0.283568 tdnnf4.affine:0.277797 tdnnf5.linear:0.290051 tdnnf5.affine:0.254586 tdnnf6.linear:0.284457 tdnnf6.affine:0.271881 tdnnf7.linear:0.272186 tdnnf7.affine:0.256363 tdnnf8.linear:0.262071 tdnnf8.affine:0.247539 tdnnf9.linear:0.254433 tdnnf9.affine:0.240622 tdnnf10.linear:0.24608 tdnnf10.affine:0.233735 tdnnf11.linear:0.240553 tdnnf11.affine:0.228563 tdnnf12.linear:0.231449 tdnnf12.affine:0.225509 tdnnf13.linear:0.219956 tdnnf13.affine:0.226919 prefinal-l:0.188028 prefinal-chain.affine:0.244757 prefinal-chain.linear:0.186463 output.affine:0.099645 prefinal-xent.affine:0.176977 prefinal-xent.linear:0.141407 output-xent.affine:0.0449223 ]
# Accounting: time=0 threads=1
# Ended (code 0) at Wed Jul 20 03:42:25 EDT 2022, elapsed time 0 seconds
