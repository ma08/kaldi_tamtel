# nnet3-am-info telugu_exp/chain_cleaned_1d/tdnn1d_sp/3.mdl && nnet3-show-progress --use-gpu=no telugu_exp/chain_cleaned_1d/tdnn1d_sp/2.mdl telugu_exp/chain_cleaned_1d/tdnn1d_sp/3.mdl 
# Started at Tue Jul 19 04:34:03 EDT 2022
#
nnet3-am-info telugu_exp/chain_cleaned_1d/tdnn1d_sp/3.mdl 
input-dim: 40
ivector-dim: 100
num-pdfs: 2824
prior-dimension: 0
# Nnet info follows.
left-context: 28
right-context: 28
num-parameters: 9032208
modulus: 1
input-node name=ivector dim=100
input-node name=input dim=40
component-node name=lda component=lda input=Append(Offset(input, -1), input, Offset(input, 1), ReplaceIndex(ivector, t, 0)) input-dim=220 output-dim=220
component-node name=tdnn1.affine component=tdnn1.affine input=lda input-dim=220 output-dim=1024
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=1024 output-dim=1024
component-node name=tdnn1.batchnorm component=tdnn1.batchnorm input=tdnn1.relu input-dim=1024 output-dim=1024
component-node name=tdnn1.dropout component=tdnn1.dropout input=tdnn1.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.linear component=tdnnf2.linear input=tdnn1.dropout input-dim=1024 output-dim=128
component-node name=tdnnf2.affine component=tdnnf2.affine input=tdnnf2.linear input-dim=128 output-dim=1024
component-node name=tdnnf2.relu component=tdnnf2.relu input=tdnnf2.affine input-dim=1024 output-dim=1024
component-node name=tdnnf2.batchnorm component=tdnnf2.batchnorm input=tdnnf2.relu input-dim=1024 output-dim=1024
component-node name=tdnnf2.dropout component=tdnnf2.dropout input=tdnnf2.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf2.noop component=tdnnf2.noop input=Sum(Scale(0.66, tdnn1.dropout), tdnnf2.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf3.linear component=tdnnf3.linear input=tdnnf2.noop input-dim=1024 output-dim=128
component-node name=tdnnf3.affine component=tdnnf3.affine input=tdnnf3.linear input-dim=128 output-dim=1024
component-node name=tdnnf3.relu component=tdnnf3.relu input=tdnnf3.affine input-dim=1024 output-dim=1024
component-node name=tdnnf3.batchnorm component=tdnnf3.batchnorm input=tdnnf3.relu input-dim=1024 output-dim=1024
component-node name=tdnnf3.dropout component=tdnnf3.dropout input=tdnnf3.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf3.noop component=tdnnf3.noop input=Sum(Scale(0.66, tdnnf2.noop), tdnnf3.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf4.linear component=tdnnf4.linear input=tdnnf3.noop input-dim=1024 output-dim=128
component-node name=tdnnf4.affine component=tdnnf4.affine input=tdnnf4.linear input-dim=128 output-dim=1024
component-node name=tdnnf4.relu component=tdnnf4.relu input=tdnnf4.affine input-dim=1024 output-dim=1024
component-node name=tdnnf4.batchnorm component=tdnnf4.batchnorm input=tdnnf4.relu input-dim=1024 output-dim=1024
component-node name=tdnnf4.dropout component=tdnnf4.dropout input=tdnnf4.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf4.noop component=tdnnf4.noop input=Sum(Scale(0.66, tdnnf3.noop), tdnnf4.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf5.linear component=tdnnf5.linear input=tdnnf4.noop input-dim=1024 output-dim=128
component-node name=tdnnf5.affine component=tdnnf5.affine input=tdnnf5.linear input-dim=128 output-dim=1024
component-node name=tdnnf5.relu component=tdnnf5.relu input=tdnnf5.affine input-dim=1024 output-dim=1024
component-node name=tdnnf5.batchnorm component=tdnnf5.batchnorm input=tdnnf5.relu input-dim=1024 output-dim=1024
component-node name=tdnnf5.dropout component=tdnnf5.dropout input=tdnnf5.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf5.noop component=tdnnf5.noop input=Sum(Scale(0.66, tdnnf4.noop), tdnnf5.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf6.linear component=tdnnf6.linear input=tdnnf5.noop input-dim=1024 output-dim=128
component-node name=tdnnf6.affine component=tdnnf6.affine input=tdnnf6.linear input-dim=128 output-dim=1024
component-node name=tdnnf6.relu component=tdnnf6.relu input=tdnnf6.affine input-dim=1024 output-dim=1024
component-node name=tdnnf6.batchnorm component=tdnnf6.batchnorm input=tdnnf6.relu input-dim=1024 output-dim=1024
component-node name=tdnnf6.dropout component=tdnnf6.dropout input=tdnnf6.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf6.noop component=tdnnf6.noop input=Sum(Scale(0.66, tdnnf5.noop), tdnnf6.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf7.linear component=tdnnf7.linear input=tdnnf6.noop input-dim=1024 output-dim=128
component-node name=tdnnf7.affine component=tdnnf7.affine input=tdnnf7.linear input-dim=128 output-dim=1024
component-node name=tdnnf7.relu component=tdnnf7.relu input=tdnnf7.affine input-dim=1024 output-dim=1024
component-node name=tdnnf7.batchnorm component=tdnnf7.batchnorm input=tdnnf7.relu input-dim=1024 output-dim=1024
component-node name=tdnnf7.dropout component=tdnnf7.dropout input=tdnnf7.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf7.noop component=tdnnf7.noop input=Sum(Scale(0.66, tdnnf6.noop), tdnnf7.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf8.linear component=tdnnf8.linear input=tdnnf7.noop input-dim=1024 output-dim=128
component-node name=tdnnf8.affine component=tdnnf8.affine input=tdnnf8.linear input-dim=128 output-dim=1024
component-node name=tdnnf8.relu component=tdnnf8.relu input=tdnnf8.affine input-dim=1024 output-dim=1024
component-node name=tdnnf8.batchnorm component=tdnnf8.batchnorm input=tdnnf8.relu input-dim=1024 output-dim=1024
component-node name=tdnnf8.dropout component=tdnnf8.dropout input=tdnnf8.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf8.noop component=tdnnf8.noop input=Sum(Scale(0.66, tdnnf7.noop), tdnnf8.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf9.linear component=tdnnf9.linear input=tdnnf8.noop input-dim=1024 output-dim=128
component-node name=tdnnf9.affine component=tdnnf9.affine input=tdnnf9.linear input-dim=128 output-dim=1024
component-node name=tdnnf9.relu component=tdnnf9.relu input=tdnnf9.affine input-dim=1024 output-dim=1024
component-node name=tdnnf9.batchnorm component=tdnnf9.batchnorm input=tdnnf9.relu input-dim=1024 output-dim=1024
component-node name=tdnnf9.dropout component=tdnnf9.dropout input=tdnnf9.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf9.noop component=tdnnf9.noop input=Sum(Scale(0.66, tdnnf8.noop), tdnnf9.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf10.linear component=tdnnf10.linear input=tdnnf9.noop input-dim=1024 output-dim=128
component-node name=tdnnf10.affine component=tdnnf10.affine input=tdnnf10.linear input-dim=128 output-dim=1024
component-node name=tdnnf10.relu component=tdnnf10.relu input=tdnnf10.affine input-dim=1024 output-dim=1024
component-node name=tdnnf10.batchnorm component=tdnnf10.batchnorm input=tdnnf10.relu input-dim=1024 output-dim=1024
component-node name=tdnnf10.dropout component=tdnnf10.dropout input=tdnnf10.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf10.noop component=tdnnf10.noop input=Sum(Scale(0.66, tdnnf9.noop), tdnnf10.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf11.linear component=tdnnf11.linear input=tdnnf10.noop input-dim=1024 output-dim=128
component-node name=tdnnf11.affine component=tdnnf11.affine input=tdnnf11.linear input-dim=128 output-dim=1024
component-node name=tdnnf11.relu component=tdnnf11.relu input=tdnnf11.affine input-dim=1024 output-dim=1024
component-node name=tdnnf11.batchnorm component=tdnnf11.batchnorm input=tdnnf11.relu input-dim=1024 output-dim=1024
component-node name=tdnnf11.dropout component=tdnnf11.dropout input=tdnnf11.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf11.noop component=tdnnf11.noop input=Sum(Scale(0.66, tdnnf10.noop), tdnnf11.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf12.linear component=tdnnf12.linear input=tdnnf11.noop input-dim=1024 output-dim=128
component-node name=tdnnf12.affine component=tdnnf12.affine input=tdnnf12.linear input-dim=128 output-dim=1024
component-node name=tdnnf12.relu component=tdnnf12.relu input=tdnnf12.affine input-dim=1024 output-dim=1024
component-node name=tdnnf12.batchnorm component=tdnnf12.batchnorm input=tdnnf12.relu input-dim=1024 output-dim=1024
component-node name=tdnnf12.dropout component=tdnnf12.dropout input=tdnnf12.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf12.noop component=tdnnf12.noop input=Sum(Scale(0.66, tdnnf11.noop), tdnnf12.dropout) input-dim=1024 output-dim=1024
component-node name=tdnnf13.linear component=tdnnf13.linear input=tdnnf12.noop input-dim=1024 output-dim=128
component-node name=tdnnf13.affine component=tdnnf13.affine input=tdnnf13.linear input-dim=128 output-dim=1024
component-node name=tdnnf13.relu component=tdnnf13.relu input=tdnnf13.affine input-dim=1024 output-dim=1024
component-node name=tdnnf13.batchnorm component=tdnnf13.batchnorm input=tdnnf13.relu input-dim=1024 output-dim=1024
component-node name=tdnnf13.dropout component=tdnnf13.dropout input=tdnnf13.batchnorm input-dim=1024 output-dim=1024
component-node name=tdnnf13.noop component=tdnnf13.noop input=Sum(Scale(0.66, tdnnf12.noop), tdnnf13.dropout) input-dim=1024 output-dim=1024
component-node name=prefinal-l component=prefinal-l input=tdnnf13.noop input-dim=1024 output-dim=256
component-node name=prefinal-chain.affine component=prefinal-chain.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-chain.relu component=prefinal-chain.relu input=prefinal-chain.affine input-dim=1024 output-dim=1024
component-node name=prefinal-chain.batchnorm1 component=prefinal-chain.batchnorm1 input=prefinal-chain.relu input-dim=1024 output-dim=1024
component-node name=prefinal-chain.linear component=prefinal-chain.linear input=prefinal-chain.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-chain.batchnorm2 component=prefinal-chain.batchnorm2 input=prefinal-chain.linear input-dim=256 output-dim=256
component-node name=output.affine component=output.affine input=prefinal-chain.batchnorm2 input-dim=256 output-dim=2824
output-node name=output input=output.affine dim=2824 objective=linear
component-node name=prefinal-xent.affine component=prefinal-xent.affine input=prefinal-l input-dim=256 output-dim=1024
component-node name=prefinal-xent.relu component=prefinal-xent.relu input=prefinal-xent.affine input-dim=1024 output-dim=1024
component-node name=prefinal-xent.batchnorm1 component=prefinal-xent.batchnorm1 input=prefinal-xent.relu input-dim=1024 output-dim=1024
component-node name=prefinal-xent.linear component=prefinal-xent.linear input=prefinal-xent.batchnorm1 input-dim=1024 output-dim=256
component-node name=prefinal-xent.batchnorm2 component=prefinal-xent.batchnorm2 input=prefinal-xent.linear input-dim=256 output-dim=256
component-node name=output-xent.affine component=output-xent.affine input=prefinal-xent.batchnorm2 input-dim=256 output-dim=2824
component-node name=output-xent.log-softmax component=output-xent.log-softmax input=output-xent.affine input-dim=2824 output-dim=2824
output-node name=output-xent input=output-xent.log-softmax dim=2824 objective=linear
component name=lda type=FixedAffineComponent, input-dim=220, output-dim=220, linear-params-rms=0.005763, bias-{mean,stddev}=-0.0009489,0.01289
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=220, output-dim=1024, learning-rate=0.000708549, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.02778, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.26,0.28,0.28,0.29 0.30,0.31,0.38,0.45,0.53 0.63,0.75,0.78,1.0), mean=0.396, stddev=0.113], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.70,0.71,0.72,0.73 0.74,0.75,0.82,0.97,1.1 1.2,1.3,1.4,1.5), mean=0.875, stddev=0.158], bias-{mean,stddev}=-0.004874,0.2754, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=3.17e+06, self-repaired-proportion=0.766148, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.04,0.28,0.45 0.58,0.73,0.81,1.3), mean=0.138, stddev=0.203], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.48,1.0,1.0 1.0,1.0,1.0,1.0), mean=0.483, stddev=0.457], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.04,0.04,0.05 0.05,0.06,0.07,0.10,0.13 0.15,0.19,0.20,0.27), mean=0.0821, stddev=0.0326], oderiv-count=4.71622e+06
component name=tdnn1.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=47897.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.04,0.23,0.36 0.46,0.58,0.65,1.0), mean=0.111, stddev=0.162], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.04,0.06,0.07 0.08,0.09,0.09,0.10), mean=0.0332, stddev=0.0304]
component name=tdnn1.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf2.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000708549, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.01847, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.82,0.83,0.83,0.83 0.83,0.83,0.84,0.84,0.84 0.84,0.85,0.85,0.85), mean=0.836, stddev=0.00484], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.14,0.14,0.15 0.15,0.16,0.20,0.24,0.27 0.29,0.32,0.34,0.43), mean=0.204, stddev=0.0457], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000708549, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.02212, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.24,0.27,0.27,0.29 0.30,0.31,0.34,0.39,0.42 0.44,0.46,0.47,0.54), mean=0.351, stddev=0.0461], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.66,0.66,0.67 0.67,0.69,0.71,0.73,0.74 0.75,0.76,0.77,0.77), mean=0.707, stddev=0.025], bias-{mean,stddev}=-0.01076,0.2873, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=3.1e+06, self-repaired-proportion=0.0333751, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.006,0.02,0.04 0.06,0.09,0.20,0.37,0.49 0.58,0.65,0.75,1.3), mean=0.238, stddev=0.173], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.03,0.07,0.12 0.17,0.25,0.49,0.76,0.86 0.92,0.94,0.96,1.0), mean=0.502, stddev=0.252], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.003,0.004,0.004 0.005,0.006,0.008,0.01,0.02 0.02,0.03,0.04,0.05), mean=0.0099, stddev=0.00595], oderiv-count=4.45485e+06
component name=tdnnf2.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=47385.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-05,0.009,0.02,0.04 0.06,0.09,0.17,0.31,0.40 0.48,0.54,0.59,0.99), mean=0.205, stddev=0.137], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.05,0.09,0.14 0.17,0.21,0.26,0.31,0.34 0.36,0.38,0.40,0.45), mean=0.256, stddev=0.0681]
component name=tdnnf2.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf2.noop type=NoOpComponent, dim=1024
component name=tdnnf3.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000708549, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.01541, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.69,0.69,0.69,0.69 0.70,0.70,0.70,0.70,0.70 0.70,0.70,0.70,0.70), mean=0.697, stddev=0.00156], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.13,0.13,0.14 0.14,0.15,0.17,0.19,0.20 0.21,0.22,0.23,0.25), mean=0.173, stddev=0.0236], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000708549, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.02087, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.26,0.27,0.28,0.29 0.30,0.31,0.33,0.35,0.37 0.38,0.39,0.40,0.48), mean=0.333, stddev=0.0268], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.63,0.63,0.64 0.64,0.65,0.67,0.68,0.69 0.70,0.71,0.71,0.73), mean=0.668, stddev=0.0181], bias-{mean,stddev}=-0.007558,0.2917, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=3.17e+06, self-repaired-proportion=0.0091314, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.03,0.04,0.07 0.09,0.12,0.23,0.41,0.53 0.62,0.73,0.76,1.2), mean=0.273, stddev=0.176], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.08,0.10,0.15 0.20,0.27,0.49,0.71,0.81 0.86,0.90,0.93,0.97), mean=0.495, stddev=0.223], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.003,0.003 0.004,0.004,0.005,0.007,0.009 0.01,0.01,0.02,0.03), mean=0.00605, stddev=0.00276], oderiv-count=4.32518e+06
component name=tdnnf3.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=46873.9, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.04,0.04,0.06 0.08,0.11,0.20,0.34,0.44 0.51,0.59,0.62,0.93), mean=0.233, stddev=0.141], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.15,0.17,0.20 0.22,0.25,0.31,0.37,0.41 0.43,0.46,0.48,0.55), mean=0.314, stddev=0.0713]
component name=tdnnf3.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf3.noop type=NoOpComponent, dim=1024
component name=tdnnf4.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000708549, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-1,0, linear-params-rms=0.01401, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.63,0.63,0.63 0.63,0.63,0.63,0.63,0.64 0.64,0.64,0.64,0.64), mean=0.634, stddev=0.0014], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.13,0.13,0.13 0.14,0.14,0.16,0.17,0.18 0.19,0.19,0.20,0.25), mean=0.158, stddev=0.0165], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000708549, l2-regularize=0.008, max-change=0.75, time-offsets=0,1, linear-params-rms=0.02053, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.26,0.28,0.28,0.29 0.30,0.31,0.33,0.35,0.36 0.37,0.38,0.38,0.45), mean=0.328, stddev=0.0226], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.61,0.61,0.62,0.63 0.63,0.64,0.66,0.67,0.68 0.69,0.70,0.70,0.78), mean=0.657, stddev=0.0208], bias-{mean,stddev}=0.002156,0.319, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=1.03e+06, self-repaired-proportion=0.0119925, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(9e-05,0.03,0.04,0.06 0.09,0.13,0.25,0.43,0.57 0.70,0.78,0.90,1.4), mean=0.295, stddev=0.197], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0006,0.07,0.09,0.13 0.20,0.28,0.49,0.71,0.82 0.88,0.92,0.94,0.99), mean=0.498, stddev=0.227], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.005,0.005,0.005 0.006,0.006,0.008,0.01,0.01 0.01,0.02,0.02,0.09), mean=0.00898, stddev=0.00397], oderiv-count=1.49043e+06
component name=tdnnf4.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=15624.6, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0006,0.03,0.04,0.06 0.09,0.12,0.21,0.36,0.47 0.58,0.65,0.73,1.1), mean=0.249, stddev=0.159], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.14,0.17,0.21 0.24,0.27,0.33,0.40,0.43 0.46,0.49,0.50,0.56), mean=0.334, stddev=0.075]
component name=tdnnf4.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf4.noop type=NoOpComponent, dim=1024
component name=tdnnf5.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000708549, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=0, linear-params-rms=0.01684, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.53,0.53,0.53,0.54 0.54,0.54,0.54,0.54,0.54 0.54,0.54,0.54,0.55), mean=0.539, stddev=0.00247], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.16,0.16,0.17 0.17,0.18,0.19,0.20,0.21 0.21,0.22,0.22,0.24), mean=0.19, stddev=0.0145], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000708549, l2-regularize=0.008, max-change=0.75, time-offsets=0, linear-params-rms=0.02753, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.23,0.25,0.26,0.27 0.28,0.29,0.31,0.33,0.34 0.35,0.36,0.37,0.38), mean=0.31, stddev=0.0247], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.83,0.83,0.84,0.84 0.85,0.86,0.88,0.90,0.91 0.91,0.92,0.92,0.96), mean=0.881, stddev=0.0223], bias-{mean,stddev}=-0.002045,0.3024, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.87e+05, self-repaired-proportion=0.0359818, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-05,0.01,0.02,0.04 0.06,0.09,0.20,0.39,0.51 0.66,0.79,0.84,1.2), mean=0.251, stddev=0.193], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.03,0.06,0.11 0.16,0.24,0.48,0.75,0.83 0.90,0.95,0.96,1.0), mean=0.489, stddev=0.25], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.005,0.005,0.006 0.006,0.007,0.009,0.01,0.02 0.02,0.03,0.03,0.09), mean=0.0109, stddev=0.00671], oderiv-count=1.54957e+06
component name=tdnnf5.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=15624.6, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-07,0.01,0.02,0.03 0.05,0.08,0.16,0.32,0.42 0.53,0.65,0.69,0.96), mean=0.209, stddev=0.158], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(9e-05,0.07,0.10,0.14 0.17,0.19,0.27,0.34,0.37 0.39,0.42,0.45,0.53), mean=0.266, stddev=0.0804]
component name=tdnnf5.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf5.noop type=NoOpComponent, dim=1024
component name=tdnnf6.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000708549, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01316, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.59,0.59,0.59,0.59 0.59,0.59,0.60,0.60,0.60 0.60,0.60,0.60,0.60), mean=0.595, stddev=0.00093], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.12,0.12,0.13 0.13,0.14,0.15,0.16,0.17 0.17,0.18,0.18,0.20), mean=0.148, stddev=0.0129], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000708549, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.02026, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.26,0.28,0.29,0.29 0.30,0.31,0.32,0.34,0.35 0.35,0.36,0.37,0.39), mean=0.324, stddev=0.0184], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.61,0.61,0.62,0.62 0.63,0.63,0.65,0.66,0.67 0.68,0.68,0.69,0.71), mean=0.648, stddev=0.0167], bias-{mean,stddev}=-0.01286,0.2903, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.49e+05, self-repaired-proportion=0.00395726, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.04,0.04,0.07 0.10,0.14,0.25,0.42,0.53 0.62,0.72,0.78,1.3), mean=0.286, stddev=0.178], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.08,0.10,0.16 0.20,0.29,0.48,0.68,0.77 0.82,0.88,0.90,0.98), mean=0.483, stddev=0.206], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.004,0.004 0.005,0.005,0.007,0.01,0.01 0.01,0.02,0.02,0.03), mean=0.00771, stddev=0.00307], oderiv-count=1.50982e+06
component name=tdnnf6.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=15112.6, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.03,0.04,0.06 0.08,0.12,0.21,0.35,0.44 0.51,0.59,0.64,1.1), mean=0.24, stddev=0.145], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.15,0.17,0.20 0.24,0.27,0.34,0.40,0.44 0.46,0.49,0.51,0.57), mean=0.338, stddev=0.0788]
component name=tdnnf6.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf6.noop type=NoOpComponent, dim=1024
component name=tdnnf7.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000708549, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01294, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.58,0.58,0.58,0.58 0.58,0.58,0.59,0.59,0.59 0.59,0.59,0.59,0.59), mean=0.586, stddev=0.00147], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.12,0.12,0.13 0.13,0.14,0.14,0.16,0.16 0.17,0.18,0.18,0.21), mean=0.146, stddev=0.0126], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000708549, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.02023, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.27,0.28,0.29,0.29 0.30,0.31,0.32,0.34,0.35 0.35,0.36,0.37,0.38), mean=0.323, stddev=0.0181], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.59,0.60,0.61,0.62 0.62,0.63,0.65,0.66,0.67 0.68,0.69,0.70,0.70), mean=0.647, stddev=0.0178], bias-{mean,stddev}=0.00112,0.3097, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.27e+05, self-repaired-proportion=0.00508658, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.04,0.05,0.07 0.09,0.13,0.25,0.43,0.56 0.67,0.81,0.90,1.3), mean=0.294, stddev=0.195], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.09,0.11,0.15 0.20,0.28,0.48,0.70,0.79 0.85,0.91,0.93,0.97), mean=0.491, stddev=0.219], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.004,0.004 0.005,0.005,0.007,0.01,0.01 0.01,0.02,0.02,0.02), mean=0.00758, stddev=0.00303], oderiv-count=1.4295e+06
component name=tdnnf7.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=14600.6, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.03,0.04,0.06 0.08,0.11,0.21,0.37,0.47 0.56,0.68,0.75,1.0), mean=0.25, stddev=0.162], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.15,0.16,0.21 0.23,0.26,0.34,0.41,0.45 0.47,0.50,0.52,0.58), mean=0.34, stddev=0.0837]
component name=tdnnf7.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf7.noop type=NoOpComponent, dim=1024
component name=tdnnf8.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000708549, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.0128, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.58,0.58,0.58,0.58 0.58,0.58,0.58,0.58,0.58 0.58,0.58,0.58,0.58), mean=0.579, stddev=0.00165], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.12,0.12,0.12 0.13,0.13,0.14,0.15,0.16 0.17,0.17,0.18,0.20), mean=0.144, stddev=0.0132], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000708549, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.02019, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.27,0.28,0.29,0.29 0.30,0.31,0.32,0.34,0.35 0.35,0.36,0.36,0.39), mean=0.322, stddev=0.0182], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.61,0.61,0.61,0.62 0.62,0.63,0.64,0.66,0.67 0.68,0.68,0.68,0.69), mean=0.646, stddev=0.0176], bias-{mean,stddev}=-0.01226,0.3142, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.73e+05, self-repaired-proportion=0.011204, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.03,0.04,0.06 0.08,0.13,0.25,0.42,0.56 0.65,0.85,0.90,1.2), mean=0.291, stddev=0.194], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.06,0.08,0.14 0.18,0.27,0.48,0.69,0.79 0.85,0.91,0.94,0.96), mean=0.484, stddev=0.22], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.004,0.004 0.005,0.005,0.007,0.01,0.01 0.01,0.02,0.02,0.03), mean=0.00778, stddev=0.00348], oderiv-count=1.37382e+06
component name=tdnnf8.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=14088.6, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.03,0.03,0.05 0.07,0.11,0.21,0.35,0.46 0.54,0.70,0.73,0.97), mean=0.243, stddev=0.159], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.14,0.16,0.19 0.22,0.26,0.33,0.41,0.44 0.47,0.51,0.52,0.57), mean=0.334, stddev=0.0857]
component name=tdnnf8.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf8.noop type=NoOpComponent, dim=1024
component name=tdnnf9.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000708549, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01289, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.58,0.58,0.58,0.58 0.58,0.58,0.58,0.58,0.58 0.58,0.58,0.58,0.58), mean=0.583, stddev=-nan], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.12,0.12,0.12 0.13,0.13,0.14,0.16,0.16 0.17,0.18,0.18,0.22), mean=0.145, stddev=0.0139], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000708549, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.02018, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.27,0.28,0.28,0.29 0.30,0.31,0.32,0.34,0.35 0.35,0.36,0.37,0.38), mean=0.322, stddev=0.0179], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.60,0.61,0.61,0.61 0.62,0.63,0.65,0.66,0.67 0.68,0.68,0.69,0.71), mean=0.646, stddev=0.0187], bias-{mean,stddev}=-0.007556,0.3076, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=9.34e+05, self-repaired-proportion=0.00761555, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0003,0.03,0.04,0.06 0.08,0.13,0.25,0.42,0.55 0.64,0.77,0.87,1.2), mean=0.289, stddev=0.188], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.08,0.09,0.13 0.19,0.28,0.49,0.70,0.78 0.84,0.89,0.91,0.98), mean=0.485, stddev=0.217], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.004,0.004 0.005,0.005,0.007,0.009,0.01 0.01,0.02,0.02,0.07), mean=0.00767, stddev=0.00383], oderiv-count=1.34464e+06
component name=tdnnf9.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=13576.6, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.03,0.03,0.05 0.07,0.11,0.21,0.36,0.46 0.53,0.64,0.72,1.0), mean=0.242, stddev=0.154], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.13,0.16,0.19 0.21,0.26,0.34,0.40,0.44 0.46,0.49,0.50,0.55), mean=0.331, stddev=0.0844]
component name=tdnnf9.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf9.noop type=NoOpComponent, dim=1024
component name=tdnnf10.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000708549, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01285, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.58,0.58,0.58,0.58 0.58,0.58,0.58,0.58,0.58 0.58,0.58,0.58,0.58), mean=0.581, stddev=0.000173], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.12,0.12,0.12 0.13,0.13,0.14,0.16,0.16 0.17,0.18,0.18,0.25), mean=0.145, stddev=0.0138], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000708549, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.02019, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.26,0.29,0.29,0.30 0.30,0.31,0.32,0.34,0.34 0.35,0.36,0.36,0.39), mean=0.323, stddev=0.017], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.59,0.61,0.61,0.62 0.62,0.63,0.65,0.66,0.67 0.68,0.68,0.69,0.70), mean=0.646, stddev=0.0193], bias-{mean,stddev}=0.01723,0.3085, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.71e+05, self-repaired-proportion=0.011671, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.04,0.04,0.07 0.09,0.14,0.26,0.46,0.58 0.67,0.82,0.91,1.2), mean=0.306, stddev=0.198], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.07,0.10,0.15 0.21,0.29,0.50,0.73,0.80 0.86,0.92,0.94,0.99), mean=0.504, stddev=0.222], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.004,0.004 0.005,0.005,0.007,0.009,0.01 0.01,0.02,0.02,0.03), mean=0.00729, stddev=0.00303], oderiv-count=1.25018e+06
component name=tdnnf10.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=13064.6, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.03,0.04,0.06 0.08,0.12,0.22,0.38,0.47 0.55,0.67,0.75,0.95), mean=0.255, stddev=0.161], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.15,0.18,0.20 0.23,0.26,0.34,0.40,0.44 0.47,0.49,0.51,0.56), mean=0.336, stddev=0.0807]
component name=tdnnf10.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf10.noop type=NoOpComponent, dim=1024
component name=tdnnf11.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000708549, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01295, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.58,0.58,0.58,0.58 0.58,0.58,0.59,0.59,0.59 0.59,0.59,0.59,0.59), mean=0.586, stddev=0.00152], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.12,0.12,0.13 0.13,0.13,0.14,0.16,0.16 0.17,0.18,0.18,0.23), mean=0.146, stddev=0.0139], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000708549, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.02026, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.27,0.28,0.29,0.29 0.30,0.31,0.32,0.34,0.35 0.35,0.36,0.36,0.38), mean=0.324, stddev=0.018], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.59,0.60,0.61,0.62 0.62,0.63,0.65,0.66,0.67 0.68,0.69,0.70,0.71), mean=0.648, stddev=0.0203], bias-{mean,stddev}=-0.01862,0.3165, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.67e+05, self-repaired-proportion=0.00887816, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.03,0.04,0.06 0.08,0.11,0.24,0.43,0.55 0.65,0.76,0.81,1.1), mean=0.282, stddev=0.189], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.07,0.10,0.14 0.18,0.25,0.48,0.69,0.80 0.85,0.90,0.93,0.98), mean=0.481, stddev=0.226], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.004,0.004 0.005,0.005,0.007,0.009,0.01 0.01,0.02,0.02,0.05), mean=0.00756, stddev=0.00328], oderiv-count=1.18509e+06
component name=tdnnf11.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=12552.6, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.007,0.02,0.04,0.05 0.07,0.10,0.21,0.36,0.46 0.54,0.63,0.67,0.93), mean=0.239, stddev=0.156], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.13,0.16,0.19 0.22,0.25,0.33,0.39,0.43 0.46,0.48,0.49,0.55), mean=0.324, stddev=0.0811]
component name=tdnnf11.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf11.noop type=NoOpComponent, dim=1024
component name=tdnnf12.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000708549, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01311, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.59,0.59,0.59,0.59 0.59,0.59,0.59,0.59,0.59 0.59,0.59,0.59,0.59), mean=0.593, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.12,0.12,0.13 0.13,0.14,0.15,0.16,0.17 0.17,0.18,0.19,0.22), mean=0.148, stddev=0.0145], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000708549, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.02029, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.27,0.29,0.29,0.30 0.30,0.31,0.32,0.34,0.35 0.35,0.36,0.36,0.37), mean=0.324, stddev=0.0166], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.60,0.61,0.61,0.62 0.62,0.63,0.65,0.67,0.68 0.69,0.70,0.71,0.71), mean=0.649, stddev=0.0208], bias-{mean,stddev}=-0.009604,0.3072, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.92e+05, self-repaired-proportion=0.00917682, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.04,0.05,0.06 0.09,0.13,0.25,0.43,0.55 0.67,0.80,0.87,1.2), mean=0.29, stddev=0.19], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.09,0.11,0.14 0.19,0.28,0.47,0.69,0.79 0.85,0.90,0.93,0.98), mean=0.486, stddev=0.219], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.004,0.004 0.005,0.005,0.007,0.009,0.01 0.01,0.01,0.02,0.03), mean=0.00718, stddev=0.00252], oderiv-count=1.17638e+06
component name=tdnnf12.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=12040.6, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.03,0.05,0.06 0.08,0.12,0.21,0.36,0.46 0.56,0.66,0.71,0.94), mean=0.245, stddev=0.154], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.16,0.18,0.21 0.23,0.27,0.33,0.40,0.43 0.45,0.48,0.49,0.62), mean=0.332, stddev=0.0762]
component name=tdnnf12.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf12.noop type=NoOpComponent, dim=1024
component name=tdnnf13.linear type=TdnnComponent, input-dim=1024, output-dim=128, learning-rate=0.000708549, l2-regularize=0.008, max-change=0.75, orthonormal-constraint=-1, time-offsets=-3,0, linear-params-rms=0.01342, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.60,0.60,0.60,0.60 0.60,0.61,0.61,0.61,0.61 0.61,0.61,0.61,0.61), mean=0.607, stddev=0.00229], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.12,0.13,0.13 0.14,0.14,0.15,0.16,0.17 0.17,0.18,0.19,0.22), mean=0.151, stddev=0.0138], has-bias=false, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.affine type=TdnnComponent, input-dim=128, output-dim=1024, learning-rate=0.000708549, l2-regularize=0.008, max-change=0.75, time-offsets=0,3, linear-params-rms=0.02034, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.27,0.29,0.29,0.30 0.30,0.31,0.33,0.34,0.35 0.35,0.36,0.37,0.38), mean=0.325, stddev=0.0167], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.59,0.61,0.61,0.62 0.63,0.63,0.65,0.67,0.68 0.69,0.70,0.70,0.73), mean=0.65, stddev=0.0206], bias-{mean,stddev}=-0.005394,0.3049, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=7.02e+05, self-repaired-proportion=0.00404789, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0004,0.04,0.06,0.08 0.10,0.14,0.26,0.45,0.57 0.67,0.78,0.86,1.1), mean=0.303, stddev=0.186], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.09,0.12,0.17 0.21,0.29,0.47,0.69,0.78 0.82,0.89,0.91,0.95), mean=0.488, stddev=0.209], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.004,0.004 0.005,0.005,0.006,0.008,0.009 0.01,0.01,0.01,0.07), mean=0.00668, stddev=0.00287], oderiv-count=1.14195e+06
component name=tdnnf13.batchnorm type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11528.6, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0004,0.04,0.05,0.07 0.09,0.12,0.22,0.38,0.47 0.56,0.64,0.71,0.90), mean=0.257, stddev=0.152], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.19,0.20,0.23 0.25,0.28,0.35,0.41,0.45 0.48,0.51,0.53,0.63), mean=0.35, stddev=0.0773]
component name=tdnnf13.dropout type=GeneralDropoutComponent, dim=1024, block-dim=1024, dropout-proportion=0, continuous=true
component name=tdnnf13.noop type=NoOpComponent, dim=1024
component name=prefinal-l type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000708549, l2-regularize=0.008, max-change=0.75, params-rms=0.01802, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.57,0.57,0.57,0.57 0.57,0.58,0.58,0.58,0.58 0.58,0.58,0.58,0.58), mean=0.577, stddev=0.00131], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.24,0.26,0.26,0.27 0.27,0.28,0.29,0.30,0.31 0.31,0.32,0.32,0.34), mean=0.288, stddev=0.0145], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=0.000708549, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.02051, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.27,0.29,0.29,0.30 0.31,0.31,0.33,0.34,0.35 0.36,0.36,0.37,0.38), mean=0.328, stddev=0.0173], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.61,0.62,0.62,0.63 0.64,0.64,0.66,0.67,0.68 0.68,0.69,0.70,0.70), mean=0.656, stddev=0.0163], bias-{mean,stddev}=-0.005946,0.3082, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.01e+05, self-repaired-proportion=0.0212868, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-06,0.02,0.04,0.06 0.08,0.11,0.22,0.41,0.53 0.66,0.83,0.90,1.1), mean=0.274, stddev=0.194], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(6e-05,0.06,0.09,0.13 0.18,0.26,0.47,0.70,0.80 0.87,0.93,0.95,0.99), mean=0.484, stddev=0.23], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.004,0.005,0.005 0.005,0.006,0.008,0.01,0.01 0.02,0.02,0.02,0.06), mean=0.00913, stddev=0.00451], oderiv-count=1.09222e+06
component name=prefinal-chain.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11528.6, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(6e-06,0.03,0.03,0.05 0.08,0.11,0.20,0.35,0.44 0.55,0.68,0.74,0.92), mean=0.237, stddev=0.158], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0007,0.14,0.16,0.19 0.22,0.25,0.32,0.39,0.41 0.44,0.47,0.48,0.54), mean=0.318, stddev=0.0781]
component name=prefinal-chain.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000708549, l2-regularize=0.008, max-change=0.75, params-rms=0.01714, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.54,0.55,0.55,0.55 0.55,0.55,0.55,0.55,0.55 0.55,0.55,0.55,0.55), mean=0.548, stddev=0.0014], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.21,0.23,0.23,0.24 0.25,0.26,0.27,0.29,0.30 0.30,0.31,0.32,0.34), mean=0.274, stddev=0.019], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=11528.6, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-7e-08,-6e-08,-5e-08,-5e-08 -3e-08,-2e-08,2e-09,2e-08,3e-08 4e-08,5e-08,6e-08,8e-08), mean=7.24e-10, stddev=2.62e-08], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.67,0.69,0.70,0.71 0.73,0.74,0.78,0.82,0.83 0.85,0.86,0.86,0.88), mean=0.778, stddev=0.0407]
component name=output.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=2824, learning-rate=0.000708549, l2-regularize=0.002, max-change=1.5, linear-params-rms=0.01756, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.007,0.02,0.08 0.13,0.20,0.28,0.34,0.37 0.40,0.43,0.45,1.1), mean=0.265, stddev=0.0939], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.74,0.81,0.82,0.83 0.85,0.88,0.93,0.98,1.0 1.0,1.1,1.1,1.1), mean=0.931, stddev=0.0599], bias-{mean,stddev}=9.326e-05,0.0522, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=1024, learning-rate=0.000708549, l2-regularize=0.008, max-change=0.75, linear-params-rms=0.01863, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.25,0.26,0.26,0.27 0.28,0.28,0.30,0.31,0.32 0.33,0.33,0.34,0.36), mean=0.298, stddev=0.0172], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.55,0.56,0.56,0.57 0.58,0.58,0.60,0.61,0.62 0.62,0.63,0.64,0.65), mean=0.596, stddev=0.0165], bias-{mean,stddev}=-0.0009231,0.2965, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.relu type=RectifiedLinearComponent, dim=1024, self-repair-scale=1e-05, count=8.04e+05, self-repaired-proportion=0.037274, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-06,0.02,0.03,0.05 0.06,0.10,0.19,0.38,0.51 0.63,0.77,0.83,1.3), mean=0.247, stddev=0.185], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(5e-05,0.04,0.09,0.12 0.17,0.26,0.47,0.74,0.84 0.91,0.96,0.97,1.0), mean=0.493, stddev=0.246], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.003,0.003,0.005,0.006 0.006,0.007,0.008,0.02), mean=0.0038, stddev=0.00173], oderiv-count=1.12448e+06
component name=prefinal-xent.batchnorm1 type=BatchNormComponent, dim=1024, block-dim=1024, epsilon=0.001, target-rms=1, count=11528.6, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-09,0.02,0.03,0.04 0.05,0.08,0.16,0.31,0.42 0.51,0.63,0.68,1.0), mean=0.204, stddev=0.152], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-05,0.10,0.12,0.14 0.17,0.20,0.25,0.32,0.34 0.37,0.39,0.41,0.50), mean=0.254, stddev=0.0696]
component name=prefinal-xent.linear type=LinearComponent, input-dim=1024, output-dim=256, learning-rate=0.000708549, l2-regularize=0.008, max-change=0.75, params-rms=0.01122, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.36,0.36,0.36,0.36 0.36,0.36,0.36,0.36,0.36 0.36,0.36,0.36,0.36), mean=0.359, stddev=0.000405], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.14,0.15,0.15 0.16,0.17,0.18,0.19,0.20 0.20,0.21,0.21,0.22), mean=0.179, stddev=0.015], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.batchnorm2 type=BatchNormComponent, dim=256, block-dim=256, epsilon=0.001, target-rms=1, count=11528.6, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-5e-08,-4e-08,-3e-08,-3e-08 -2e-08,-1e-08,3e-10,1e-08,2e-08 2e-08,3e-08,3e-08,4e-08), mean=6.27e-11, stddev=1.57e-08], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.34,0.35,0.36,0.36 0.37,0.38,0.40,0.43,0.43 0.44,0.45,0.45,0.47), mean=0.403, stddev=0.0248]
component name=output-xent.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=2824, learning-rate=0.00354275, l2-regularize=0.002, learning-rate-factor=5, max-change=1.5, linear-params-rms=0.03191, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.02,0.03,0.04 0.08,0.17,0.48,0.67,0.76 0.82,0.88,0.91,1.2), mean=0.446, stddev=0.248], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.5,1.5 1.6,1.6,1.7,1.8,1.8 1.9,1.9,1.9,2.0), mean=1.69, stddev=0.109], bias-{mean,stddev}=9.735e-09,0.07903, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-xent.log-softmax type=LogSoftmaxComponent, dim=2824, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,2e-07,4e-05,0.0001 0.0002,0.0003,0.0007,0.001,0.002 0.003,0.004,0.004,0.04), mean=0.00098, stddev=0.00118], oderiv-count=1.10221e+06
nnet3-show-progress --use-gpu=no telugu_exp/chain_cleaned_1d/tdnn1d_sp/2.mdl telugu_exp/chain_cleaned_1d/tdnn1d_sp/3.mdl 
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:SelectGpuId():cu-device.cc:168) Manually selected to compute on CPU.
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:9.04941 tdnnf2.linear:4.54641 tdnnf2.affine:7.63035 tdnnf3.linear:4.24695 tdnnf3.affine:7.23246 tdnnf4.linear:3.98223 tdnnf4.affine:7.38619 tdnnf5.linear:3.37161 tdnnf5.affine:6.89287 tdnnf6.linear:3.72372 tdnnf6.affine:6.91679 tdnnf7.linear:3.56336 tdnnf7.affine:7.03037 tdnnf8.linear:3.4596 tdnnf8.affine:7.05275 tdnnf9.linear:3.39667 tdnnf9.affine:6.95333 tdnnf10.linear:3.28431 tdnnf10.affine:6.92444 tdnnf11.linear:3.22131 tdnnf11.affine:6.98626 tdnnf12.linear:3.17237 tdnnf12.affine:6.86587 tdnnf13.linear:3.11374 tdnnf13.affine:6.83218 prefinal-l:3.54148 prefinal-chain.affine:6.97092 prefinal-chain.linear:3.26913 output.affine:5.44797 prefinal-xent.affine:6.64083 prefinal-xent.linear:2.18417 output-xent.affine:5.53187 ]
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:15.86 tdnnf2.linear:9.45915 tdnnf2.affine:14.5904 tdnnf3.linear:7.88739 tdnnf3.affine:14.1912 tdnnf4.linear:7.17153 tdnnf4.affine:14.6529 tdnnf5.linear:6.0977 tdnnf5.affine:13.8914 tdnnf6.linear:6.73587 tdnnf6.affine:13.9303 tdnnf7.linear:6.62441 tdnnf7.affine:14.3347 tdnnf8.linear:6.55546 tdnnf8.affine:14.4254 tdnnf9.linear:6.59918 tdnnf9.affine:14.2726 tdnnf10.linear:6.57825 tdnnf10.affine:14.306 tdnnf11.linear:6.62973 tdnnf11.affine:14.5081 tdnnf12.linear:6.71368 tdnnf12.affine:14.3067 tdnnf13.linear:6.87107 tdnnf13.affine:14.2701 prefinal-l:9.22741 prefinal-chain.affine:14.4079 prefinal-chain.linear:8.77383 output.affine:15.1865 prefinal-xent.affine:13.4533 prefinal-xent.linear:5.74488 output-xent.affine:27.4511 ]
LOG (nnet3-show-progress[5.5.1035~1-3dd90]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.434919 tdnnf2.linear:0.461349 tdnnf2.affine:0.377991 tdnnf3.linear:0.504152 tdnnf3.affine:0.360378 tdnnf4.linear:0.508411 tdnnf4.affine:0.353325 tdnnf5.linear:0.488657 tdnnf5.affine:0.341405 tdnnf6.linear:0.500896 tdnnf6.affine:0.347999 tdnnf7.linear:0.485319 tdnnf7.affine:0.342808 tdnnf8.linear:0.476146 tdnnf8.affine:0.341273 tdnnf9.linear:0.467379 tdnnf9.affine:0.340375 tdnnf10.linear:0.452111 tdnnf10.affine:0.338012 tdnnf11.linear:0.444454 tdnnf11.affine:0.336821 tdnnf12.linear:0.435006 tdnnf12.affine:0.336182 tdnnf13.linear:0.421099 tdnnf13.affine:0.33565 prefinal-l:0.360016 prefinal-chain.affine:0.339266 prefinal-chain.linear:0.346266 output.affine:0.388481 prefinal-xent.affine:0.33624 prefinal-xent.linear:0.320769 output-xent.affine:0.209663 ]
# Accounting: time=1 threads=1
# Ended (code 0) at Tue Jul 19 04:34:04 EDT 2022, elapsed time 1 seconds
